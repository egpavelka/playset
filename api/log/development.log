  [1m[35m (136.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (102.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180617093213)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (80.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180617093213"]]
  [1m[35m (14.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-17 09:32:40.501472"], ["updated_at", "2018-06-17 09:32:40.501472"]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180617093213)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.0ms)[0m  [1m[35mDROP TABLE "users"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20180617093213"]]
  [1m[35m (37.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180617093213)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (109.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "password_digest" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180617093213"]]
  [1m[35m (12.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateTracks (20180617094622)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateTracks (20180617094622)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (100.8ms)[0m  [1m[35mCREATE TABLE "tracks" ("id" bigserial primary key, "source_path" character varying, "title" character varying, "artist" character varying, "album" character varying, "source_service" character varying, "source_service_id" character varying, "media_type" character varying, "submission_type" character varying, "submission_id" bigint, "user_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
)[0m
  [1m[35m (30.4ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_submission_type_and_submission_id" ON "tracks"  ("submission_type", "submission_id")[0m
  [1m[35m (31.9ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180617094622"]]
  [1m[35m (10.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/" for ::1 at 2018-06-19 03:35:44 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Rails::WelcomeController#index as HTML
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (1.6ms)
Completed 200 OK in 26ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-06-19 03:35:50 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphiql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql" for ::1 at 2018-06-19 03:35:57 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql(:json)" for ::1 at 2018-06-19 03:37:24 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql(:json)"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/" for ::1 at 2018-06-19 04:01:03 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Rails::WelcomeController#index as HTML
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (2.0ms)
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-06-19 04:01:09 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphiql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql" for ::1 at 2018-06-19 04:01:16 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql.json" for ::1 at 2018-06-19 04:01:39 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql.json"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "egpavelka"], ["email", "egpavelka@gmail.com"], ["name", "grace pavelka"], ["password_digest", "$2a$10$xAn5wFDq8FmatcSwjLDuxOI5R2N3ubkfgEuzwYDASgjDv.GqXFVO6"], ["created_at", "2018-06-19 08:07:51.895734"], ["updated_at", "2018-06-19 08:07:51.895734"]]
  [1m[35m (48.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Started GET "/graphql.json" for ::1 at 2018-06-19 04:08:03 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql.json"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql.json" for ::1 at 2018-06-19 04:56:48 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql.json"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql.xml" for ::1 at 2018-06-19 05:00:30 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql.xml"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api" for ::1 at 2018-06-19 05:00:49 -0400
  
ActionController::RoutingError (No route matches [GET] "/api"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql?query=user" for ::1 at 2018-06-19 05:06:32 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql?query=user" for ::1 at 2018-06-19 05:18:01 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql" for ::1 at 2018-06-19 05:18:05 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/" for ::1 at 2018-06-19 05:18:23 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Rails::WelcomeController#index as HTML
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (2.0ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-06-19 05:18:38 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphiql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/rails/info/routes?path=gr" for ::1 at 2018-06-19 05:18:56 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"gr"}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/rails/info/routes?path=gra[j" for ::1 at 2018-06-19 05:18:57 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"gra[j"}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
RegexpError (premature end of char-class: /gra[j/):
  
railties (5.1.6) lib/rails/info_controller.rb:25:in `match'
railties (5.1.6) lib/rails/info_controller.rb:25:in `block in routes'
railties (5.1.6) lib/rails/info_controller.rb:37:in `block in match_route'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
railties (5.1.6) lib/rails/info_controller.rb:36:in `select'
railties (5.1.6) lib/rails/info_controller.rb:36:in `match_route'
railties (5.1.6) lib/rails/info_controller.rb:25:in `routes'
actionpack (5.1.6) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.6) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.6) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.6) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.6) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.6) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:844:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
activerecord (5.1.6) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/rails/info/routes?path=gra[j" for ::1 at 2018-06-19 05:18:57 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"gra[j"}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RegexpError (premature end of char-class: /gra[j/):
  
railties (5.1.6) lib/rails/info_controller.rb:25:in `match'
railties (5.1.6) lib/rails/info_controller.rb:25:in `block in routes'
railties (5.1.6) lib/rails/info_controller.rb:37:in `block in match_route'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
railties (5.1.6) lib/rails/info_controller.rb:36:in `select'
railties (5.1.6) lib/rails/info_controller.rb:36:in `match_route'
railties (5.1.6) lib/rails/info_controller.rb:25:in `routes'
actionpack (5.1.6) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.6) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.6) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.6) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.6) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.6) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:844:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
activerecord (5.1.6) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/rails/info/routes?path=gra[p" for ::1 at 2018-06-19 05:19:00 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"gra[p"}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RegexpError (premature end of char-class: /gra[p/):
  
railties (5.1.6) lib/rails/info_controller.rb:25:in `match'
railties (5.1.6) lib/rails/info_controller.rb:25:in `block in routes'
railties (5.1.6) lib/rails/info_controller.rb:37:in `block in match_route'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
railties (5.1.6) lib/rails/info_controller.rb:36:in `select'
railties (5.1.6) lib/rails/info_controller.rb:36:in `match_route'
railties (5.1.6) lib/rails/info_controller.rb:25:in `routes'
actionpack (5.1.6) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.6) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.6) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.6) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.6) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.6) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:844:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
activerecord (5.1.6) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/rails/info/routes?path=gra[ph" for ::1 at 2018-06-19 05:19:01 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"gra[ph"}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
RegexpError (premature end of char-class: /gra[ph/):
  
railties (5.1.6) lib/rails/info_controller.rb:25:in `match'
railties (5.1.6) lib/rails/info_controller.rb:25:in `block in routes'
railties (5.1.6) lib/rails/info_controller.rb:37:in `block in match_route'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
railties (5.1.6) lib/rails/info_controller.rb:36:in `select'
railties (5.1.6) lib/rails/info_controller.rb:36:in `match_route'
railties (5.1.6) lib/rails/info_controller.rb:25:in `routes'
actionpack (5.1.6) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.6) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.6) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.6) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.6) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.6) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:844:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
activerecord (5.1.6) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/rails/info/routes?path=gra[ph" for ::1 at 2018-06-19 05:19:01 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"gra[ph"}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RegexpError (premature end of char-class: /gra[ph/):
  
railties (5.1.6) lib/rails/info_controller.rb:25:in `match'
railties (5.1.6) lib/rails/info_controller.rb:25:in `block in routes'
railties (5.1.6) lib/rails/info_controller.rb:37:in `block in match_route'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/routes.rb:32:in `each'
railties (5.1.6) lib/rails/info_controller.rb:36:in `select'
railties (5.1.6) lib/rails/info_controller.rb:36:in `match_route'
railties (5.1.6) lib/rails/info_controller.rb:25:in `routes'
actionpack (5.1.6) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.6) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.6) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.6) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.6) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.6) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.6) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.6) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.6) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:844:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
activerecord (5.1.6) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/rails/info/routes?path=graop" for ::1 at 2018-06-19 05:19:02 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"graop"}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/rails/info/routes?path=graphq" for ::1 at 2018-06-19 05:19:03 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"graphq"}
Completed 200 OK in 0ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/rails/info/routes?path=graphq;l" for ::1 at 2018-06-19 05:19:03 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"graphq", "l"=>nil}
Completed 200 OK in 1ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/rails/info/routes?path=graphq" for ::1 at 2018-06-19 05:19:04 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"graphq"}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/rails/info/routes?path=graphql" for ::1 at 2018-06-19 05:19:04 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"graphql"}
Completed 200 OK in 1ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/rails/info/routes?path=graphql" for ::1 at 2018-06-19 05:19:05 -0400
Processing by Rails::InfoController#routes as */*
  Parameters: {"path"=>"graphql"}
Completed 200 OK in 0ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started OPTIONS "/graphql" for ::1 at 2018-06-19 05:58:47 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2018-06-19 06:00:07 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphiql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/favicon.ico" for ::1 at 2018-06-19 06:00:07 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql" for ::1 at 2018-06-19 06:03:59 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql/user" for ::1 at 2018-06-19 06:04:12 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql/user"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql/users" for ::1 at 2018-06-19 06:04:14 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql/users"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql/users.json" for ::1 at 2018-06-19 06:04:20 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql/users.json"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/users" for ::1 at 2018-06-19 06:05:04 -0400
  
ActionController::RoutingError (No route matches [GET] "/users"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/user" for ::1 at 2018-06-19 06:05:06 -0400
  
ActionController::RoutingError (No route matches [GET] "/user"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-06-19 06:09:56 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/query" for ::1 at 2018-06-19 06:11:12 -0400
  
ActionController::RoutingError (No route matches [GET] "/query"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/query" for ::1 at 2018-06-19 06:12:21 -0400
  
Started GET "/query" for ::1 at 2018-06-19 06:12:31 -0400
ActionController::RoutingError (No route matches [GET] "/query"):
  
  
ActionController::RoutingError (No route matches [GET] "/query"):
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql?query=1" for ::1 at 2018-06-19 06:17:50 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started OPTIONS "/graphql" for ::1 at 2018-06-19 08:10:14 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql?query=user" for ::1 at 2018-06-19 08:15:28 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql?query=users" for ::1 at 2018-06-19 08:15:32 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-06-19 08:15:34 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-06-21 05:34:48 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2018-06-21 05:35:09 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1.0ms)
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.0ms)


Started GET "/stylesheets/graphiql/rails/application.css" for ::1 at 2018-06-21 05:35:09 -0400
Started GET "/javascripts/graphiql/rails/application.js" for ::1 at 2018-06-21 05:35:09 -0400
  
  
ActionController::RoutingError (No route matches [GET] "/stylesheets/graphiql/rails/application.css"):
ActionController::RoutingError (No route matches [GET] "/javascripts/graphiql/rails/application.js"):
  
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/stylesheets/graphiql/rails/application.css" for ::1 at 2018-06-21 05:35:32 -0400
  
ActionController::RoutingError (No route matches [GET] "/stylesheets/graphiql/rails/application.css"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-06-21 05:35:50 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/" for ::1 at 2018-06-21 05:43:50 -0400
Processing by Rails::WelcomeController#index as HTML
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (1.6ms)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-06-21 05:43:54 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (0.9ms)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started GET "/stylesheets/graphiql/rails/application.css" for ::1 at 2018-06-21 05:43:54 -0400
  
ActionController::RoutingError (No route matches [GET] "/stylesheets/graphiql/rails/application.css"):
  
Started GET "/javascripts/graphiql/rails/application.js" for ::1 at 2018-06-21 05:43:54 -0400
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  
ActionController::RoutingError (No route matches [GET] "/javascripts/graphiql/rails/application.js"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphql" for ::1 at 2018-06-21 05:44:15 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2018-06-21 08:23:34 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (716.0ms)
Completed 200 OK in 719ms (Views: 718.6ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-fa4775202d6c78a6af9448dcc39c5299ea2c787d166eb02335c15bd305d9a65b.css" for ::1 at 2018-06-21 08:23:35 -0400
Started GET "/assets/graphiql/rails/application-b6a30198b9218ac2ea9d73e507a82cebc524bd72742430db2ea4e360a31618ce.js" for ::1 at 2018-06-21 08:23:35 -0400
Started POST "/graphql" for ::1 at 2018-06-21 08:23:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 53ms (Views: 14.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:23:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allTracks {\n  id\n  title\n  artist\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allTracks {\n  id\n  title\n  artist\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:25:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allUsers {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allUsers {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 16ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:25:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allUsers {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allUsers {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:25:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:25:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:25:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user('1') {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user('1') {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:26:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:27:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id:'1') {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id:'1') {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:27:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id:1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id:1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 84ms (Views: 0.2ms | ActiveRecord: 4.1ms)


Started GET "/" for ::1 at 2018-06-21 08:29:01 -0400
Started GET "/graphiql" for ::1 at 2018-06-21 08:29:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (6.5ms)
Completed 200 OK in 11ms (Views: 9.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:29:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 44ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started GET "/" for ::1 at 2018-06-21 08:29:06 -0400
Started GET "/graphiql" for ::1 at 2018-06-21 08:29:06 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:29:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 57ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started GET "/" for ::1 at 2018-06-21 08:32:13 -0400
Started GET "/graphiql" for ::1 at 2018-06-21 08:32:13 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:32:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 34ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:34:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:38:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{tracks {\n  id\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{tracks {\n  id\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:38:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id: '1') {\n  id\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id: '1') {\n  id\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:38:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id: 1) {\n  id\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id: 1) {\n  id\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:38:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id: 1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id: 1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-06-21 08:45:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id: 1) {\n  username\n  email\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id: 1) {\n  username\n  email\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/" for ::1 at 2018-07-01 11:49:29 -0400
Started GET "/graphiql" for ::1 at 2018-07-01 11:49:29 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (184.9ms)
Completed 200 OK in 218ms (Views: 187.6ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-fa4775202d6c78a6af9448dcc39c5299ea2c787d166eb02335c15bd305d9a65b.css" for ::1 at 2018-07-01 11:49:29 -0400
Started GET "/assets/graphiql/rails/application-b6a30198b9218ac2ea9d73e507a82cebc524bd72742430db2ea4e360a31618ce.js" for ::1 at 2018-07-01 11:49:29 -0400
Started POST "/graphql" for ::1 at 2018-07-01 11:49:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 50ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 11:50:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 32ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 11:50:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user(id:1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user(id:1) {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 32ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started GET "/" for ::1 at 2018-07-01 11:58:38 -0400
Started GET "/graphiql" for ::1 at 2018-07-01 11:58:38 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 11:58:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 60ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/graphql" for ::1 at 2018-07-01 12:19:52 -0400
  [1m[35m (31.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-01 12:20:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 33ms (Views: 3.7ms | ActiveRecord: 0.0ms)


Started OPTIONS "/graphql" for ::1 at 2018-07-01 12:30:21 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-01 12:31:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:31:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{user {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{user {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:34:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:14: syntax error, unexpected ':'
  def users():
              ^):
  
app/graphql/types/query_type.rb:14: syntax error, unexpected ':'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Started GET "/graphiql" for ::1 at 2018-07-01 12:46:04 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (259.0ms)
Completed 200 OK in 262ms (Views: 261.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:46:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:16: syntax error, unexpected ':', expecting ';' or '\n'
  def users:
            ^
/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:19: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/query_type.rb:16: syntax error, unexpected ':', expecting ';' or '\n'
app/graphql/types/query_type.rb:19: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:46:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-01 12:47:23 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:47:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:16: syntax error, unexpected ':', expecting ';' or '\n'
  def users:
            ^
/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:19: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/query_type.rb:16: syntax error, unexpected ':', expecting ';' or '\n'
app/graphql/types/query_type.rb:19: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:47:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:47:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-01 12:51:09 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (4.7ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:51:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:16: syntax error, unexpected ':', expecting ';' or '\n'
  def users:
            ^
/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:19: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/query_type.rb:16: syntax error, unexpected ':', expecting ';' or '\n'
app/graphql/types/query_type.rb:19: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:51:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:51:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-01 12:51:56 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:51:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/query_type.rb:16: syntax error, unexpected ':'
  def users():
              ^):
  
app/graphql/types/query_type.rb:16: syntax error, unexpected ':'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:51:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-01 12:52:28 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:52:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::True):
  
app/graphql/types/query_type.rb:14:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:52:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-01 12:52:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/TEST/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-01 12:53:10 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:53:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 44ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 12:53:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for ::1 at 2018-07-01 13:21:02 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 50ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started GET "/graphiql" for ::1 at 2018-07-01 13:21:04 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (123.4ms)
Completed 200 OK in 129ms (Views: 128.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 13:21:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 37ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 13:21:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 11ms (Views: 0.1ms | ActiveRecord: 4.2ms)


Started GET "/graphiql" for ::1 at 2018-07-01 13:27:45 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 13:27:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 33ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-01 13:27:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  username\n  email\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  username\n  email\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-01 14:31:09 -0400
Error occurred while parsing request parameters.
Contents:

{ query: {users
  
ActionDispatch::Http::Parameters::ParseError (751: unexpected token at '{ query: {users'):
  
actionpack (5.1.6) lib/action_dispatch/http/parameters.rb:115:in `rescue in parse_formatted_parameters'
actionpack (5.1.6) lib/action_dispatch/http/parameters.rb:109:in `parse_formatted_parameters'
actionpack (5.1.6) lib/action_dispatch/http/request.rb:361:in `block in POST'
rack (2.0.5) lib/rack/request.rb:57:in `fetch'
rack (2.0.5) lib/rack/request.rb:57:in `fetch_header'
actionpack (5.1.6) lib/action_dispatch/http/request.rb:360:in `POST'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:286:in `_wrapper_enabled?'
actionpack (5.1.6) lib/action_controller/metal/params_wrapper.rb:235:in `process_action'
activerecord (5.1.6) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.6) lib/abstract_controller/base.rb:124:in `process'
actionpack (5.1.6) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.6) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.6) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.6) lib/action_dispatch/routing/route_set.rb:844:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
activerecord (5.1.6) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-01 14:32:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{ users { username } }", "graphql"=>{"query"=>"{ users { username } }"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-01 14:33:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{ users { username } }", "graphql"=>{"query"=>"{ users { username } }"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started OPTIONS "/graphql" for ::1 at 2018-07-01 14:41:47 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-07-01 14:48:25 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-07-01 14:49:33 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-07-01 14:49:50 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started OPTIONS "/graphql" for ::1 at 2018-07-01 14:50:13 -0400
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-02 06:22:59 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-06 15:52:51 -0400
  [1m[35m (50.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (784.9ms)
Completed 200 OK in 791ms (Views: 789.7ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-06 15:52:52 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-06 15:52:52 -0400
Started POST "/graphql" for ::1 at 2018-07-06 15:52:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 113ms (Views: 17.6ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-07-06 15:52:56 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-06 15:52:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users {\n    id\n    username\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users {\n    id\n    username\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (59.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 180ms (Views: 0.3ms | ActiveRecord: 97.5ms)


Started GET "/" for ::1 at 2018-07-06 16:01:08 -0400
Started GET "/graphiql" for ::1 at 2018-07-06 16:01:08 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.5ms)
Completed 200 OK in 7ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 16:01:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 53ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 16:06:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for ::1 at 2018-07-06 16:06:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-06 16:12:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-06 16:15:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.3ms)


  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-07-06 16:26:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-07-06 16:26:35 -0400
Completed 200 OK in 64ms (Views: 9.8ms | ActiveRecord: 0.0ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 47ms (Views: 3.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 19:56:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 19:56:46 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 8ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-06 19:56:46 -0400
Started POST "/graphql" for ::1 at 2018-07-06 19:56:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 19:56:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 19:59:02 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 19:59:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 19:59:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 19:59:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users {\n    id\n    username\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users {\n    id\n    username\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 19:59:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allUsers {\n    id\n    username\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allUsers {\n    id\n    username\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 20:00:23 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (6.5ms)
Completed 200 OK in 10ms (Views: 9.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 20:00:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:00:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 20:23:16 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 20:23:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:23:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:23:36 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 20:23:40 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (136.0ms)
Completed 200 OK in 142ms (Views: 141.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 20:23:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:23:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 20:24:08 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 20:24:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:24:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:26:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 20:28:39 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 20:28:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:28:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 20:29:18 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 20:29:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Query"):
  
app/graphql/types/query_type.rb:2:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 20:29:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 21:16:30 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 21:16:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 21:16:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 21:17:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 21:17:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 21:17:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 21:20:46 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 21:20:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 21:20:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 21:30:59 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 21:30:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "User"):
  
app/graphql/types/user_type.rb:2:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 21:30:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:15:04 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:15:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `unwrap' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:15:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `unwrap' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:15:17 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.6ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:15:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/query_type.rb:5:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:15:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:16:14 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 6ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:16:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/query_type.rb:5:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:16:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:25:19 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:25:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/query_type.rb:5:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:25:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:26:58 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:26:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:26:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:27:18 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:27:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:27:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:30:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:31:36 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:31:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:31:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:32:41 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:32:47 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (678.3ms)
Completed 200 OK in 682ms (Views: 681.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:32:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:32:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:33:55 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:34:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:34:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:37:59 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:37:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:37:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:44:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:44:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"allUsers\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"allUsers\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:45:24 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:45:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::MutationType:Class):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:45:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:46:31 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.0ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:46:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant PlaysetteSchema::MutationType):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:46:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant PlaysetteSchema::MutationType):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:46:49 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:46:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::MutationType:Class):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:46:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:47:15 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:47:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `unwrap' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:47:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `unwrap' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:55:17 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.7ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:55:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::MutationType:Class):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:55:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-06 22:56:45 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-06 22:56:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::MutationType:Class):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:56:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-06 22:57:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allUsers {\n    id\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allUsers {\n    id\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 03:53:41 -0400
  [1m[35m (89.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 18ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::MutationType:Class):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 03:54:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 03:55:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 03:55:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 03:56:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 03:58:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 37ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/query_type.rb:5:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:05:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/query_type.rb:5:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/" for ::1 at 2018-07-09 04:05:43 -0400
Started GET "/graphiql" for ::1 at 2018-07-09 04:05:43 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (258.4ms)
Completed 200 OK in 330ms (Views: 286.5ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-09 04:05:44 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-09 04:05:44 -0400
Started POST "/graphql" for ::1 at 2018-07-09 04:05:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:05:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/favicon.ico" for ::1 at 2018-07-09 04:05:47 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2018-07-09 04:06:00 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.6ms)
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:06:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/query_type.rb:5:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:06:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:06:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"allUsers {\n  id\n  username\n}", "variables"=>nil, "graphql"=>{"query"=>"allUsers {\n  id\n  username\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:06:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:06:48 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:06:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:06:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:06:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:08:53 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:08:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:08:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:09:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:14:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:14:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:14:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:14:54 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:14:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:14:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:15:11 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:16:17 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (117.6ms)
Completed 200 OK in 122ms (Views: 121.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:16:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:16:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:17:33 -0400
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:18:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:18:13 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (145.9ms)
Completed 200 OK in 149ms (Views: 148.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:18:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:18:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:18:34 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:18:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:18:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:18:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:19:02 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.3ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:19:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:19:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:19:53 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:19:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:19:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:21:07 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:21:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:21:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:21:47 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:21:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:21:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:23:04 -0400
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:23:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allUsers {\n  id\n  username\n}\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:23:54 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (171.7ms)
Completed 200 OK in 176ms (Views: 175.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:24:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:24:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:24:18 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.7ms)
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:24:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:24:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::UserType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/user_type.rb to define it):
  
app/graphql/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:30:15 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:30:28 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (109.5ms)
Completed 200 OK in 113ms (Views: 112.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:30:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:30:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:35:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allUsers {\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allUsers {\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:39:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.6ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:39:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword argument null:):
  
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:39:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:40:54 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:40:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `resolve' for #<GraphQL::Schema::Field:0x000055762a232968>
Did you mean?  resolver):
  
app/graphql/types/query_type.rb:5:in `block in <class:QueryType>'
app/graphql/types/query_type.rb:4:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:40:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:41:43 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:41:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `resolve' for #<GraphQL::Schema::Field:0x00007f778d819668>
Did you mean?  resolver):
  
app/graphql/types/query_type.rb:5:in `block in <class:QueryType>'
app/graphql/types/query_type.rb:4:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 04:41:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 04:59:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 04:59:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 74ms (Views: 16.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:05:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:06:02 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 8ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:06:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 35ms (Views: 3.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:06:23 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:06:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 41ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:07:37 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.7ms)
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:07:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
RuntimeError (No connection info possible):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:07:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RuntimeError (No connection info possible):
  
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[36mUser Load (62.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Started GET "/graphiql" for ::1 at 2018-07-09 05:08:34 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:08:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
RuntimeError (No connection info possible):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:08:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RuntimeError (No connection info possible):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:09:19 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:09:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (No connection info possible):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:09:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
RuntimeError (No connection info possible):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:09:30 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:09:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 42ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:09:48 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:09:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 50ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:09:50 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:09:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 54ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:10:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.7ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:10:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 52ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:10:03 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:10:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 35ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:10:16 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:10:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 48ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:10:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allUsers {\n  email\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allUsers {\n  email\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement Query.allUsers, tried:

        - `Types::QueryType#all_users`, which did not exist
        - `NilClass#all_users`, which did not exist
        - Looking up hash key `:all_users` or `"all_users"` on ``, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:10:57 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:10:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 60ms (Views: 11.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:11:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement User.email, tried:

        - `Types::UserType#email`, which did not exist
        - `User::ActiveRecord_Relation#email`, which did not exist
        - Looking up hash key `:email` or `"email"` on `#<User::ActiveRecord_Relation:0x00007f77a002d4a0>`, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:11:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement User.username, tried:

        - `Types::UserType#username`, which did not exist
        - `User::ActiveRecord_Relation#username`, which did not exist
        - Looking up hash key `:username` or `"username"` on `#<User::ActiveRecord_Relation:0x00007f778d8024b8>`, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:14:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::QueryType:Class):
  
app/graphql/types/query_type.rb:12:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:14:18 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:14:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:14:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:14:33 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:14:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 40ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:14:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  name\n  username\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement User.username, tried:

        - `Types::UserType#username`, which did not exist
        - `User::ActiveRecord_Relation#username`, which did not exist
        - Looking up hash key `:username` or `"username"` on `#<User::ActiveRecord_Relation:0x00007f778802f128>`, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:14:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:15:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  {\n  name\n}\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  {\n  name\n}\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:15:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  {\n  name\n}\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  {\n  name\n}\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:15:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  {name\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  {name\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:15:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  {name\n}}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  {name\n}}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:15:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement User.email, tried:

        - `Types::UserType#email`, which did not exist
        - `User::ActiveRecord_Relation#email`, which did not exist
        - Looking up hash key `:email` or `"email"` on `#<User::ActiveRecord_Relation:0x000055762a45a808>`, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:16:59 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:17:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 65ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:17:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Completed 200 OK in 26ms (Views: 0.2ms | ActiveRecord: 5.7ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:17:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:17:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 68ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:17:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Completed 200 OK in 18ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:18:23 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (5.2ms)
Completed 200 OK in 8ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:18:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 75ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:18:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Completed 200 OK in 24ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:19:24 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.6ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:19:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `resolve' for #<GraphQL::Schema::Field:0x00007f778da7af10>
Did you mean?  resolver):
  
app/graphql/types/query_type.rb:5:in `block in <class:QueryType>'
app/graphql/types/query_type.rb:4:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:19:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:19:45 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:19:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:19:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:20:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:20:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `resolve' for #<GraphQL::Schema::Field:0x00007f778db1fa38>
Did you mean?  resolver):
  
app/graphql/types/query_type.rb:5:in `block in <class:QueryType>'
app/graphql/types/query_type.rb:4:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:20:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:20:21 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.7ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:20:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `resolve' for #<GraphQL::Schema::Field:0x00007f7790477200>
Did you mean?  resolver):
  
app/graphql/types/query_type.rb:5:in `block in <class:QueryType>'
app/graphql/types/query_type.rb:4:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:20:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/gigi/Code/Current/playsette/api/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:3:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:20:38 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:20:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 56ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:20:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Completed 200 OK in 18ms (Views: 0.2ms | ActiveRecord: 2.6ms)


Started GET "/graphiql" for ::1 at 2018-07-09 05:22:58 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 9ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:22:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allUsers" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:22:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allUsers" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:22:58 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 7ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:22:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allUsers" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:22:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allUsers" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:23:29 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:23:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "users" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:23:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "users" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:23:40 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:23:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "user" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:23:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "user" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:23:52 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:23:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "user" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:23:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "user" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:25:31 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:25:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::UserType:Class):
  
app/graphql/types/user_type.rb:4:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:15:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:25:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `types' for Types::UserType:Class):
  
app/graphql/types/user_type.rb:4:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:15:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:27:29 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.5ms)
Completed 200 OK in 7ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:27:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allUsers" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-09 05:27:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allUsers" type must return GraphQL::BaseType, not FalseClass (false)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-09 05:28:10 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:28:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 63ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:28:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:28:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allUsers {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allUsers {\n  email\n  name\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:28:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{allUsers {\n  email\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{allUsers {\n  email\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:32:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-07-09 05:33:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-10 04:13:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-10 05:35:36 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 62ms (Views: 4.4ms | ActiveRecord: 4.4ms)


Started POST "/graphql" for ::1 at 2018-07-10 05:40:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-10 05:44:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-07-10 05:45:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


  [1m[36mTrack Load (77.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (12.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to ChangeTrackColumns (20180711093417)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (39.0ms)[0m  [1m[35mALTER TABLE "track" RENAME COLUMN "source_path" TO "submitted_url"[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to ChangeTrackColumns (20180711093417)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (29.6ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "source_path" TO "submitted_url"[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "submission" DROP COLUMN "tracks"[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to ChangeTrackColumns (20180711093417)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (35.4ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "source_path" TO "submitted_url"[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "submission"[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to ChangeTrackColumns (20180711093417)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "source_path" TO "submitted_url"[0m
  [1m[35m (63.0ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "submission_type"[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "submission_id"[0m
  [1m[35m (22.5ms)[0m  [1m[35mALTER TABLE "tracks" ADD "media_url" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180711093417"]]
  [1m[35m (35.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (17.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveStorageTables (20180711100234)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (356.8ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (37.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (66.9ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (32.3ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (32.6ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180711100234"]]
  [1m[35m (18.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (41.3ms)[0m  [1m[32mINSERT INTO "tracks" ("submitted_url", "title", "artist", "source_service", "media_type", "user_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["submitted_url", "https://soundcloud.com/intheroughstyle/vince-staples-nate"], ["title", "Nate"], ["artist", "Vince Staples"], ["source_service", "Soundcloud"], ["media_type", "audio"], ["user_id", 1], ["created_at", "2018-07-11 10:24:26.202206"], ["updated_at", "2018-07-11 10:24:26.202206"]]
  [1m[35m (11.8ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-07-11 09:42:34 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  allUsers {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NoMethodError (private method `Integer' called for #<GraphQL::Define::TypeDefiner:0x0000560673334c60>):
  
app/graphql/types/track_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-11 09:42:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
NoMethodError (private method `Integer' called for #<GraphQL::Define::TypeDefiner:0x0000560673334c60>):
  
app/graphql/types/track_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-11 09:43:08 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (199.8ms)
Completed 200 OK in 232ms (Views: 231.0ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-11 09:43:08 -0400
Started POST "/graphql" for ::1 at 2018-07-11 09:43:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NoMethodError (private method `Integer' called for #<GraphQL::Define::TypeDefiner:0x0000560673334c60>):
  
app/graphql/types/track_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-11 09:43:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (private method `Integer' called for #<GraphQL::Define::TypeDefiner:0x0000560673334c60>):
  
app/graphql/types/track_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-11 09:44:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.4ms)
Completed 200 OK in 8ms (Views: 6.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-11 09:44:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 59ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-11 09:44:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{users {\n  email\n  username\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{users {\n  email\n  username\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 18ms (Views: 0.1ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for ::1 at 2018-07-11 09:44:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{tracks {\n  title\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{tracks {\n  title\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for ::1 at 2018-07-11 09:44:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-11 09:45:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-11 09:45:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{tracks {\n  title\n  artist\n} }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{tracks {\n  title\n  artist\n} }", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for ::1 at 2018-07-14 19:27:49 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-14 19:27:49 -0400
Started POST "/graphql" for ::1 at 2018-07-14 19:27:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 83ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:30:08 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 52ms (Views: 0.2ms | ActiveRecord: 4.2ms)


Started GET "/graphiql" for ::1 at 2018-07-14 19:30:16 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (211.6ms)
Completed 200 OK in 263ms (Views: 262.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:30:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 43ms (Views: 4.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-14 19:31:22 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:31:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "Mutation"):
  
app/graphql/types/mutation_type.rb:2:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-14 19:31:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (A copy of Types has been removed from the module tree but is still active!):
  
app/graphql/playsette_schema.rb:2:in `<class:PlaysetteSchema>'
app/graphql/playsette_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-14 19:32:49 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:32:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Function' for GraphQL:Module):
  
app/graphql/resolvers/create_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-14 19:32:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Function' for GraphQL:Module):
  
app/graphql/resolvers/create_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-14 19:33:26 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.0ms)
Completed 200 OK in 7ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:33:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 37ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant GraphQL::InputType):
  
app/graphql/types/auth_provider_email_input.rb:1:in `<top (required)>'
app/graphql/resolvers/create_user.rb:3:in `block in <class:CreateUser>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-14 19:33:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant GraphQL::InputType):
  
app/graphql/types/auth_provider_email_input.rb:1:in `<top (required)>'
app/graphql/resolvers/create_user.rb:3:in `block in <class:CreateUser>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-14 19:34:06 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (5.4ms)
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:34:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Argument authProvider on Mutation.createUser is invalid: name must return String, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-14 19:34:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Argument authProvider on Mutation.createUser is invalid: name must return String, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-14 19:37:04 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.3ms)
Completed 200 OK in 7ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 19:37:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Argument authProvider on Mutation.createUser is invalid: name must return String, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-14 19:37:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Argument authProvider on Mutation.createUser is invalid: name must return String, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/graphiql" for ::1 at 2018-07-14 23:33:50 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 23:33:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 59ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 23:36:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createUser(\n    authProvider:authProvider{\n      email:{\n      email:'cosima@afg.com',\n      password:'password'\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createUser(\n    authProvider:authProvider{\n      email:{\n      email:'cosima@afg.com',\n      password:'password'\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 23:36:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createUser(\n    authProvider:{\n      email:{\n      email:'cosima@afg.com',\n      password:'password'\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createUser(\n    authProvider:{\n      email:{\n      email:'cosima@afg.com',\n      password:'password'\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 23:37:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createUser(\n    authProvider:{\n      email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createUser(\n    authProvider:{\n      email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cosima@afg.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 182ms (ActiveRecord: 7.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username can't be blank):
  
app/graphql/resolvers/create_user.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-14 23:38:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createUser(\n    authProvider:{\n      email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createUser(\n    authProvider:{\n      email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil}}
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-14 23:39:28 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 23:39:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 64ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-14 23:39:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createUser(\n    name:\"cosima\",\n    username:\"cosima\",\n    authProvider:{\n      email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createUser(\n    name:\"cosima\",\n    username:\"cosima\",\n    authProvider:{\n      email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n    }\n) {\n  id\n  email\n}\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cosima@afg.com"], ["LIMIT", 1]]
  [1m[36mUser Create (40.8ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "cosima"], ["email", "cosima@afg.com"], ["name", "cosima"], ["password_digest", "$2a$10$HdBKW897xdxYznUlkWyBtOgBlveGDrdfgWdXfNbSqxrC3LhL6pUW6"], ["created_at", "2018-07-15 03:39:55.092184"], ["updated_at", "2018-07-15 03:39:55.092184"]]
  [1m[35m (21.5ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 148ms (Views: 0.2ms | ActiveRecord: 66.8ms)


Started GET "/graphiql" for ::1 at 2018-07-15 02:11:33 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 6ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:11:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `AuthProviderEmailInput' for Types:Module):
  
app/graphql/resolvers/sign_in_user.rb:2:in `<class:SignInUser>'
app/graphql/resolvers/sign_in_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-07-15 02:11:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `AuthProviderEmailInput' for Types:Module):
  
app/graphql/resolvers/sign_in_user.rb:2:in `<class:SignInUser>'
app/graphql/resolvers/sign_in_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:5:in `block in <top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-15 02:12:04 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:12:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 83ms (Views: 8.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:13:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"egpavelka@gmail.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"egpavelka@gmail.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "egpavelka@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 83ms (Views: 0.2ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:13:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"egpavelka@gmail.com\",\n      password:\"TestPassword\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"egpavelka@gmail.com\",\n      password:\"TestPassword\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "egpavelka@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 66ms (Views: 0.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:13:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"egpavelka@gmail.com\",\n      password:\"TestPassword1\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"egpavelka@gmail.com\",\n      password:\"TestPassword1\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "egpavelka@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 66ms (Views: 0.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:14:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"users {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"users {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:14:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"Users {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"Users {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"users {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"users {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"user {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"user {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"user {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"user {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"user {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"user {\n  user {\n    id\n    email\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cosima@afg"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:15:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cosima@afg.com"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for ::1 at 2018-07-15 02:21:05 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.8ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:21:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 74ms (Views: 9.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:21:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cosima@afg.com"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 92ms (ActiveRecord: 3.2ms)


  
NameError (undefined local variable or method `ctx' for #<Resolvers::SignInUser:0x00007f0be5691cf0>
Did you mean?  _ctx):
  
app/graphql/resolvers/sign_in_user.rb:24:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-15 02:21:35 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.6ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:21:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 62ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-15 02:21:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signinUser(\n    email:{\n      email:\"cosima@afg.com\",\n      password:\"password\"\n    }\n  ) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cosima@afg.com"], ["LIMIT", 1]]
Completed 200 OK in 83ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:05:46 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.7ms)
Completed 200 OK in 5ms (Views: 4.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:05:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 64ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-17 01:06:10 -0400
Started POST "/graphql" for ::1 at 2018-07-17 01:06:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 77ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:08:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest(str: \"help\") {\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest(str: \"help\") {\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:10:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 69ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:10:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest(str: \"help\") {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest(str: \"help\") {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:11:18 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:11:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 56ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:11:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest(str: \"help\") {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest(str: \"help\") {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:12:43 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.1ms)
Completed 200 OK in 7ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:12:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 83ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:12:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest(str: \"help\") {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest(str: \"help\") {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:13:18 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 6ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:13:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 78ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:13:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    \n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    \n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:13:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/models/track.rb:56: void value expression
           return "There was an error with your
                 ^
/home/gigi/Code/Current/playsette/api/app/models/track.rb:56: syntax error, unexpected tSTRING_BEG, expecting &. or :: or '[' or '.'
           return "There was an error with your s
                   ^
/home/gigi/Code/Current/playsette/api/app/models/track.rb:59: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/models/track.rb:56: void value expression
app/models/track.rb:56: syntax error, unexpected tSTRING_BEG, expecting &. or :: or '[' or '.'
app/models/track.rb:59: syntax error, unexpected end-of-input, expecting keyword_end
app/graphql/types/query_type.rb:15:in `block (3 levels) in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-07-17 01:14:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:15:14 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:15:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 70ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:15:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:17:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:17:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 63ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:17:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:18:23 -0400
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 76ms (Views: 0.8ms | ActiveRecord: 3.3ms)


Started GET "/graphiql" for ::1 at 2018-07-17 01:18:28 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (118.2ms)
Completed 200 OK in 124ms (Views: 123.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:18:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 47ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:18:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    hint\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:18:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `id' for [:hint, "hello"]:Array):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-07-17 01:19:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `id' for [:hint, "hello"]:Array):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-07-17 01:19:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    []\n  } \n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    []\n  } \n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-17 01:19:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracktest {\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `id' for [:hint, "hello"]:Array):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-07-17 01:21:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracks{\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracks{\n    id\n  } \n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-07-19 02:39:37 -0400
  [1m[35m (50.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (279.0ms)
Completed 200 OK in 321ms (Views: 320.1ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for 127.0.0.1 at 2018-07-19 02:39:39 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for 127.0.0.1 at 2018-07-19 02:39:39 -0400
Started POST "/graphql" for 127.0.0.1 at 2018-07-19 02:39:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 198ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for 127.0.0.1 at 2018-07-19 02:39:42 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for 127.0.0.1 at 2018-07-19 02:39:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser tool for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will see intelligent\n# typeaheads aware of the current GraphQL type schema and live syntax and\n# validation errors highlighted within the text.\n#\n# GraphQL queries typically start with a \"{\" character. Lines that starts\n# with a # are ignored.\n#\n# An example GraphQL query might look like:\n#\n#     {\n#       field(arg: \"value\") {\n#         subField\n#       }\n#     }\n#\n# Keyboard shortcuts:\n#\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\n#\n#       Run Query:  Ctrl-Enter (or press the play button above)\n#\n#   Auto Complete:  Ctrl-Space (or just start typing)\n#\n\n", "variables"=>nil, "graphql"=>{"query"=>"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser tool for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will see intelligent\n# typeaheads aware of the current GraphQL type schema and live syntax and\n# validation errors highlighted within the text.\n#\n# GraphQL queries typically start with a \"{\" character. Lines that starts\n# with a # are ignored.\n#\n# An example GraphQL query might look like:\n#\n#     {\n#       field(arg: \"value\") {\n#         subField\n#       }\n#     }\n#\n# Keyboard shortcuts:\n#\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\n#\n#       Run Query:  Ctrl-Enter (or press the play button above)\n#\n#   Auto Complete:  Ctrl-Space (or just start typing)\n#\n\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-19 02:40:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 66ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-19 03:27:40 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (69.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 214ms (Views: 0.8ms | ActiveRecord: 99.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-19 03:28:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/" for ::1 at 2018-07-19 03:28:10 -0400
Started GET "/graphiql" for ::1 at 2018-07-19 03:28:10 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (105.7ms)
Completed 200 OK in 109ms (Views: 108.7ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-19 03:28:10 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-19 03:28:10 -0400
Started POST "/graphql" for ::1 at 2018-07-19 03:28:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 65ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-07-19 03:28:14 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-19 03:28:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for ::1 at 2018-07-20 04:16:42 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (28.3ms)
Completed 200 OK in 62ms (Views: 34.7ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-20 04:16:42 -0400
Started POST "/graphql" for ::1 at 2018-07-20 04:16:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 53ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-20 05:10:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-20 05:10:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-20 05:12:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-20 05:12:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-23 01:53:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started GET "/graphiql" for ::1 at 2018-07-23 02:07:16 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (55.6ms)
Completed 200 OK in 151ms (Views: 57.9ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-23 02:07:16 -0400
Started POST "/graphql" for ::1 at 2018-07-23 02:07:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 61ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-23 02:09:52 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 235ms (Views: 0.3ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:17:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-23 05:25:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:25:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:26:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-23 05:26:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:26:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-23 05:26:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-23 05:27:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:27:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:27:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-23 05:28:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-23 05:28:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started GET "/graphiql" for ::1 at 2018-07-23 05:28:54 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (369.5ms)
Completed 200 OK in 404ms (Views: 402.2ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-23 05:28:54 -0400
Started POST "/graphql" for ::1 at 2018-07-23 05:28:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 65ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-24 01:16:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-24 01:22:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 01:22:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:03:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:03:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:03:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:11:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:11:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:11:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:11:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:11:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-07-24 02:11:45 -0400
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:18:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:18:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:28:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:28:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:31:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:31:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:32:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:32:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:33:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:33:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-24 02:34:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 02:34:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 03:36:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 04:01:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-24 04:01:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 04:55:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (13.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 13.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 04:55:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-24 04:56:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 04:56:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-24 04:57:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 04:57:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-07-24 04:58:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 04:58:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 04:59:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 04:59:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:00:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:00:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:00:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:00:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:02:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:02:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:08:24 -0400
Started POST "/graphql" for ::1 at 2018-07-24 05:08:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:10:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:10:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:11:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:11:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:12:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:12:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:14:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:14:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-24 05:14:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-24 05:14:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.5ms)


  [1m[36mTrack Load (35.1ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-07-26 06:41:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-26 06:50:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-26 07:00:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-26 07:02:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-26 07:03:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-26 07:03:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-26 07:03:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-26 07:08:47 -0400
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 158ms (Views: 0.3ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-26 07:10:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-27 02:04:21 -0400
  [1m[35m (50.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (70.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 300ms (Views: 0.3ms | ActiveRecord: 121.2ms)


Started GET "/" for ::1 at 2018-07-27 02:05:06 -0400
Started GET "/graphiql" for ::1 at 2018-07-27 02:05:06 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (247.3ms)
Completed 200 OK in 280ms (Views: 278.6ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-27 02:05:06 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-27 02:05:06 -0400
Started POST "/graphql" for ::1 at 2018-07-27 02:05:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 58ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-07-27 02:05:10 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-27 02:06:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:06:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:06:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:07:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"users {\n  id\n}", "variables"=>nil, "graphql"=>{"query"=>"users {\n  id\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:07:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"users {\n  user\n}", "variables"=>nil, "graphql"=>{"query"=>"users {\n  user\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:07:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"users {\n  user\n}", "variables"=>nil, "graphql"=>{"query"=>"users {\n  user\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:07:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"users {\n  user {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"users {\n  user {\n    id\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:27:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{ users {\n  id\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{ users {\n  id\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-27 02:27:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{ users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{ users {\n  id\n  username\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:09:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:23:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  login(username: \"cosima\", password:\"password\")\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  login(username: \"cosima\", password:\"password\")\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-07-27 03:23:20 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:23:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 69ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:26:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  login(username:{\n    username: \"cosima\",\n    password:\"password\"\n  })\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  login(username:{\n    username: \"cosima\",\n    password:\"password\"\n  })\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:27:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(username:{\n    username: \"cosima\",\n    password:\"password\"\n  }) {\n    token\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(username:{\n    username: \"cosima\",\n    password:\"password\"\n  }) {\n    token\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 125ms (Views: 0.2ms | ActiveRecord: 5.6ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:27:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(username:{\n    username: \"cosima\",\n    password:\"password\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(username:{\n    username: \"cosima\",\n    password:\"password\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-27 03:31:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-07-27 18:38:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:26:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:27:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:27:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:27:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 75ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:28:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:28:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:29:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: $username, email: $email, name: $name, password: $password) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:29:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 60ms (Views: 9.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:29:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 71ms (Views: 10.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:56:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 50ms (Views: 0.2ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:56:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: {username: $username, password: $password}, email: $email, name: $name) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(username: {username: $username, password: $password}, email: $email, name: $name) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:57:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:57:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"test", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 21:59:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signup(authProvider: {\n    username:\"test\",\n    password:\"test\"\n  },\n  email:\"test\",\n  name:\"test\") {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signup(authProvider: {\n    username:\"test\",\n    password:\"test\"\n  },\n  email:\"test\",\n  name:\"test\") {\n    id\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-27 22:00:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signup(authProvider: {\n    username:{\n      username:\"test\",\n      password:\"test\"\n    }\n  },\n  email:\"test\",\n  name:\"test\") {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signup(authProvider: {\n    username:{\n      username:\"test\",\n      password:\"test\"\n    }\n  },\n  email:\"test\",\n  name:\"test\") {\n    id\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "test"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
  [1m[36mUser Create (64.0ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "test"], ["email", "test"], ["name", "test"], ["password_digest", "$2a$10$WUmSyxsz4eGZia2k3RCmqO6MGgLiyje.lV7aKAXhQyDWI971FmQte"], ["created_at", "2018-07-28 02:00:11.483158"], ["updated_at", "2018-07-28 02:00:11.483158"]]
  [1m[35m (21.6ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 156ms (Views: 0.2ms | ActiveRecord: 86.4ms)


Started POST "/graphql" for ::1 at 2018-07-27 22:07:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  signup(authProvider: {\n    username:{\n      username:\"test\",\n      password:\"test\"\n    }\n  },\n  email:\"test\",\n  name:\"test\") {\n    token\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  signup(authProvider: {\n    username:{\n      username:\"test\",\n      password:\"test\"\n    }\n  },\n  email:\"test\",\n  name:\"test\") {\n    token\n  }\n}", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-28 00:10:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-07-28 00:10:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"tester", "email"=>"test@tester.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name)\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"tester", "email"=>"test@tester.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name)\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-28 00:12:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-07-28 00:12:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"tester", "email"=>"test@tester.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"tester", "email"=>"test@tester.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "tester"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test@tester.com"], ["LIMIT", 1]]
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "tester"], ["email", "test@tester.com"], ["name", "test"], ["password_digest", "$2a$10$NFjWJ7LxgPY3Ae3cysUBQOdvWeDVv/wnrl8uMMLvAFyq8dRWUYAwa"], ["created_at", "2018-07-28 04:12:46.161922"], ["updated_at", "2018-07-28 04:12:46.161922"]]
  [1m[35m (41.3ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 115ms (Views: 0.3ms | ActiveRecord: 43.8ms)


  [1m[36mTrack Load (36.1ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to RemoveSourceServiceIdFromTracks (20180728072251)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (97.2ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "source_service_id"[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "submitted_url" TO "url"[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180728072251"]]
  [1m[35m (15.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (19.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for 127.0.0.1 at 2018-07-31 01:50:24 -0400
  [1m[35m (161.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 73ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'user'):
  
app/graphql/types/track_type.rb:14:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/" for ::1 at 2018-07-31 02:45:48 -0400
Started GET "/graphiql" for ::1 at 2018-07-31 02:45:48 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (323.1ms)
Completed 200 OK in 355ms (Views: 353.4ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-07-31 02:45:48 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-07-31 02:45:48 -0400
Started POST "/graphql" for ::1 at 2018-07-31 02:45:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'user'):
  
app/graphql/types/track_type.rb:14:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-07-31 02:45:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'user'):
  
app/graphql/types/track_type.rb:14:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/favicon.ico" for ::1 at 2018-07-31 02:45:52 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-07-31 02:46:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'user'):
  
app/graphql/types/track_type.rb:14:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-31 02:50:16 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-31 02:50:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 95ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/create_track.rb:2:in `name'
app/graphql/resolvers/create_track.rb:2:in `<class:CreateTrack>'
app/graphql/resolvers/create_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-07-31 02:50:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/create_track.rb:2:in `name'
app/graphql/resolvers/create_track.rb:2:in `<class:CreateTrack>'
app/graphql/resolvers/create_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-07-31 02:52:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.5ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-31 02:52:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 113ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-07-31 02:52:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (56.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 189ms (Views: 0.2ms | ActiveRecord: 97.9ms)


Started POST "/graphql" for ::1 at 2018-07-31 02:53:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 53ms (Views: 0.2ms | ActiveRecord: 4.0ms)


  [1m[36mTrack Load (35.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/" for ::1 at 2018-08-01 01:58:01 -0400
Started GET "/graphiql" for ::1 at 2018-08-01 01:58:01 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-08-01 01:58:01 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-01 01:58:01 -0400
Started POST "/graphql" for ::1 at 2018-08-01 01:58:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 88ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-01 01:58:01 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/favicon.ico" for ::1 at 2018-08-01 01:58:01 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for 127.0.0.1 at 2018-08-01 01:58:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 20ms (Views: 0.2ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-01 02:01:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-01 02:01:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-01 02:02:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/" for ::1 at 2018-08-01 02:02:20 -0400
Started GET "/graphiql" for ::1 at 2018-08-01 02:02:20 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-08-01 02:02:20 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-01 02:02:20 -0400
Started POST "/graphql" for ::1 at 2018-08-01 02:02:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 10.4ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-01 02:02:23 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/" for ::1 at 2018-08-01 02:12:30 -0400
Started GET "/graphiql" for ::1 at 2018-08-01 02:12:30 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.5ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-01 02:12:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 79ms (Views: 10.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-01 02:19:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 70ms (Views: 8.3ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-01 02:19:16 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-08-01 02:20:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:04:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:07:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:08:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:08:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:11:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:15:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:26:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:27:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:32:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-01 06:39:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'user'):
  
app/graphql/types/track_type.rb:14:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:40:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/types/track_type.rb:14: syntax error, unexpected '!', expecting keyword_do_LAMBDA or tLAMBEG
  field :user, -> !types[Types::UserType], proper
                   ^
/home/gigi/Code/Current/playsette/api/app/graphql/types/track_type.rb:14: syntax error, unexpected ',', expecting keyword_end
r, -> !types[Types::UserType], property: user
                              ^):
  
app/graphql/types/track_type.rb:14: syntax error, unexpected '!', expecting keyword_do_LAMBDA or tLAMBEG
app/graphql/types/track_type.rb:14: syntax error, unexpected ',', expecting keyword_end
app/graphql/types/query_type.rb:10:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:41:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'user'):
  
app/graphql/types/track_type.rb:14:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:44:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 43ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/new_track.rb:2:in `name'
app/graphql/resolvers/new_track.rb:2:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:53:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/new_track.rb:2:in `name'
app/graphql/resolvers/new_track.rb:2:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:54:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/new_track.rb:2:in `name'
app/graphql/resolvers/new_track.rb:2:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:55:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:57:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:57:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-01 06:59:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-02 04:48:01 -0400
  [1m[35m (38.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (348.6ms)
Completed 200 OK in 381ms (Views: 379.9ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-02 04:48:04 -0400
Started POST "/graphql" for ::1 at 2018-08-02 04:48:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 119ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-02 04:48:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-02 04:48:14 -0400
Started GET "/favicon.ico" for ::1 at 2018-08-02 04:48:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "new_track" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-08-03 06:33:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Field Mutation.new_track's return type is invalid: name must return String, not NilClass (nil)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-03 06:35:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/new_track.rb:13:in `name'
app/graphql/resolvers/new_track.rb:13:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-03 06:42:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/new_track.rb:13:in `name'
app/graphql/resolvers/new_track.rb:13:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 02:46:56 -0400
  [1m[35m (49.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (291.2ms)
Completed 200 OK in 324ms (Views: 322.6ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-04 02:46:59 -0400
Started POST "/graphql" for ::1 at 2018-08-04 02:47:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 135ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::TrackProviderUrlInput):
  
app/graphql/resolvers/new_track.rb:12:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-04 02:47:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 27ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::TrackProviderUrlInput):
  
app/graphql/resolvers/new_track.rb:12:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-04 02:47:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::TrackProviderUrlInput):
Started GET "/favicon.ico" for ::1 at 2018-08-04 02:47:19 -0400
  
app/graphql/resolvers/new_track.rb:12:in `<class:NewTrack>'
app/graphql/resolvers/new_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:7:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-08-04 04:08:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (69.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 239ms (Views: 0.3ms | ActiveRecord: 121.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 04:11:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-04 04:12:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-04 04:12:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-04 04:27:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started GET "/graphiql" for ::1 at 2018-08-04 05:15:57 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:15:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 89ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:19:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: $url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: $url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:19:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:19:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:20:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: $url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: $url) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:24:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:24:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:25:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  mutation NewTrackMutation($url: !String) {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  mutation NewTrackMutation($url: !String) {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:26:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n  mutation NewTrackMutation($url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 05:26:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation NewTrackMutation($url: String!) {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"\n  mutation NewTrackMutation($url: String!) {\n    new_track(url: {\n      url:$url\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n    }\n  }", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:05:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `supported_sources' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:29:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-04 11:07:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 23ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `supported_sources' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:29:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:07:15 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:07:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 81ms (Views: 11.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:07:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `supported_sources' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:29:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:07:28 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:07:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 73ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:07:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `valid_bandcamp_format' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:20:in `supported_sources'
app/utilities/embedding_util.rb:29:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:15:56 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:15:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 121ms (Views: 12.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:15:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `valid_bandcamp_format' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:10:in `supported_sources'
app/utilities/embedding_util.rb:19:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-04 11:17:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 20ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `valid_bandcamp_format=' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:2:in `<module:EmbeddingUtil>'
app/utilities/embedding_util.rb:1:in `<top (required)>'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:17:34 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (5.1ms)
Completed 200 OK in 9ms (Views: 8.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:17:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 100ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:17:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `valid_bandcamp_format=' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:2:in `<module:EmbeddingUtil>'
app/utilities/embedding_util.rb:1:in `<top (required)>'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:19:52 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:19:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 94ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:19:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `supported_sources=' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:8:in `<module:EmbeddingUtil>'
app/utilities/embedding_util.rb:1:in `<top (required)>'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:20:06 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:20:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 95ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:20:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `supported_sources=' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:8:in `<module:EmbeddingUtil>'
app/utilities/embedding_util.rb:1:in `<top (required)>'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:20:11 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:20:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 63ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:20:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `supported_sources=' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:8:in `<module:EmbeddingUtil>'
app/utilities/embedding_util.rb:1:in `<top (required)>'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 11:20:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.6ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:20:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 81ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 11:20:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `match' for #<#<Class:0x00007fc6dc3a2fa0>:0x00007fc6d4011128>):
  
app/utilities/embedding_util.rb:17:in `block in set_service'
app/utilities/embedding_util.rb:17:in `each'
app/utilities/embedding_util.rb:17:in `detect'
app/utilities/embedding_util.rb:17:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 13:51:09 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:51:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 118ms (Views: 12.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:51:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `match' for #<#<Class:0x00005580ceb054d8>:0x00007fc6dc3d0b58>):
  
app/utilities/embedding_util.rb:17:in `block in set_service'
app/utilities/embedding_util.rb:17:in `each'
app/utilities/embedding_util.rb:17:in `detect'
app/utilities/embedding_util.rb:17:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 13:51:25 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:51:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 94ms (Views: 11.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:51:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `match' for #<#<Class:0x00005580ceb054d8>:0x00007fc6edcbd098>):
  
app/utilities/embedding_util.rb:17:in `block in set_service'
app/utilities/embedding_util.rb:17:in `each'
app/utilities/embedding_util.rb:17:in `detect'
app/utilities/embedding_util.rb:17:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-08-04 13:51:52 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 59ms (Views: 0.3ms | ActiveRecord: 3.2ms)


Started GET "/graphiql" for ::1 at 2018-08-04 13:52:02 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (143.5ms)
Completed 200 OK in 147ms (Views: 146.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:52:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 71ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:52:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `match' for #<#<Class:0x000055690dd52098>:0x00007f96e07b6ff0>):
  
app/utilities/embedding_util.rb:17:in `block in set_service'
app/utilities/embedding_util.rb:17:in `each'
app/utilities/embedding_util.rb:17:in `detect'
app/utilities/embedding_util.rb:17:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-04 13:52:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:52:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `match' for #<#<Class:0x000055690dd52098>:0x00007f96e8028f10>):
  
app/utilities/embedding_util.rb:17:in `block in set_service'
app/utilities/embedding_util.rb:17:in `each'
app/utilities/embedding_util.rb:17:in `detect'
app/utilities/embedding_util.rb:17:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 13:53:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:53:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 115ms (Views: 9.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:53:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `media_url' for #<EmbeddedTrackService:0x00007f96e81ecd10>):
  
app/graphql/resolvers/new_track.rb:30:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 13:55:51 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 7ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:55:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 115ms (Views: 17.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:55:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `media_url' for #<EmbeddedTrackService:0x00007f96e1e14f18>):
  
app/graphql/resolvers/new_track.rb:30:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 13:57:24 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (23.9ms)
Completed 200 OK in 27ms (Views: 26.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:57:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 101ms (Views: 8.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:57:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for #<EmbeddedTrackService:0x00007f96f4922240>):
  
app/graphql/resolvers/new_track.rb:30:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 13:59:25 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.0ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:59:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 102ms (Views: 13.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 13:59:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:00:06 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 13ms (Views: 12.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:00:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 93ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:00:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:00:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:01:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:01:46 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:01:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 71ms (Views: 10.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:01:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:02:24 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:02:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 112ms (Views: 17.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:02:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:02:46 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:02:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 90ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:02:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:02:58 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:02:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 96ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:03:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:03:25 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (5.9ms)
Completed 200 OK in 9ms (Views: 8.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:03:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 127ms (Views: 11.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:03:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:04:23 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:04:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 78ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:04:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `data' for nil:NilClass):
  
app/services/embedded_track_service.rb:37:in `track_returned?'
app/services/embedded_track_service.rb:28:in `parse_data'
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-04 14:06:20 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:06:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 111ms (Views: 9.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:06:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-04 14:06:37 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.6ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:06:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 113ms (Views: 9.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-04 14:06:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `metadata' for nil:NilClass):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-08-05 00:54:48 -0400
Started POST "/graphql" for ::1 at 2018-08-05 00:54:49 -0400
  [1m[35m (49.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (51.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (57.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mUser Load (57.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 377ms (Views: 0.4ms | ActiveRecord: 108.1ms)


Completed 200 OK in 379ms (Views: 0.2ms | ActiveRecord: 110.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-05 01:02:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started GET "/graphiql" for ::1 at 2018-08-05 02:50:09 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (202.1ms)
Completed 200 OK in 234ms (Views: 232.2ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-05 02:50:09 -0400
Started POST "/graphql" for ::1 at 2018-08-05 02:50:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 72ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-05 02:50:13 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-08-05 02:50:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 62ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `metadata' for nil:NilClass):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-05 02:51:26 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 02:51:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 109ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 02:51:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 05:52:19 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 7ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 05:52:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 120ms (Views: 13.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 05:52:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 05:52:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Started GET "/graphiql" for ::1 at 2018-08-05 05:53:13 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.5ms)
Completed 200 OK in 8ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 05:53:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 104ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Completed 200 OK in 41517650ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:44:05 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (15.3ms)
Completed 200 OK in 19ms (Views: 18.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:44:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 257ms (Views: 54.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:44:05 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (20.4ms)
Completed 200 OK in 24ms (Views: 22.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:44:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 170ms (Views: 49.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:44:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Started GET "/graphiql" for ::1 at 2018-08-05 22:44:12 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:44:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 68ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:47:01 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (134.0ms)
Completed 200 OK in 141ms (Views: 140.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:47:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 157ms (Views: 25.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:47:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 1249ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:48:30 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.0ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:48:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 86ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:48:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 1156ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:49:52 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.3ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:49:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 75ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:49:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 483ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:50:59 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:50:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 97ms (Views: 17.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:51:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 724ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `title' for #<Hash:0x00007f513e542248>):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-05 22:51:17 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (5.2ms)
Completed 200 OK in 9ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:51:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 81ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:51:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 620ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `metadata' for #<Hash:0x00007f5134077970>):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-05 22:51:31 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (5.0ms)
Completed 200 OK in 8ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:51:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 106ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:51:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 681ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:51:59 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:51:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 101ms (Views: 9.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:52:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 827ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:52:48 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:52:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 87ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:52:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 554ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:53:17 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.7ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:53:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 116ms (Views: 10.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:53:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 1054ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:55:51 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:55:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 105ms (Views: 10.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:55:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      # media_url,\n      service,\n      # media_type,\n      # title,\n      # artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 464ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:56:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:56:57 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:56:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 79ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:56:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      # album,\n      # year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 461ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:57:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 609ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:58:21 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:58:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 98ms (Views: 11.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:58:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 578ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:58:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 820ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 22:58:44 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.6ms)
Completed 200 OK in 6ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:58:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 106ms (Views: 10.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 22:58:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-05 23:02:15 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 23:02:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-05 23:02:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-05 23:04:40 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (6.9ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-05 23:04:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'required'):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-05 23:04:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'required'):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-06 01:24:05 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 7ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-06 01:24:06 -0400
Started POST "/graphql" for ::1 at 2018-08-06 01:24:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 107ms (Views: 8.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 01:24:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 466ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-06 01:24:38 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.7ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 01:24:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 107ms (Views: 9.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 01:24:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(submission: {\n      url: \"https://soundcloud.com/andersonpaak/bubblin-1\"\n    }) {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 481ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-06 01:32:32 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.4.2/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 01:32:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 90ms (Views: 8.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 01:32:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 494ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 01:35:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: \"htts://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: \"htts://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 24ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `errors' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:21:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 01:35:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  mutation {\n    new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n  mutation {\n    new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n      url,\n      media_url,\n      service,\n      media_type,\n      title,\n      artist,\n      album,\n      year\n     }\n  }", "variables"=>nil}}
Completed 200 OK in 437ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 04:22:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 142ms (ActiveRecord: 4.3ms)


  
NoMethodError (undefined method `byteslice' for nil:NilClass):
  
app/graphql/resolvers/user_login.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 04:25:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"password\"\n    }) {\n    token\n  }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"password\"\n    }) {\n    token\n  }\n  }", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 69ms (ActiveRecord: 0.3ms)


  
NoMethodError (undefined method `byteslice' for nil:NilClass):
  
app/graphql/resolvers/user_login.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 04:25:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"test\"\n    }) {\n    token\n  }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"test\"\n    }) {\n    token\n  }\n  }", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 66ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 04:26:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 66ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:19:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:19:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:21:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:22:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n#   mutation {\n#     new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n#       url,\n#       media_url,\n#       service,\n#       media_type,\n#       title,\n#       artist,\n#       album,\n#       year\n#      }\n#   }\n  \n  mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"test\"\n    }) {\n      token\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n#   mutation {\n#     new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n#       url,\n#       media_url,\n#       service,\n#       media_type,\n#       title,\n#       artist,\n#       album,\n#       year\n#      }\n#   }\n  \n  mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"test\"\n    }) {\n      token\n    }\n  }", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:22:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `errors' for EmbeddingUtil:Module):
  
app/utilities/embedding_util.rb:21:in `set_service'
app/graphql/resolvers/new_track.rb:22:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 05:22:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:23:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:23:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 535ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:26:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:26:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"tester", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"tester", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "tester"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 67ms (ActiveRecord: 0.2ms)


  
NoMethodError (undefined method `byteslice' for nil:NilClass):
  
app/graphql/resolvers/user_login.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 05:27:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:27:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:29:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:31:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:34:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:40:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:43:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 102ms (Views: 0.2ms | ActiveRecord: 4.5ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:45:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:46:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:48:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:48:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:48:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:49:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:50:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:50:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:51:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:51:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:51:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:52:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:52:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:52:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:53:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:57:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:57:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(authProvider: {username: {username: $username, password: $password}}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(authProvider: {username: {username: $username, password: $password}}) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:58:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"cosimad", "email"=>"cos@t.com", "name"=>"cos", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"cosimad", "email"=>"cos@t.com", "name"=>"cos", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosimad"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "cos@t.com"], ["LIMIT", 1]]
  [1m[36mUser Create (94.8ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "cosimad"], ["email", "cos@t.com"], ["name", "cos"], ["password_digest", "$2a$10$TiBOU2KMVIeAI8T4McdmnupnqkKuplt2PY9M4uYRzYZW4Wdgdk1DG"], ["created_at", "2018-08-06 09:58:09.491018"], ["updated_at", "2018-08-06 09:58:09.491018"]]
  [1m[35m (10.8ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 178ms (Views: 0.2ms | ActiveRecord: 106.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:58:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:59:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 05:59:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:01:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n#   mutation {\n#     new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n#       url,\n#       media_url,\n#       service,\n#       media_type,\n#       title,\n#       artist,\n#       album,\n#       year\n#      }\n#   }\n  \n  mutation {\n    login(username: {\n      username: \"cosimad\",\n      password:\"test\"\n    }) {\n      token\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n#   mutation {\n#     new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n#       url,\n#       media_url,\n#       service,\n#       media_type,\n#       title,\n#       artist,\n#       album,\n#       year\n#      }\n#   }\n  \n  mutation {\n    login(username: {\n      username: \"cosimad\",\n      password:\"test\"\n    }) {\n      token\n    }\n  }", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosimad"], ["LIMIT", 1]]
Completed 200 OK in 69ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:01:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n#   mutation {\n#     new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n#       url,\n#       media_url,\n#       service,\n#       media_type,\n#       title,\n#       artist,\n#       album,\n#       year\n#      }\n#   }\n  \n  mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"password\"\n    }) {\n      token\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"\n#   mutation {\n#     new_track(url: \"https://soundcloud.com/andersonpaak/bubblin-1\") {\n#       url,\n#       media_url,\n#       service,\n#       media_type,\n#       title,\n#       artist,\n#       album,\n#       year\n#      }\n#   }\n  \n  mutation {\n    login(username: {\n      username: \"cosima\",\n      password:\"password\"\n    }) {\n      token\n    }\n  }", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:07:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:14:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:18:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:19:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:20:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 457ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:22:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:22:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1325ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:23:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:23:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 477ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:26:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:26:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 592ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:27:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:29:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:29:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 484ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:29:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:30:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 444ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:32:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:32:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:32:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:32:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"fields"=>{"valid"=>false, "url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "mediaUrl"=>"", "service"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"fields"=>{"valid"=>false, "url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "mediaUrl"=>"", "service"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:34:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:34:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 464ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:35:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:35:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 551ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:35:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:36:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:36:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 508ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:36:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: string!, $service: string!, $mediaUrl: string!, $mediaType: string!, $title: string!, $artist: string!, $album: string, $year: string) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: string!, $service: string!, $mediaUrl: string!, $mediaType: string!, $title: string!, $artist: string!, $album: string, $year: string) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:38:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 51ms (Views: 0.4ms | ActiveRecord: 11.1ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:38:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 610ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:38:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:38:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 49ms (Views: 0.3ms | ActiveRecord: 12.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:38:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 562ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:38:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:39:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:39:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 473ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:39:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:40:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:40:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 42ms (Views: 0.3ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:40:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 871ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:40:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 60ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `url' for #<Resolvers::CreateTrack:0x00007f5138211390>
Did you mean?  URI):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 06:40:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:40:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 478ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:41:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `ctx' for #<Resolvers::CreateTrack:0x00007f513e57ca10>
Did you mean?  _ctx):
  
app/graphql/resolvers/create_track.rb:26:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 06:41:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:41:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 537ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:41:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 2.8ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'service' for Track.):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to RenameSourceServiceToService (20180806104409)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (37.3ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "source_service" TO "service"[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180806104409"]]
  [1m[35m (9.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (18.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-06 06:45:15 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 26ms (ActiveRecord: 2.8ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'year' for Track.):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 06:45:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 26ms (Views: 0.4ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:45:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 568ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 06:45:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'year' for Track.):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddYearToTrack (20180806110551)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (61.6ms)[0m  [1m[35mALTER TABLE "tracks" ADD "year" integer[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180806110551"]]
  [1m[35m (17.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-06 07:06:35 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 42ms (Views: 0.4ms | ActiveRecord: 6.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:06:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 426ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:06:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 150ms (ActiveRecord: 6.0ms)


  
NoMethodError (undefined method `submitted_url' for #<Track:0x00007f513e2388b8>):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:10:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 52ms (Views: 0.5ms | ActiveRecord: 4.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:10:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 455ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:10:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 21ms (ActiveRecord: 6.0ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank, Service is not included in the list):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mTrack Load (54.0ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(8343670822604057115)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to ChangeUserReferenceOnTrack (20180806112719)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (97.5ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "user_id"[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" ADD "user_id" bigint[0m
  [1m[35m (95.7ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35m (10.1ms)[0m  [1m[35mALTER TABLE "tracks" ADD CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180806112719"]]
  [1m[35m (20.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(8343670822604057115)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-06 07:32:33 -0400
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 70ms (Views: 0.4ms | ActiveRecord: 6.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:32:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 586ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:32:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 24ms (ActiveRecord: 2.7ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank, Service is not included in the list):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:34:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 49ms (Views: 0.4ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:34:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 492ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:34:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:35:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 59ms (Views: 0.4ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:35:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:35:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 502ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:36:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 43ms (Views: 0.4ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:36:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 460ms (ActiveRecord: 0.0ms)


  
TypeError (no implicit conversion of nil into String):
  
app/graphql/resolvers/new_track.rb:28:in `+'
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:37:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 61ms (Views: 0.4ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:37:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 437ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:39:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:40:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 521ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:40:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:41:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 485ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/graphql/resolvers/new_track.rb:28:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:42:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 61ms (Views: 0.3ms | ActiveRecord: 8.2ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:43:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 617ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:43:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 21ms (ActiveRecord: 6.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank, Service is not included in the list):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-08-06 07:43:28 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 60ms (Views: 0.3ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:43:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:43:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosimad", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(authProvider: {username: {username: $username, password: $password}}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosimad", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(authProvider: {username: {username: $username, password: $password}}) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:44:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(authProvider: {username: {username: $username, password: $password}}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(authProvider: {username: {username: $username, password: $password}}) {\n    token\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:45:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 07:45:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:45:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 70ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:45:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 554ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:45:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 25ms (ActiveRecord: 2.7ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank, Service is not included in the list):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:47:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 45ms (Views: 0.4ms | ActiveRecord: 8.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:47:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 467ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:47:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 21ms (ActiveRecord: 2.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:56:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 48ms (Views: 0.3ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:56:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 686ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:56:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 19ms (ActiveRecord: 2.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-06 07:56:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 46ms (Views: 0.3ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:56:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 458ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 07:56:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (21.8ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "service", "media_type", "created_at", "updated_at", "media_url", "year", "user_id") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING "id"[0m  [["url", "https://soundcloud.com/andersonpaak/bubblin-1"], ["title", "Bubblin"], ["artist", "anderson .paak"], ["service", "Soundcloud"], ["media_type", "audio"], ["created_at", "2018-08-06 11:56:51.163264"], ["updated_at", "2018-08-06 11:56:51.163264"], ["media_url", "https://api.soundcloud.com/tracks/442210938/stream"], ["year", 2018], ["user_id", 1]]
  [1m[35m (10.8ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 90ms (Views: 0.2ms | ActiveRecord: 35.4ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
Started POST "/graphql" for ::1 at 2018-08-06 08:03:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:03:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 08:03:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:03:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 474ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:04:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 08:04:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:04:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 453ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:04:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.6ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "service", "media_type", "created_at", "updated_at", "media_url", "year", "user_id") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING "id"[0m  [["url", "https://soundcloud.com/andersonpaak/bubblin-1"], ["title", "Bubblin"], ["artist", "anderson .paak"], ["service", "Soundcloud"], ["media_type", "audio"], ["created_at", "2018-08-06 12:04:57.595973"], ["updated_at", "2018-08-06 12:04:57.595973"], ["media_url", "https://api.soundcloud.com/tracks/442210938/stream"], ["year", 2018], ["user_id", 1]]
  [1m[35m (25.9ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 39ms (Views: 0.2ms | ActiveRecord: 27.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 08:07:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:07:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:08:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 08:08:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:08:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 469ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:08:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "service", "media_type", "created_at", "updated_at", "media_url", "year", "user_id") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING "id"[0m  [["url", "https://soundcloud.com/andersonpaak/bubblin-1"], ["title", "Bubblin"], ["artist", "anderson .paak"], ["service", "Soundcloud"], ["media_type", "audio"], ["created_at", "2018-08-06 12:08:54.846472"], ["updated_at", "2018-08-06 12:08:54.846472"], ["media_url", "https://api.soundcloud.com/tracks/442210938/stream"], ["year", 2018], ["user_id", 1]]
  [1m[35m (153.4ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 159ms (Views: 0.2ms | ActiveRecord: 154.1ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:09:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 08:09:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:09:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 574ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:09:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 08:09:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:10:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:10:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 494ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-06 08:10:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>2018}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.3ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "service", "media_type", "created_at", "updated_at", "media_url", "year", "user_id") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING "id"[0m  [["url", "https://soundcloud.com/andersonpaak/bubblin-1"], ["title", "Bubblin"], ["artist", "anderson .paak"], ["service", "Soundcloud"], ["media_type", "audio"], ["created_at", "2018-08-06 12:10:08.657428"], ["updated_at", "2018-08-06 12:10:08.657428"], ["media_url", "https://api.soundcloud.com/tracks/442210938/stream"], ["year", 2018], ["user_id", 1]]
  [1m[35m (23.9ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 24.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-06 22:05:58 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-07 03:54:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-07 04:31:03 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 31ms (Views: 0.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for ::1 at 2018-08-07 04:31:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-07 04:31:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-07 04:31:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:02:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:05:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"cosima", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "cosima"], ["LIMIT", 1]]
Completed 200 OK in 70ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:11:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:22:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:27:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 0.5ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:31:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-07 06:31:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-08 03:40:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-08 03:41:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-08 03:51:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-08 03:57:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-08 04:07:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-08 04:11:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-08 04:12:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-08 04:31:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-08 05:15:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 45ms (Views: 0.3ms | ActiveRecord: 5.7ms)


Started POST "/graphql" for ::1 at 2018-08-08 05:16:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-08 05:16:56 -0400
  [1m[36mUser Load (2.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 2.4ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 67ms (Views: 0.4ms | ActiveRecord: 8.6ms)


Started POST "/graphql" for ::1 at 2018-08-09 04:34:07 -0400
Started POST "/graphql" for ::1 at 2018-08-09 04:34:07 -0400
  [1m[35m (38.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (38.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 141ms (Views: 0.2ms | ActiveRecord: 0.0ms)


  [1m[36mTrack Load (246.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 404ms (Views: 0.3ms | ActiveRecord: 275.6ms)


Started GET "/" for ::1 at 2018-08-09 04:35:09 -0400
Started GET "/graphiql" for ::1 at 2018-08-09 04:35:09 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (704.4ms)
Completed 200 OK in 708ms (Views: 707.0ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-08-09 04:35:10 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-09 04:35:10 -0400
Started POST "/graphql" for ::1 at 2018-08-09 04:35:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 98ms (Views: 27.1ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-09 04:35:12 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2018-08-09 05:33:48 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.0ms)
Completed 200 OK in 5ms (Views: 4.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 05:33:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 143ms (Views: 29.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 05:34:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users {\n    id\n    name\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users {\n    id\n    name\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (24.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 96ms (Views: 0.2ms | ActiveRecord: 27.8ms)


Started POST "/graphql" for ::1 at 2018-08-09 05:34:25 -0400
Started POST "/graphql" for ::1 at 2018-08-09 05:34:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 47ms (Views: 1.3ms | ActiveRecord: 5.8ms)


  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Destroy (42.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 4]]
  [1m[35m (26.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Destroy (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 5]]
  [1m[35m (43.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Destroy (0.4ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 3]]
  [1m[35m (40.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Destroy (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 2]]
  [1m[35m (36.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Destroy (0.8ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Started POST "/graphql" for ::1 at 2018-08-09 05:40:18 -0400
Started POST "/graphql" for ::1 at 2018-08-09 05:40:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (2.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 2.4ms)


  [1m[36mTrack Load (2.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 2.9ms)


  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 5]]
  [1m[35m (48.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 4]]
  [1m[35m (37.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 3]]
  [1m[35m (48.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 1]]
  [1m[35m (21.2ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-08-09 05:41:32 -0400
Started POST "/graphql" for ::1 at 2018-08-09 05:41:32 -0400
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (5.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 5.1ms)


  [1m[36mUser Load (1.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 06:53:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:16:26 -0400
Started POST "/graphql" for ::1 at 2018-08-09 07:16:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 46ms (Views: 0.3ms | ActiveRecord: 8.3ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 29ms (Views: 0.3ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:41:03 -0400
Started POST "/graphql" for ::1 at 2018-08-09 07:41:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 36ms (Views: 0.2ms | ActiveRecord: 4.1ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 42ms (Views: 0.3ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:43:30 -0400
Started POST "/graphql" for ::1 at 2018-08-09 07:43:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 29ms (Views: 0.3ms | ActiveRecord: 4.5ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:43:50 -0400
Started POST "/graphql" for ::1 at 2018-08-09 07:43:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 1.9ms)


Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:44:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 71ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:45:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 74ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:45:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-09 07:45:54 -0400
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:46:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 69ms (Views: 0.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:49:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 540ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:50:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>"2014"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>"2014"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:50:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>"2014"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>"2014"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:50:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-09 07:50:52 -0400
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:51:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 523ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:51:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>"2014"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>"2014"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:51:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>""}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>""}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-09 07:51:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>""}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/theacid/the-acid-tumbling-lights", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/95838497/stream", "mediaType"=>"audio", "title"=>"Tumbling Lights", "artist"=>"∴  The Acid  ∴", "album"=>"Liminal", "year"=>""}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: Int) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.0ms)


  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to ChangeYearToStringOnTrack (20180809135505)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (117.3ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "year"[0m
  [1m[35m (11.7ms)[0m  [1m[35mALTER TABLE "tracks" ADD "year" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180809135505"]]
  [1m[35m (19.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (16.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "year" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["year", "2018"], ["updated_at", "2018-08-09 13:59:08.495646"], ["id", 2]]
  [1m[35m (18.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-08-09 10:04:19 -0400
Started POST "/graphql" for ::1 at 2018-08-09 10:04:19 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 46ms (Views: 0.3ms | ActiveRecord: 10.9ms)


  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 85ms (Views: 0.2ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for ::1 at 2018-08-10 06:34:09 -0400
Started POST "/graphql" for ::1 at 2018-08-10 06:34:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (2.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Processing by GraphqlController#execute as */*
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 2.6ms)


  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for ::1 at 2018-08-10 07:16:11 -0400
Started POST "/graphql" for ::1 at 2018-08-10 07:16:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 1.3ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-10 21:16:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-10 21:16:15 -0400
Started POST "/graphql" for 127.0.0.1 at 2018-08-10 21:16:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:01:01 -0400
Started POST "/graphql" for ::1 at 2018-08-11 01:01:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (4.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 4.6ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:06:40 -0400
Started POST "/graphql" for ::1 at 2018-08-11 01:06:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (3.9ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 10ms (Views: 0.5ms | ActiveRecord: 3.9ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 10ms (Views: 0.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:09:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 01:09:49 -0400
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:10:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:10:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:12:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 01:12:35 -0400
  [1m[36mUser Load (1.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:14:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 01:14:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.5ms)


  [1m[36mTrack Load (1.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:20:18 -0400
Started POST "/graphql" for ::1 at 2018-08-11 01:20:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (2.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 2.7ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:21:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 01:21:08 -0400
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 1.0ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 9ms (Views: 0.7ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:28:16 -0400
Started POST "/graphql" for ::1 at 2018-08-11 01:28:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:31:39 -0400
Started POST "/graphql" for ::1 at 2018-08-11 01:31:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (2.9ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 2.9ms)


  [1m[36mTrack Load (1.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:53:55 -0400
Started POST "/graphql" for ::1 at 2018-08-11 01:53:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (2.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 2.2ms)


  [1m[36mUser Load (1.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:56:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 01:56:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 02:18:56 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:18:56 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:18:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Processing by GraphqlController#execute as */*
  [1m[36mTrack Load (5.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 5.4ms)


  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 02:19:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 02:19:11 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:19:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (8.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 8.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 02:47:36 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:47:36 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:47:36 -0400
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (5.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 5.7ms)


  [1m[36mUser Load (2.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 10ms (Views: 0.5ms | ActiveRecord: 2.4ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for ::1 at 2018-08-11 02:48:16 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:48:16 -0400
Started POST "/graphql" for ::1 at 2018-08-11 02:48:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.7ms)


  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (5.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 5.1ms)


  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:04:52 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:04:52 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:04:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (3.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (3.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 3.0ms)


  [1m[36mTrack Load (1.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:05:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:05:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 03:05:31 -0400
  [1m[36mTrack Load (1.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 1.1ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:07:41 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:07:41 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:07:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  [1m[36mTrack Load (1.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 1.6ms)


  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (4.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 4.1ms)


  [1m[36mTrack Load (2.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:09:14 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:09:14 -0400
Processing by GraphqlController#execute as */*
Started POST "/graphql" for ::1 at 2018-08-11 03:09:14 -0400
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (2.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 2.3ms)


  [1m[36mTrack Load (1.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Processing by GraphqlController#execute as */*
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.6ms)


  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:10:20 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:10:20 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:10:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (6.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 6.4ms)


  [1m[36mUser Load (5.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 5.0ms)


  [1m[36mTrack Load (2.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:10:50 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:10:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 03:10:50 -0400
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (2.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 2.0ms)


  [1m[36mTrack Load (1.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:13:32 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:13:32 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:13:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Processing by GraphqlController#execute as */*
  [1m[36mTrack Load (13.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 13.4ms)


  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:15:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-08-11 03:15:00 -0400
Started POST "/graphql" for ::1 at 2018-08-11 03:15:00 -0400
  [1m[36mUser Load (1.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Processing by GraphqlController#execute as */*
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (5.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 5.1ms)


  [1m[36mTrack Load (1.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 03:24:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1125ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:28:59 -0400
Started POST "/graphql" for ::1 at 2018-08-11 04:28:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 41ms (Views: 0.2ms | ActiveRecord: 5.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:28:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (18.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mTrack Load (0.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 64ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Completed 200 OK in 53ms (Views: 0.1ms | ActiveRecord: 37.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:29:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 910ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:29:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534062543&t=bdc12d94f51c474c51fa52e197586d7389987670&token=1534062543_2b544df3a56e52bd614ef31d05d34f8797fb583e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534062543&t=bdc12d94f51c474c51fa52e197586d7389987670&token=1534062543_2b544df3a56e52bd614ef31d05d34f8797fb583e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 123ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 04:31:38 -0400
Started POST "/graphql" for ::1 at 2018-08-11 04:31:38 -0400
Started POST "/graphql" for ::1 at 2018-08-11 04:31:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 21ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Completed 200 OK in 74ms (Views: 0.3ms | ActiveRecord: 0.0ms)


  [1m[36mUser Load (12.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 98ms (Views: 0.2ms | ActiveRecord: 17.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:31:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1157ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:31:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534062707&t=7d293da6c5cfb453cd5af8ef3ca0882ad3f992c0&token=1534062707_94c9be3423c5f3eb22e3e975e43095e797b67fa9", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534062707&t=7d293da6c5cfb453cd5af8ef3ca0882ad3f992c0&token=1534062707_94c9be3423c5f3eb22e3e975e43095e797b67fa9", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 31ms (ActiveRecord: 2.5ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist, User can't be blank):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 04:40:06 -0400
Started POST "/graphql" for ::1 at 2018-08-11 04:40:06 -0400
Started POST "/graphql" for ::1 at 2018-08-11 04:40:06 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (2.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  users {\n    id\n    username\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Completed 200 OK in 62ms (Views: 0.2ms | ActiveRecord: 0.0ms)


  [1m[36mTrack Load (6.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 78ms (Views: 0.2ms | ActiveRecord: 9.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:41:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:42:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-11 04:43:25 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (179.6ms)
Completed 200 OK in 236ms (Views: 235.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:43:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:43:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 73ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-11 04:43:35 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.0) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.0) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.0) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.0) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.0) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.0) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.0) lib/rails/engine.rb:524:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-08-11 04:45:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:47:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:50:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:53:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  tracks {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  tracks {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:54:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:54:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-11 04:55:00 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:55:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 113ms (Views: 36.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:55:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 56ms (Views: 0.2ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:55:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:55:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 106ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:58:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"password\"\n  }) {\n    token\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"password\"\n  }) {\n    token\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 04:58:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 66ms (Views: 0.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:01:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 20ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `[]' for nil:NilClass):
  
app/graphql/resolvers/new_track.rb:20:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 05:02:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 662ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:03:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1632ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:04:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 624ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:05:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 85ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:08:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user\n  }\n}", "variables"=>nil}}
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-11 05:08:45 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.4ms)
Completed 200 OK in 7ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:08:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 79ms (Views: 9.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:08:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 613ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-11 05:11:39 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:11:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 100ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:11:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 739ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:12:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 24ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:12:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 957ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:12:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 82ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:12:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 581ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:14:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 646ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:14:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534065275&t=c305550f46921a765d2ff6db4ba94f6051c740a4&token=1534065275_790c3eb95ab233ff2a6a302d2fdd75665faf2e44", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534065275&t=c305550f46921a765d2ff6db4ba94f6051c740a4&token=1534065275_790c3eb95ab233ff2a6a302d2fdd75665faf2e44", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 15ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 05:16:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:17:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 69ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:17:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 72ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:18:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 787ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:19:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 76ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:24:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 44ms (Views: 0.3ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:24:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 594ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:29:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 964ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:29:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `current_user' for #<GraphQL Context @ Mutation.new_track>):
  
app/graphql/resolvers/new_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 05:29:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 739ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:30:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 20ms (ActiveRecord: 0.0ms)


  
NoMethodError (private method `global_variables' called for #<GraphQL Context @ Mutation.new_track>):
  
app/graphql/resolvers/new_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 05:31:19 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 632ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:31:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 936ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:33:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 97ms (Views: 0.2ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:34:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 92ms (Views: 0.2ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:34:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:35:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 92ms (Views: 0.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:35:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:36:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 29ms (Views: 0.3ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:36:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 73ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:36:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1233ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:40:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 605ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:41:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 724ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:42:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 688ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 05:50:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 639ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:05:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 634ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:05:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534068305&t=3e3f24ea95413850a67c04f128f69a69370f8691&token=1534068305_46eef0241a0ad87ae1349cd91e35eb45844058ff", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534068305&t=3e3f24ea95413850a67c04f128f69a69370f8691&token=1534068305_46eef0241a0ad87ae1349cd91e35eb45844058ff", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 24ms (ActiveRecord: 4.7ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist):
  
app/graphql/resolvers/create_track.rb:17:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 06:19:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 110ms (ActiveRecord: 4.1ms)


  
TypeError (no implicit conversion of GraphQL::Query::Context::FieldResolutionContext into String):
  
app/graphql/resolvers/user_login.rb:26:in `+'
app/graphql/resolvers/user_login.rb:26:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-11 06:20:05 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.10/app/views/graphiql/rails/editors/show.html.erb (6.1ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:20:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 96ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:20:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  login(username:{\n    username:\"egpavelka\",\n    password:\"test\"\n  }) {\n    token\n    user {\n      id\n    }\n  }\n}\n# mutation {\n#   new_track(\n#    url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n#  ) {\n#     user {\n#       id\n#     }\n#   }\n# }", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 84ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:31:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Mutation is invalid: field "create_track" argument "user" type must be a valid input type (Scalar or InputObject), not GraphQL::ObjectType (User)):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 06:32:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 997ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:32:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534069935&t=56d1fa7aefd0ea5e9025a36ae2021696de169fa9&token=1534069935_241ee59a2be0a77e5b5ad0d0dbcc2accaf1c2e04", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534069935&t=56d1fa7aefd0ea5e9025a36ae2021696de169fa9&token=1534069935_241ee59a2be0a77e5b5ad0d0dbcc2accaf1c2e04", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 22ms (ActiveRecord: 4.8ms)


  
ActiveRecord::RecordInvalid (Validation failed: User must exist):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 06:37:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:38:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    user\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>nil}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    user\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:40:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 717ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:40:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070422&t=8a4263d120973d7d23b38da9a32972db459480d2&token=1534070422_ef6472c6b39d720b987c22ecee8e1a170b3268ad", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, user: $user) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070422&t=8a4263d120973d7d23b38da9a32972db459480d2&token=1534070422_ef6472c6b39d720b987c22ecee8e1a170b3268ad", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, user: $user) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:41:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1053ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:41:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070488&t=ac04af2cff9dd050d62f5a2ccaaddef6755c9024&token=1534070488_c722ed9862b2cdfefa8227128b8c44de7bc19bf4", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, user: \"1\") {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070488&t=ac04af2cff9dd050d62f5a2ccaaddef6755c9024&token=1534070488_c722ed9862b2cdfefa8227128b8c44de7bc19bf4", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, user: \"1\") {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:42:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 585ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:42:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070549&t=b58b03795eaf1080993b2be4183cf20e1efeec52&token=1534070549_a3d95e4ad1cb04957f54bd51a81b4a882edeb8d3", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070549&t=b58b03795eaf1080993b2be4183cf20e1efeec52&token=1534070549_a3d95e4ad1cb04957f54bd51a81b4a882edeb8d3", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 21ms (ActiveRecord: 3.4ms)


  
ActiveRecord::AssociationTypeMismatch (User(#70225582462780) expected, got "1" which is an instance of String(#47294760836640)):
  
app/graphql/resolvers/create_track.rb:18:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-11 06:43:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 776ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:44:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070638&t=48c71bd1fa8355609b4b7587a15c121efbfbb1a6&token=1534070638_5c0b97690c7a604519668dd80145b533f8677e6e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070638&t=48c71bd1fa8355609b4b7587a15c121efbfbb1a6&token=1534070638_5c0b97690c7a604519668dd80145b533f8677e6e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (49.2ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-11 10:44:03.083680"], ["updated_at", "2018-08-11 10:44:03.083680"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534070638&t=48c71bd1fa8355609b4b7587a15c121efbfbb1a6&token=1534070638_5c0b97690c7a604519668dd80145b533f8677e6e"], ["user_id", 1], ["year", "2017"]]
  [1m[35m (11.4ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 158ms (Views: 0.3ms | ActiveRecord: 67.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:44:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-11 06:51:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for ::1 at 2018-08-11 07:00:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-11 07:15:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-11 07:17:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 07:22:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-11 07:34:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-12 02:51:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 11ms (Views: 1.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-08-12 02:52:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-12 02:54:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 02:54:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-12 02:56:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:00:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:00:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:02:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:03:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:05:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:06:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 9ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:08:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:10:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:13:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:14:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:15:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:17:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 03:18:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-12 07:46:55 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 23ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `has_one_attached' for #<Class:0x00007fa68ce853e8>):
  
app/models/track.rb:5:in `<class:Track>'
app/models/track.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:10:in `block (3 levels) in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-12 07:50:19 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 31ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `has_one_attached' for #<Class:0x00007f69b0a01218>):
  
app/models/track.rb:5:in `<class:Track>'
app/models/track.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:10:in `block (3 levels) in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-12 07:53:28 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tIDENTIFIER, expecting ')'
      user_id: "1"
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:31: syntax error, unexpected ')', expecting keyword_end
    )
    ^):
  
app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/resolvers/create_track.rb:31: syntax error, unexpected ')', expecting keyword_end
app/graphql/types/mutation_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-12 07:54:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 33ms (Views: 0.2ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:04:41 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 36ms (Views: 0.2ms | ActiveRecord: 4.0ms)


  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveStorageTables (20180711100234)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE "active_storage_attachments"[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveStorageTables (20180812123042)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (470.1ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (44.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (87.3ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (23.0ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (32.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180812123042"]]
  [1m[35m (18.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-12 08:31:48 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 40ms (Views: 0.3ms | ActiveRecord: 8.7ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:37:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 45ms (Views: 0.4ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:37:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 959ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:38:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534163880&t=abf22208901a11743fc42f4651bb6c4cb92d057c&token=1534163880_9a786cc621c6dced141d5e7993643b919b47561e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534163880&t=abf22208901a11743fc42f4651bb6c4cb92d057c&token=1534163880_9a786cc621c6dced141d5e7993643b919b47561e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
TypeError (no implicit conversion of nil into String):
  
app/graphql/resolvers/create_track.rb:20:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-12 08:41:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 714ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:41:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534164103&t=8572f7ccbb7240e6cb96a59f0d08bab2387a6b40&token=1534164103_802a5001b4d66f7578a442a8c0ab5e06f1c648bb", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534164103&t=8572f7ccbb7240e6cb96a59f0d08bab2387a6b40&token=1534164103_802a5001b4d66f7578a442a8c0ab5e06f1c648bb", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
Errno::ENOENT (No such file or directory @ rb_sysopen - ):
  
app/graphql/resolvers/create_track.rb:20:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-12 08:42:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 613ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:42:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534164157&t=74c2795d0b5d5881c7bc320f3a370b346317d7cc&token=1534164157_531a528e9ab0ffdc3aafe676bca0d6bff44b84af", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534164157&t=74c2795d0b5d5881c7bc320f3a370b346317d7cc&token=1534164157_531a528e9ab0ffdc3aafe676bca0d6bff44b84af", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.8ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-12 12:42:40.023180"], ["updated_at", "2018-08-12 12:42:40.023180"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534164157&t=74c2795d0b5d5881c7bc320f3a370b346317d7cc&token=1534164157_531a528e9ab0ffdc3aafe676bca0d6bff44b84af"], ["user_id", 1], ["year", "2017"]]
  [1m[35m (21.9ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 75ms (Views: 0.2ms | ActiveRecord: 29.6ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:42:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:43:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:43:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:43:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:44:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-12 08:44:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddArtworkUrlToTrack (20180812125814)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "tracks" ADD "artwork_url" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180812125814"]]
  [1m[35m (35.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-13 03:31:38 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 03:32:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    media_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    media_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 682ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-13 03:49:19 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (785.2ms)
Completed 200 OK in 789ms (Views: 788.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 03:49:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 153ms (Views: 27.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 03:49:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    media_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    media_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 590ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 03:49:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n    artwork_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 606ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 03:54:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 687ms (Views: 0.2ms | ActiveRecord: 0.0ms)


  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Started POST "/graphql" for ::1 at 2018-08-13 03:55:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  new_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 731ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 03:56:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    service:\"Bandcamp\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    service:\"Bandcamp\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-13 04:03:50 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (5.1ms)
Completed 200 OK in 12ms (Views: 11.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:03:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 109ms (Views: 10.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:03:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    service:\"Bandcamp\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    service:\"Bandcamp\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-08-13 04:05:05 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (5.6ms)
Completed 200 OK in 9ms (Views: 8.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:05:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/types/track_type.rb:13: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
  field :artwork_url, types.String,
        ^
/home/gigi/Code/Current/playsette/api/app/graphql/types/track_type.rb:14: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
  field :user, -> { Types::UserType }
        ^):
  
app/graphql/types/track_type.rb:13: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
app/graphql/types/track_type.rb:14: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
app/graphql/types/query_type.rb:9:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 04:05:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/types/track_type.rb:13: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
  field :artwork_url, types.String,
        ^
/home/gigi/Code/Current/playsette/api/app/graphql/types/track_type.rb:14: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
  field :user, -> { Types::UserType }
        ^):
  
app/graphql/types/track_type.rb:13: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
app/graphql/types/track_type.rb:14: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
app/graphql/resolvers/create_track.rb:15:in `<class:CreateTrack>'
app/graphql/resolvers/create_track.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-13 04:05:50 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (4.3ms)
Completed 200 OK in 8ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:05:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 117ms (Views: 9.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:05:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    service:\"Bandcamp\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    service:\"Bandcamp\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:07:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    title: \"Bump Up\",\n    artist: \"Sun Araw\",\n    album: \"Houston Abstros\",\n    year: \"2017\",\n    media_url: \"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534233358&t=f4ef5edbe0f968ca2023f8ef9e319290a0692e3a&token=1534233358_fc8685de4641bd48e1ed5facd6bd28bca6bb881d\",\n    service: \"Bandcamp\",\n    media_type: \"audio\",\n    artwork_url: \"https://f4.bcbits.com/img/a4018797088_2.jpg\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    title: \"Bump Up\",\n    artist: \"Sun Araw\",\n    album: \"Houston Abstros\",\n    year: \"2017\",\n    media_url: \"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534233358&t=f4ef5edbe0f968ca2023f8ef9e319290a0692e3a&token=1534233358_fc8685de4641bd48e1ed5facd6bd28bca6bb881d\",\n    service: \"Bandcamp\",\n    media_type: \"audio\",\n    artwork_url: \"https://f4.bcbits.com/img/a4018797088_2.jpg\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.7ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 08:07:30.055756"], ["updated_at", "2018-08-13 08:07:30.055756"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534233358&t=f4ef5edbe0f968ca2023f8ef9e319290a0692e3a&token=1534233358_fc8685de4641bd48e1ed5facd6bd28bca6bb881d"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 50ms (ActiveRecord: 8.2ms)


  
URI::InvalidURIError (bad URI(is not URI?): artwork_url):
  
app/utilities/data_grab_util.rb:12:in `file_from_url'
app/models/track.rb:27:in `get_album_art'
app/graphql/resolvers/create_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-08-13 04:09:33 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (7.0ms)
Completed 200 OK in 9ms (Views: 8.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:09:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 110ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:09:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    title: \"Bump Up\",\n    artist: \"Sun Araw\",\n    album: \"Houston Abstros\",\n    year: \"2017\",\n    media_url: \"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534233358&t=f4ef5edbe0f968ca2023f8ef9e319290a0692e3a&token=1534233358_fc8685de4641bd48e1ed5facd6bd28bca6bb881d\",\n    service: \"Bandcamp\",\n    media_type: \"audio\",\n    artwork_url: \"https://f4.bcbits.com/img/a4018797088_2.jpg\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\nmutation {\n  create_track(\n   url:\"https://sunarawmonofonus.bandcamp.com/track/bump-up\",\n    title: \"Bump Up\",\n    artist: \"Sun Araw\",\n    album: \"Houston Abstros\",\n    year: \"2017\",\n    media_url: \"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534233358&t=f4ef5edbe0f968ca2023f8ef9e319290a0692e3a&token=1534233358_fc8685de4641bd48e1ed5facd6bd28bca6bb881d\",\n    service: \"Bandcamp\",\n    media_type: \"audio\",\n    artwork_url: \"https://f4.bcbits.com/img/a4018797088_2.jpg\"\n ) {\n  url\n  title\n  artist\n  album\n  year\n  media_url\n  service\n  media_type\n  artwork_url\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 08:09:35.979196"], ["updated_at", "2018-08-13 08:09:35.979196"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534233358&t=f4ef5edbe0f968ca2023f8ef9e319290a0692e3a&token=1534233358_fc8685de4641bd48e1ed5facd6bd28bca6bb881d"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 46ms (ActiveRecord: 6.0ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/utilities/data_grab_util.rb:12:in `file_from_url'
app/models/track.rb:27:in `get_album_art'
app/graphql/resolvers/create_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 04:15:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 629ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 04:15:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534234537&t=2a35bcbcf6e227dbdfb19c1ec1ee8c1f278f71ab&token=1534234537_c62cd18c2144f858b5d1a40e24b59ac07eb6a17a", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534234537&t=2a35bcbcf6e227dbdfb19c1ec1ee8c1f278f71ab&token=1534234537_c62cd18c2144f858b5d1a40e24b59ac07eb6a17a", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.8ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 08:15:39.292387"], ["updated_at", "2018-08-13 08:15:39.292387"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534234537&t=2a35bcbcf6e227dbdfb19c1ec1ee8c1f278f71ab&token=1534234537_c62cd18c2144f858b5d1a40e24b59ac07eb6a17a"], ["user_id", 1], ["year", "2017"], ["artwork_url", ""]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 8ms (ActiveRecord: 1.7ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/utilities/data_grab_util.rb:12:in `file_from_url'
app/models/track.rb:27:in `get_album_art'
app/graphql/resolvers/create_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:15:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 727ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:15:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238134&t=8c92ea83d5c2844aab68e20977d9016a88b99ea9&token=1534238134_15104d92c073462f461f8890bc083321b9a25d64", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238134&t=8c92ea83d5c2844aab68e20977d9016a88b99ea9&token=1534238134_15104d92c073462f461f8890bc083321b9a25d64", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.7ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:15:39.031000"], ["updated_at", "2018-08-13 09:15:39.031000"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238134&t=8c92ea83d5c2844aab68e20977d9016a88b99ea9&token=1534238134_15104d92c073462f461f8890bc083321b9a25d64"], ["user_id", 1], ["year", "2017"], ["artwork_url", ""]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 44ms (ActiveRecord: 8.0ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/utilities/data_grab_util.rb:12:in `file_from_url'
app/models/track.rb:27:in `get_album_art'
app/graphql/resolvers/create_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:16:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 787ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:16:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238199&t=dd55f65a242904d004aab7e10ac0584011b1f07d&token=1534238199_8dc2fe1a6f22e91b5485132b87f71619448ac22f", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238199&t=dd55f65a242904d004aab7e10ac0584011b1f07d&token=1534238199_8dc2fe1a6f22e91b5485132b87f71619448ac22f", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:16:41.037958"], ["updated_at", "2018-08-13 09:16:41.037958"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238199&t=dd55f65a242904d004aab7e10ac0584011b1f07d&token=1534238199_8dc2fe1a6f22e91b5485132b87f71619448ac22f"], ["user_id", 1], ["year", "2017"], ["artwork_url", ""]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 45ms (ActiveRecord: 7.0ms)


  
NoMethodError (undefined method `log' for nil:NilClass):
  
app/models/track.rb:28:in `get_album_art'
app/graphql/resolvers/create_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:18:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:18:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:18:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 678ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:19:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238336&t=abcb52b767d43f3799e46e19151c6e1664684a22&token=1534238336_1dda427ef76a555e75232546e19a3fd7908a84ea", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238336&t=abcb52b767d43f3799e46e19151c6e1664684a22&token=1534238336_1dda427ef76a555e75232546e19a3fd7908a84ea", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:19:00.445359"], ["updated_at", "2018-08-13 09:19:00.445359"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238336&t=abcb52b767d43f3799e46e19151c6e1664684a22&token=1534238336_1dda427ef76a555e75232546e19a3fd7908a84ea"], ["user_id", 1], ["year", "2017"], ["artwork_url", ""]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 42ms (ActiveRecord: 9.6ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/models/track.rb:29:in `get_album_art'
app/graphql/resolvers/create_track.rb:21:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:20:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "artwork_url"=>"", "year"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 641ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:20:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238411&t=e23505516cda077bb3ecff9bca01a0b26621726a&token=1534238411_c5c1a13ecc539d49f72d37834a010171026db87e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238411&t=e23505516cda077bb3ecff9bca01a0b26621726a&token=1534238411_c5c1a13ecc539d49f72d37834a010171026db87e", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "artwork_url"=>"", "year"=>"2017"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $artwork_url: String, $year: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, artwork_url: $artwork_url, year: $year) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:20:13.940214"], ["updated_at", "2018-08-13 09:20:13.940214"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534238411&t=e23505516cda077bb3ecff9bca01a0b26621726a&token=1534238411_c5c1a13ecc539d49f72d37834a010171026db87e"], ["user_id", 1], ["year", "2017"], ["artwork_url", ""]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 41ms (ActiveRecord: 6.0ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/models/track.rb:29:in `get_album_art'
app/graphql/resolvers/create_track.rb:19:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:33:38 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1146ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:33:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239220&t=a04cd05ca1a979b5ddc9733811415f70546689b5&token=1534239220_64487e2e238874680555ca4112f85c3afe1345ea", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239220&t=a04cd05ca1a979b5ddc9733811415f70546689b5&token=1534239220_64487e2e238874680555ca4112f85c3afe1345ea", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.8ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:33:41.778035"], ["updated_at", "2018-08-13 09:33:41.778035"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239220&t=a04cd05ca1a979b5ddc9733811415f70546689b5&token=1534239220_64487e2e238874680555ca4112f85c3afe1345ea"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 9ms (ActiveRecord: 1.8ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/models/track.rb:29:in `get_album_art'
app/graphql/resolvers/create_track.rb:19:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:33:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239220&t=a04cd05ca1a979b5ddc9733811415f70546689b5&token=1534239220_64487e2e238874680555ca4112f85c3afe1345ea", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239220&t=a04cd05ca1a979b5ddc9733811415f70546689b5&token=1534239220_64487e2e238874680555ca4112f85c3afe1345ea", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:33:45.301945"], ["updated_at", "2018-08-13 09:33:45.301945"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239220&t=a04cd05ca1a979b5ddc9733811415f70546689b5&token=1534239220_64487e2e238874680555ca4112f85c3afe1345ea"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 9ms (ActiveRecord: 1.2ms)


  
TypeError (no implicit conversion of Symbol into String):
  
app/models/track.rb:29:in `get_album_art'
app/graphql/resolvers/create_track.rb:19:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:34:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 747ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:34:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239266&t=31337732d564b77ac1177de598cf4a26599e0bd3&token=1534239266_9ff51f1d765266f16c0c77dcb752d172bac9f767", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239266&t=31337732d564b77ac1177de598cf4a26599e0bd3&token=1534239266_9ff51f1d765266f16c0c77dcb752d172bac9f767", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.9ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:34:27.892663"], ["updated_at", "2018-08-13 09:34:27.892663"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239266&t=31337732d564b77ac1177de598cf4a26599e0bd3&token=1534239266_9ff51f1d765266f16c0c77dcb752d172bac9f767"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (1.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 17], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[35m (47.7ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 261ms (Views: 0.2ms | ActiveRecord: 66.3ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:34:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 2]]
  [1m[35m (49.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 2], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 6]]
  [1m[35m (31.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 6], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 7]]
  [1m[35m (39.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 7], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Destroy (0.2ms)[0m  [1m[31mDELETE FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 17]]
  [1m[35m (38.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 17], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-13 05:35:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:36:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 688ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:36:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239376&t=694b05305a12886cc370e6c5faa212d7f260f75d&token=1534239376_154aa4a3d6b32d8edda6558f266e2d2ccb18d9c0", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239376&t=694b05305a12886cc370e6c5faa212d7f260f75d&token=1534239376_154aa4a3d6b32d8edda6558f266e2d2ccb18d9c0", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:36:18.454589"], ["updated_at", "2018-08-13 09:36:18.454589"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239376&t=694b05305a12886cc370e6c5faa212d7f260f75d&token=1534239376_154aa4a3d6b32d8edda6558f266e2d2ccb18d9c0"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 18], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[35m (37.5ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 207ms (Views: 0.2ms | ActiveRecord: 38.7ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:36:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 18], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 18], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-13 05:41:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:41:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 686ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:41:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239669&t=e4d55fe51236b2d84b9b0e21de1b84c10df7e50b&token=1534239669_5d4f44bb56b347399d311c9400306dbeeff875b2", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239669&t=e4d55fe51236b2d84b9b0e21de1b84c10df7e50b&token=1534239669_5d4f44bb56b347399d311c9400306dbeeff875b2", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/models/track.rb:30: syntax error, unexpected '=', expecting keyword_end
      :album_art = art
                 ^):
  
app/models/track.rb:30: syntax error, unexpected '=', expecting keyword_end
app/graphql/resolvers/create_track.rb:19:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-13 05:41:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 748ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:41:47 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239706&t=5df39d925bf7d4fb974549bd9c435c1cdd2833af&token=1534239706_596e16b20345c8bbeddaea4d8660cee233881dc0", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239706&t=5df39d925bf7d4fb974549bd9c435c1cdd2833af&token=1534239706_596e16b20345c8bbeddaea4d8660cee233881dc0", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.5ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:41:47.932080"], ["updated_at", "2018-08-13 09:41:47.932080"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239706&t=5df39d925bf7d4fb974549bd9c435c1cdd2833af&token=1534239706_596e16b20345c8bbeddaea4d8660cee233881dc0"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 19], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[35m (15.6ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 215ms (Views: 0.2ms | ActiveRecord: 22.8ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:41:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:42:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:42:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 621ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:42:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239736&t=13991392f7dcb557a4ec5a7b57b21448d80a4b93&token=1534239736_02c248f476d24e125de684cffde6801131f7e506", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239736&t=13991392f7dcb557a4ec5a7b57b21448d80a4b93&token=1534239736_02c248f476d24e125de684cffde6801131f7e506", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:42:18.077386"], ["updated_at", "2018-08-13 09:42:18.077386"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239736&t=13991392f7dcb557a4ec5a7b57b21448d80a4b93&token=1534239736_02c248f476d24e125de684cffde6801131f7e506"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 20], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[35m (5.2ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 236ms (Views: 0.2ms | ActiveRecord: 13.1ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:42:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:42:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 651ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:43:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239780&t=8297ad336a563a478f692c8cb5e43ae7a821ae50&token=1534239780_7d10a5e6b8f14b4dbd758104f9bd2c4da0650728", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239780&t=8297ad336a563a478f692c8cb5e43ae7a821ae50&token=1534239780_7d10a5e6b8f14b4dbd758104f9bd2c4da0650728", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-13 09:43:02.145505"], ["updated_at", "2018-08-13 09:43:02.145505"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534239780&t=8297ad336a563a478f692c8cb5e43ae7a821ae50&token=1534239780_7d10a5e6b8f14b4dbd758104f9bd2c4da0650728"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 21], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 AND "users"."id" != $2 LIMIT $3[0m  [["username", "egpavelka"], ["id", 1], ["LIMIT", 1]]
  [1m[35m (36.4ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 271ms (Views: 0.2ms | ActiveRecord: 44.8ms)


Started POST "/graphql" for ::1 at 2018-08-13 05:43:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" ORDER BY "active_storage_attachments"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 18], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[32mUploaded file to key: UbBXQYwqfYTbWzBffg4Q9huo (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.6ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "UbBXQYwqfYTbWzBffg4Q9huo"], ["filename", "temp.jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-13 10:16:02.548225"]]
  [1m[35m (47.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Create (0.6ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 18], ["blob_id", 1], ["created_at", "2018-08-13 10:16:02.618826"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-13 10:16:02.621546"], ["id", 18]]
  [1m[35m (8.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: ee2680e1-faac-4f8b-a2f1-3881378180be) to Async(default) with arguments: #<GlobalID:0x00007f47f0115af0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be] Performing ActiveStorage::AnalyzeJob (Job ID: ee2680e1-faac-4f8b-a2f1-3881378180be) from Async(default) with arguments: #<GlobalID:0x000056227f125ca8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: UbBXQYwqfYTbWzBffg4Q9huo[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be]   [1m[35m (35.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [ee2680e1-faac-4f8b-a2f1-3881378180be] Performed ActiveStorage::AnalyzeJob (Job ID: ee2680e1-faac-4f8b-a2f1-3881378180be) from Async(default) in 43.37ms
[36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: UbBXQYwqfYTbWzBffg4Q9huo[0m
Started POST "/graphql" for ::1 at 2018-08-13 06:53:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 32ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-13 07:20:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 32ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 00:56:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:05:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:13:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:20:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:22:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    album_art\n    year\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:23:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 41ms (Views: 0.6ms | ActiveRecord: 7.5ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:24:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:25:10 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:26:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:26:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:28:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-14 01:28:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 02:38:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:04:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:05:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:05:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:06:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:06:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:07:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:09:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:12:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:17:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:19:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:19:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:20:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:25:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:27:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:35:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:43:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:47:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:47:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:48:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 03:53:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 04:06:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for ::1 at 2018-08-14 04:06:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-14 04:11:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-08-14 22:42:37 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 51ms (Views: 0.5ms | ActiveRecord: 3.5ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (5006.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "playsette_development"[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (373.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "playsette_development"[0m
  [1m[35m (236.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "playsette_testing"[0m
  [1m[35m (1581.4ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (681.8ms)[0m  [1m[35mCREATE DATABASE "playsette_testing" ENCODING = 'unicode'[0m
  [1m[35mSQL (25.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_attachments" CASCADE[0m
  [1m[35m (138.1ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (53.4ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (54.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_blobs" CASCADE[0m
  [1m[35m (88.5ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (54.0ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "tracks" CASCADE[0m
  [1m[35m (88.3ms)[0m  [1m[35mCREATE TABLE "tracks" ("id" bigserial primary key, "url" character varying, "title" character varying, "artist" character varying, "album" character varying, "service" character varying, "media_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "media_url" character varying, "user_id" bigint, "year" character varying, "artwork_url" character varying)[0m
  [1m[35m (54.0ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (88.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "password_digest" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (10.7ms)[0m  [1m[35mALTER TABLE "tracks" ADD CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (77.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (9.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20180812125814)[0m
  [1m[35m (10.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180809135505),
(20180806110551),
(20180617093213),
(20180806112719),
(20180812123042),
(20180617094622),
(20180711093417),
(20180728072251),
(20180806104409);

[0m
  [1m[35m (77.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-08-15 06:25:35.218409"], ["updated_at", "2018-08-15 06:25:35.218409"]]
  [1m[35m (4.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_attachments" CASCADE[0m
  [1m[35m (311.1ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (86.1ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (54.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_blobs" CASCADE[0m
  [1m[35m (99.7ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (54.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "tracks" CASCADE[0m
  [1m[35m (88.3ms)[0m  [1m[35mCREATE TABLE "tracks" ("id" bigserial primary key, "url" character varying, "title" character varying, "artist" character varying, "album" character varying, "service" character varying, "media_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "media_url" character varying, "user_id" bigint, "year" character varying, "artwork_url" character varying)[0m
  [1m[35m (43.0ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (88.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "password_digest" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (10.8ms)[0m  [1m[35mALTER TABLE "tracks" ADD CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (77.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (9.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20180812125814)[0m
  [1m[35m (10.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180809135505),
(20180806110551),
(20180617093213),
(20180806112719),
(20180812123042),
(20180617094622),
(20180711093417),
(20180728072251),
(20180806104409);

[0m
  [1m[35m (77.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-08-15 06:25:36.263898"], ["updated_at", "2018-08-15 06:25:36.263898"]]
  [1m[35m (52.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2018-08-15 06:25:36.319234"], ["key", "environment"]]
  [1m[35m (8.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-15 02:25:48 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 02:27:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 02:28:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"test@test.com", "name"=>"test", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
  [1m[36mUser Create (0.9ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "egpavelka"], ["email", "test@test.com"], ["name", "test"], ["password_digest", "$2a$10$uOpa5VlMWOOrDTTB31Jr0uNecC8uYVUsVGDZuSi3NhxONujp2JU9i"], ["created_at", "2018-08-15 06:28:31.480073"], ["updated_at", "2018-08-15 06:28:31.480073"]]
  [1m[35m (34.2ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 129ms (Views: 0.2ms | ActiveRecord: 47.2ms)


Started POST "/graphql" for ::1 at 2018-08-15 02:28:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 996ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 02:28:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534400920&t=eec273c8e052d7376fd33b992eb55e3df3bde28c&token=1534400920_ae586222401d509ebdd547ef85757bfc662e4999", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534400920&t=eec273c8e052d7376fd33b992eb55e3df3bde28c&token=1534400920_ae586222401d509ebdd547ef85757bfc662e4999", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.6ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-15 06:28:42.179584"], ["updated_at", "2018-08-15 06:28:42.179584"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534400920&t=eec273c8e052d7376fd33b992eb55e3df3bde28c&token=1534400920_ae586222401d509ebdd547ef85757bfc662e4999"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 181ms (ActiveRecord: 3.8ms)


  
NoMethodError (undefined method `[]' for #<Tempfile:/tmp/open-uri20180815-16637-byqv5c>):
  
app/models/track.rb:28:in `get_album_art'
app/graphql/resolvers/create_track.rb:19:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-15 03:26:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 760ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 03:26:28 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534404386&t=742b05cde9d9b59551633b49b67c8e2f073a2af3&token=1534404386_6c19b15477f8250f41c0cdc835873213a2f52209", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534404386&t=742b05cde9d9b59551633b49b67c8e2f073a2af3&token=1534404386_6c19b15477f8250f41c0cdc835873213a2f52209", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.6ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-15 07:26:28.594054"], ["updated_at", "2018-08-15 07:26:28.594054"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534404386&t=742b05cde9d9b59551633b49b67c8e2f073a2af3&token=1534404386_6c19b15477f8250f41c0cdc835873213a2f52209"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 201ms (ActiveRecord: 9.0ms)


  
TypeError (String can't be coerced into Integer):
  
app/models/track.rb:20:in `+'
app/models/track.rb:20:in `get_album_art'
app/graphql/resolvers/create_track.rb:19:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-15 03:27:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1407ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 03:27:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534404458&t=36408082274a441966bf5d34f8598b2ef5850740&token=1534404458_8e30d14f69196a7e4eec0f6daaabf9a3620372e9", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://sunarawmonofonus.bandcamp.com/track/bump-up", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534404458&t=36408082274a441966bf5d34f8598b2ef5850740&token=1534404458_8e30d14f69196a7e4eec0f6daaabf9a3620372e9", "mediaType"=>"audio", "title"=>"Bump Up", "artist"=>"Sun Araw", "album"=>"Houston Abstros", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a4018797088_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://sunarawmonofonus.bandcamp.com/track/bump-up"], ["title", "Bump Up"], ["artist", "Sun Araw"], ["album", "Houston Abstros"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-15 07:27:40.260739"], ["updated_at", "2018-08-15 07:27:40.260739"], ["media_url", "https://t4.bcbits.com/stream/36d285226e82ccb2c5fbd5bdff88041d/mp3-128/2754008327?p=0&ts=1534404458&t=36408082274a441966bf5d34f8598b2ef5850740&token=1534404458_8e30d14f69196a7e4eec0f6daaabf9a3620372e9"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (3.2ms) [0m[32mUploaded file to key: f2DtT9MzibMSiQmBWz51BzmT (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[36mActiveStorage::Blob Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "f2DtT9MzibMSiQmBWz51BzmT"], ["filename", "3_Bump Up_Sun Arawimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-15 07:27:40.449446"]]
  [1m[36mActiveStorage::Attachment Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 1], ["created_at", "2018-08-15 07:27:40.458297"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 07:27:40.459453"], ["id", 3]]
  [1m[35m (36.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 7c1a63ee-7e04-4abf-a3df-3be9123cf435) to Async(default) with arguments: #<GlobalID:0x000055dc0fa10748 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
Completed 200 OK in 307ms (Views: 0.2ms | ActiveRecord: 55.6ms)


Started POST "/graphql" for ::1 at 2018-08-15 03:27:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.2ms)


  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435] Performing ActiveStorage::AnalyzeJob (Job ID: 7c1a63ee-7e04-4abf-a3df-3be9123cf435) from Async(default) with arguments: #<GlobalID:0x000055dc0f683210 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: f2DtT9MzibMSiQmBWz51BzmT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435]   [1m[36mActiveStorage::Blob Update (0.5ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435]   [1m[35m (20.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c1a63ee-7e04-4abf-a3df-3be9123cf435] Performed ActiveStorage::AnalyzeJob (Job ID: 7c1a63ee-7e04-4abf-a3df-3be9123cf435) from Async(default) in 29.7ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" ORDER BY "active_storage_blobs"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-15 04:07:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://dopebody.bandcamp.com/track/old-grey", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://dopebody.bandcamp.com/track/old-grey", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 790ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 04:07:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://dopebody.bandcamp.com/track/old-grey", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/d798e73e934edab9ca19e62111509780/mp3-128/3500842924?p=0&ts=1534406860&t=da2ff5263ddf01fb28168ef31e4494d16211d131&token=1534406860_0b6fbdd38375a88e2b584139a91b0942449d00be", "mediaType"=>"audio", "title"=>"Old Grey", "artist"=>"Dope Body", "album"=>"Kunk", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a3996369203_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://dopebody.bandcamp.com/track/old-grey", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/d798e73e934edab9ca19e62111509780/mp3-128/3500842924?p=0&ts=1534406860&t=da2ff5263ddf01fb28168ef31e4494d16211d131&token=1534406860_0b6fbdd38375a88e2b584139a91b0942449d00be", "mediaType"=>"audio", "title"=>"Old Grey", "artist"=>"Dope Body", "album"=>"Kunk", "year"=>"2017", "artworkUrl"=>"https://f4.bcbits.com/img/a3996369203_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.7ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "artwork_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING "id"[0m  [["url", "https://dopebody.bandcamp.com/track/old-grey"], ["title", "Old Grey"], ["artist", "Dope Body"], ["album", "Kunk"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-08-15 08:07:42.011982"], ["updated_at", "2018-08-15 08:07:42.011982"], ["media_url", "https://t4.bcbits.com/stream/d798e73e934edab9ca19e62111509780/mp3-128/3500842924?p=0&ts=1534406860&t=da2ff5263ddf01fb28168ef31e4494d16211d131&token=1534406860_0b6fbdd38375a88e2b584139a91b0942449d00be"], ["user_id", 1], ["year", "2017"], ["artwork_url", "https://f4.bcbits.com/img/a3996369203_2.jpg"]]
  [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (3.2ms) [0m[32mUploaded file to key: Dis6qku8ox7KoS6AzFee43HT (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[36mActiveStorage::Blob Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "Dis6qku8ox7KoS6AzFee43HT"], ["filename", "4_Old Grey_Dope Bodyimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-15 08:07:42.217262"]]
  [1m[36mActiveStorage::Attachment Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 2], ["created_at", "2018-08-15 08:07:42.225995"]]
  [1m[36mTrack Update (0.6ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 08:07:42.227290"], ["id", 4]]
  [1m[35m (43.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 4918d822-84c2-4e7d-9369-79fdb4f600c7) to Async(default) with arguments: #<GlobalID:0x000055dc0ff12ac0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/2>>
Completed 200 OK in 308ms (Views: 0.3ms | ActiveRecord: 60.7ms)


  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7] Performing ActiveStorage::AnalyzeJob (Job ID: 4918d822-84c2-4e7d-9369-79fdb4f600c7) from Async(default) with arguments: #<GlobalID:0x000055dc0fd6efc0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/2>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7] [36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: Dis6qku8ox7KoS6AzFee43HT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7]   [1m[36mActiveStorage::Blob Update (0.6ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 2]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7]   [1m[35m (4.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [4918d822-84c2-4e7d-9369-79fdb4f600c7] Performed ActiveStorage::AnalyzeJob (Job ID: 4918d822-84c2-4e7d-9369-79fdb4f600c7) from Async(default) in 9.62ms
Started POST "/graphql" for ::1 at 2018-08-15 04:07:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-15 04:34:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "artworkUrl"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 959ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 04:34:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>"2018", "artworkUrl"=>nil}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/andersonpaak/bubblin-1", "service"=>"Soundcloud", "mediaUrl"=>"https://api.soundcloud.com/tracks/442210938/stream", "mediaType"=>"audio", "title"=>"Bubblin", "artist"=>"anderson .paak", "album"=>nil, "year"=>"2018", "artworkUrl"=>nil}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $artworkUrl: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, artwork_url: $artworkUrl) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.6ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING "id"[0m  [["url", "https://soundcloud.com/andersonpaak/bubblin-1"], ["title", "Bubblin"], ["artist", "anderson .paak"], ["service", "Soundcloud"], ["media_type", "audio"], ["created_at", "2018-08-15 08:34:10.020306"], ["updated_at", "2018-08-15 08:34:10.020306"], ["media_url", "https://api.soundcloud.com/tracks/442210938/stream"], ["user_id", 1], ["year", "2018"]]
  [1m[35m (42.3ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 85ms (Views: 0.2ms | ActiveRecord: 49.2ms)


Started POST "/graphql" for ::1 at 2018-08-15 04:34:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "https://i1.sndcdn.com/artworks-kxxCX3zAhe5m-0-t500x500.jpg"], ["updated_at", "2018-08-15 08:44:03.698099"], ["id", 5]]
  [1m[35m (31.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[32mUploaded file to key: Uj5MWEqUZsB2neVeFWReZRHW (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "Uj5MWEqUZsB2neVeFWReZRHW"], ["filename", "5_Bubblin_anderson .paak"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-15 08:44:26.790265"]]
  [1m[35m (52.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 3], ["created_at", "2018-08-15 08:44:26.852790"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 08:44:26.853930"], ["id", 5]]
  [1m[35m (11.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 2cc7b570-408c-4181-b9a9-b25d853d0c08) to Async(default) with arguments: #<GlobalID:0x00007f97ac0c9680 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/3>>
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08] Performing ActiveStorage::AnalyzeJob (Job ID: 2cc7b570-408c-4181-b9a9-b25d853d0c08) from Async(default) with arguments: #<GlobalID:0x0000561504976890 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/3>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: Uj5MWEqUZsB2neVeFWReZRHW[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 3]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08]   [1m[35m (41.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [2cc7b570-408c-4181-b9a9-b25d853d0c08] Performed ActiveStorage::AnalyzeJob (Job ID: 2cc7b570-408c-4181-b9a9-b25d853d0c08) from Async(default) in 49.49ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-15 04:45:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    artwork_url\n    year\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (2.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 52ms (Views: 0.5ms | ActiveRecord: 8.2ms)


Started POST "/graphql" for ::1 at 2018-08-15 04:48:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 100ms (ActiveRecord: 17.3ms)


  
ArgumentError (Missing host to link to! Please provide the :host parameter, set default_url_options[:host], or set :only_path to true):
  
app/models/track.rb:18:in `album_art_url'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-15 04:49:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.8ms)


  
ArgumentError (Missing host to link to! Please provide the :host parameter, set default_url_options[:host], or set :only_path to true):
  
app/models/track.rb:18:in `album_art_url'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-15 04:50:09 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 200 OK in 100ms (Views: 0.4ms | ActiveRecord: 13.8ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[32mUploaded file to key: UgomzAfLD1mW2Fx2nHjGQZXD (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.8ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "UgomzAfLD1mW2Fx2nHjGQZXD"], ["filename", "3_Bump Up_Sun Arawjpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-15 08:52:16.658225"]]
  [1m[35m (61.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.5ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 1]]
  [1m[36mActiveStorage::Attachment Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 4], ["created_at", "2018-08-15 08:52:16.724463"]]
  [1m[36mTrack Update (0.5ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 08:52:16.725683"], ["id", 3]]
  [1m[35m (10.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: e164342d-56db-4546-a2dc-c74ec1fedb7d) to Async(default) with arguments: #<GlobalID:0x00007f979c2d9a98 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/4>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 16d39554-41bc-4820-90be-896109ec4c39) to Async(default) with arguments: #<GlobalID:0x0000561505af5e18 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d] Performing ActiveStorage::AnalyzeJob (Job ID: e164342d-56db-4546-a2dc-c74ec1fedb7d) from Async(default) with arguments: #<GlobalID:0x0000561505939098 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/4>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: UgomzAfLD1mW2Fx2nHjGQZXD[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 4]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d]   [1m[35m (24.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [e164342d-56db-4546-a2dc-c74ec1fedb7d] Performed ActiveStorage::AnalyzeJob (Job ID: e164342d-56db-4546-a2dc-c74ec1fedb7d) from Async(default) in 33.41ms
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39] Performing ActiveStorage::PurgeJob (Job ID: 16d39554-41bc-4820-90be-896109ec4c39) from Async(default) with arguments: #<GlobalID:0x0000561504562d08 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39] [36m  Disk Storage (0.1ms) [0m[31mDeleted file from key: f2DtT9MzibMSiQmBWz51BzmT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/f2DtT9MzibMSiQmBWz51BzmT/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39]   [1m[35m (6.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39]   [1m[36mActiveStorage::Attachment Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 1], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [16d39554-41bc-4820-90be-896109ec4c39] Performed ActiveStorage::PurgeJob (Job ID: 16d39554-41bc-4820-90be-896109ec4c39) from Async(default) in 16.7ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (2.1ms) [0m[32mUploaded file to key: KqdLx8nH6s511JRkRcoaasRB (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.7ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "KqdLx8nH6s511JRkRcoaasRB"], ["filename", "4_Old Grey_Dope Bodyjpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-15 08:52:57.172941"]]
  [1m[35m (41.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.5ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 2]]
  [1m[36mActiveStorage::Attachment Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 5], ["created_at", "2018-08-15 08:52:57.218328"]]
  [1m[36mTrack Update (0.5ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 08:52:57.219570"], ["id", 4]]
  [1m[35m (8.4ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: a30c3078-6224-4b2a-88b6-a5b73cfa9996) to Async(default) with arguments: #<GlobalID:0x00005615061a6dc0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/5>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 0817bf55-cd1f-4d56-8c93-1e1765aaedb2) to Async(default) with arguments: #<GlobalID:0x00005615061a3c38 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/2>>
  [1m[36mActiveStorage::Blob Load (10.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996] Performing ActiveStorage::AnalyzeJob (Job ID: a30c3078-6224-4b2a-88b6-a5b73cfa9996) from Async(default) with arguments: #<GlobalID:0x000056150615e098 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/5>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996] [36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: KqdLx8nH6s511JRkRcoaasRB[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996]   [1m[36mActiveStorage::Blob Update (0.4ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 5]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996]   [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [a30c3078-6224-4b2a-88b6-a5b73cfa9996] Performed ActiveStorage::AnalyzeJob (Job ID: a30c3078-6224-4b2a-88b6-a5b73cfa9996) from Async(default) in 7.48ms
  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2] Performing ActiveStorage::PurgeJob (Job ID: 0817bf55-cd1f-4d56-8c93-1e1765aaedb2) from Async(default) with arguments: #<GlobalID:0x00005615061337f8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/2>>
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2] [36m  Disk Storage (0.5ms) [0m[31mDeleted file from key: Dis6qku8ox7KoS6AzFee43HT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/Dis6qku8ox7KoS6AzFee43HT/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 2]]
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2]   [1m[35m (8.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2]   [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 2], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [0817bf55-cd1f-4d56-8c93-1e1765aaedb2] Performed ActiveStorage::PurgeJob (Job ID: 0817bf55-cd1f-4d56-8c93-1e1765aaedb2) from Async(default) in 11.98ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[36m  Disk Storage (1.9ms) [0m[32mUploaded file to key: 7vGzd1Ncnt6jurdPFMxvrLxS (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "7vGzd1Ncnt6jurdPFMxvrLxS"], ["filename", "5_Bubblin_anderson .paakjpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-15 08:53:41.234317"]]
  [1m[35m (40.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 3]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 6], ["created_at", "2018-08-15 08:53:41.278283"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 08:53:41.279176"], ["id", 5]]
  [1m[35m (7.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 99cd48fd-8eda-4dab-b288-f97e569503d9) to Async(default) with arguments: #<GlobalID:0x00007f97ac0d8338 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/6>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf) to Async(default) with arguments: #<GlobalID:0x00007f97ac0d20a0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/3>>
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf] Performing ActiveStorage::PurgeJob (Job ID: 9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf) from Async(default) with arguments: #<GlobalID:0x00007f979c25a2c0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/3>>
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf] [36m  Disk Storage (0.2ms) [0m[31mDeleted file from key: Uj5MWEqUZsB2neVeFWReZRHW[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9] Performing ActiveStorage::AnalyzeJob (Job ID: 99cd48fd-8eda-4dab-b288-f97e569503d9) from Async(default) with arguments: #<GlobalID:0x00007f979c24eb78 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/6>>
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/Uj5MWEqUZsB2neVeFWReZRHW/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9] [36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: 7vGzd1Ncnt6jurdPFMxvrLxS[0m
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf]   [1m[36mActiveStorage::Blob Destroy (1.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 3]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9]   [1m[36mActiveStorage::Blob Update (0.4ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 6]]
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf]   [1m[35m (7.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf] Performed ActiveStorage::PurgeJob (Job ID: 9dddd0f2-88c8-4142-a1b4-d1ee7ba2dabf) from Async(default) in 13.01ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9]   [1m[35m (16.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [99cd48fd-8eda-4dab-b288-f97e569503d9] Performed ActiveStorage::AnalyzeJob (Job ID: 99cd48fd-8eda-4dab-b288-f97e569503d9) from Async(default) in 20.91ms
Started POST "/graphql" for ::1 at 2018-08-15 04:54:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 11.9ms)


Started GET "/" for ::1 at 2018-08-15 04:55:02 -0400
Started GET "/graphiql" for ::1 at 2018-08-15 04:55:02 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (246.4ms)
Completed 200 OK in 251ms (Views: 249.9ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-15 04:55:03 -0400
Started POST "/graphql" for ::1 at 2018-08-15 04:55:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 81ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-08-15 04:55:05 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-08-15 04:56:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art_url\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art_url\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for ::1 at 2018-08-15 04:56:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
Completed 200 OK in 15ms (Views: 0.4ms | ActiveRecord: 2.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[36m  Disk Storage (1.0ms) [0m[32mUploaded file to key: VvGhpPFZ1XzejuYsNDmu2GsV (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "VvGhpPFZ1XzejuYsNDmu2GsV"], ["filename", "5_Bubblin_anderson .paak.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-15 09:06:36.566021"]]
  [1m[35m (43.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 6]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 7], ["created_at", "2018-08-15 09:06:36.613600"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:06:36.614603"], ["id", 5]]
  [1m[35m (6.6ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: d0d18a45-746f-43be-857b-ce1c0c9c3a30) to Async(default) with arguments: #<GlobalID:0x00007f979c0ee7d8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/7>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 4c049bcc-c910-437a-aa6f-893feefcd11e) to Async(default) with arguments: #<GlobalID:0x00005615039524f0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/6>>
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30] Performing ActiveStorage::AnalyzeJob (Job ID: d0d18a45-746f-43be-857b-ce1c0c9c3a30) from Async(default) with arguments: #<GlobalID:0x00007f979c2fc3e0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/7>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: VvGhpPFZ1XzejuYsNDmu2GsV[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 7]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30]   [1m[35m (38.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [d0d18a45-746f-43be-857b-ce1c0c9c3a30] Performed ActiveStorage::AnalyzeJob (Job ID: d0d18a45-746f-43be-857b-ce1c0c9c3a30) from Async(default) in 46.17ms
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e] Performing ActiveStorage::PurgeJob (Job ID: 4c049bcc-c910-437a-aa6f-893feefcd11e) from Async(default) with arguments: #<GlobalID:0x00007f97ac112e20 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/6>>
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e] [36m  Disk Storage (0.1ms) [0m[31mDeleted file from key: 7vGzd1Ncnt6jurdPFMxvrLxS[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/7vGzd1Ncnt6jurdPFMxvrLxS/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 6]]
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e]   [1m[35m (9.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e]   [1m[36mActiveStorage::Attachment Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 6], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [4c049bcc-c910-437a-aa6f-893feefcd11e] Performed ActiveStorage::PurgeJob (Job ID: 4c049bcc-c910-437a-aa6f-893feefcd11e) from Async(default) in 17.65ms
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[36m  Disk Storage (1.7ms) [0m[32mUploaded file to key: ADS3ca1nRnzDtYWyGVJQSU4W (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "ADS3ca1nRnzDtYWyGVJQSU4W"], ["filename", "4_Old Grey_Dope Body.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-15 09:07:20.901424"]]
  [1m[35m (33.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 5]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 8], ["created_at", "2018-08-15 09:07:20.938570"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:07:20.939572"], ["id", 4]]
  [1m[35m (6.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 72f92f36-6ec5-4e37-8d65-37e879875a09) to Async(default) with arguments: #<GlobalID:0x0000561505dd0598 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/8>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 202beefd-aaec-4a0b-922b-b79d00c91ca5) to Async(default) with arguments: #<GlobalID:0x0000561505dc62c8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/5>>
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5] Performing ActiveStorage::PurgeJob (Job ID: 202beefd-aaec-4a0b-922b-b79d00c91ca5) from Async(default) with arguments: #<GlobalID:0x0000561505a0bbb0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/5>>
  [1m[36mActiveStorage::Blob Load (6.0ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09] Performing ActiveStorage::AnalyzeJob (Job ID: 72f92f36-6ec5-4e37-8d65-37e879875a09) from Async(default) with arguments: #<GlobalID:0x00007f979c01b2e8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/8>>
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5] [36m  Disk Storage (0.5ms) [0m[31mDeleted file from key: KqdLx8nH6s511JRkRcoaasRB[0m
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/KqdLx8nH6s511JRkRcoaasRB/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5]   [1m[36mActiveStorage::Blob Destroy (0.9ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 5]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: ADS3ca1nRnzDtYWyGVJQSU4W[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09]   [1m[36mActiveStorage::Blob Update (0.2ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 8]]
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5]   [1m[35m (41.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [202beefd-aaec-4a0b-922b-b79d00c91ca5] Performed ActiveStorage::PurgeJob (Job ID: 202beefd-aaec-4a0b-922b-b79d00c91ca5) from Async(default) in 51.55ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09]   [1m[35m (49.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [72f92f36-6ec5-4e37-8d65-37e879875a09] Performed ActiveStorage::AnalyzeJob (Job ID: 72f92f36-6ec5-4e37-8d65-37e879875a09) from Async(default) in 54.53ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[36m  Disk Storage (1.1ms) [0m[32mUploaded file to key: zLZr5xL4p77vLGaGnzmM8yHT (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "zLZr5xL4p77vLGaGnzmM8yHT"], ["filename", "3_Bump Up_Sun Araw.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-15 09:08:50.562414"]]
  [1m[35m (32.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 4]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 9], ["created_at", "2018-08-15 09:08:50.599586"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:08:50.600569"], ["id", 3]]
  [1m[35m (6.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb) to Async(default) with arguments: #<GlobalID:0x0000561504bde178 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/9>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: c53dfcd7-dfbe-40f3-bd34-e09b1e808d50) to Async(default) with arguments: #<GlobalID:0x0000561506123970 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/4>>
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb] Performing ActiveStorage::AnalyzeJob (Job ID: f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb) from Async(default) with arguments: #<GlobalID:0x00007f97a0007118 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/9>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: zLZr5xL4p77vLGaGnzmM8yHT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 9]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb]   [1m[35m (54.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb] Performed ActiveStorage::AnalyzeJob (Job ID: f6a2b7cc-dc63-4d2e-859a-796c2ddc20fb) from Async(default) in 62.17ms
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50] Performing ActiveStorage::PurgeJob (Job ID: c53dfcd7-dfbe-40f3-bd34-e09b1e808d50) from Async(default) with arguments: #<GlobalID:0x0000561505f4d8a8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/4>>
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50] [36m  Disk Storage (0.2ms) [0m[31mDeleted file from key: UgomzAfLD1mW2Fx2nHjGQZXD[0m
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/UgomzAfLD1mW2Fx2nHjGQZXD/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 4]]
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50]   [1m[35m (12.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50]   [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [c53dfcd7-dfbe-40f3-bd34-e09b1e808d50] Performed ActiveStorage::PurgeJob (Job ID: c53dfcd7-dfbe-40f3-bd34-e09b1e808d50) from Async(default) in 22.83ms
Started POST "/graphql" for ::1 at 2018-08-15 05:09:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Completed 200 OK in 96ms (Views: 0.5ms | ActiveRecord: 16.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-15 05:10:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 2.1ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[36m  Disk Storage (2.1ms) [0m[32mUploaded file to key: 8HTEKc1crn39pHKtDLxXgP3W (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "8HTEKc1crn39pHKtDLxXgP3W"], ["filename", "4_Old Grey_Dope Body.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-15 09:11:15.186135"]]
  [1m[35m (40.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 8]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 10], ["created_at", "2018-08-15 09:11:15.230365"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:11:15.231331"], ["id", 4]]
  [1m[35m (6.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 393e32a6-25ed-4048-8d94-419eeaa8439b) to Async(default) with arguments: #<GlobalID:0x00005615049e7d38 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/10>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 28e20ccf-10a6-4a3d-838a-551be09bd537) to Async(default) with arguments: #<GlobalID:0x00005615049e42f0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/8>>
  [1m[36mActiveStorage::Blob Load (1.0ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537] Performing ActiveStorage::PurgeJob (Job ID: 28e20ccf-10a6-4a3d-838a-551be09bd537) from Async(default) with arguments: #<GlobalID:0x0000561504ac2c08 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/8>>
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537] [36m  Disk Storage (0.4ms) [0m[31mDeleted file from key: ADS3ca1nRnzDtYWyGVJQSU4W[0m
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/ADS3ca1nRnzDtYWyGVJQSU4W/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537]   [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537]   [1m[36mActiveStorage::Blob Destroy (0.7ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 8]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b] Performing ActiveStorage::AnalyzeJob (Job ID: 393e32a6-25ed-4048-8d94-419eeaa8439b) from Async(default) with arguments: #<GlobalID:0x0000561504879e10 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/10>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: 8HTEKc1crn39pHKtDLxXgP3W[0m
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537]   [1m[35m (7.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537]   [1m[36mActiveStorage::Attachment Load (1.0ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 8], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [28e20ccf-10a6-4a3d-838a-551be09bd537] Performed ActiveStorage::PurgeJob (Job ID: 28e20ccf-10a6-4a3d-838a-551be09bd537) from Async(default) in 14.74ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b]   [1m[36mActiveStorage::Blob Update (0.4ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 10]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b]   [1m[35m (7.4ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [393e32a6-25ed-4048-8d94-419eeaa8439b] Performed ActiveStorage::AnalyzeJob (Job ID: 393e32a6-25ed-4048-8d94-419eeaa8439b) from Async(default) in 11.87ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[36m  Disk Storage (2.2ms) [0m[32mUploaded file to key: kvk35A8QWJLWfBCSHRMB9FFm (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "kvk35A8QWJLWfBCSHRMB9FFm"], ["filename", "5_Bubblin_anderson .paak.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-15 09:11:37.997087"]]
  [1m[35m (42.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 7]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 11], ["created_at", "2018-08-15 09:11:38.042818"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:11:38.043742"], ["id", 5]]
  [1m[35m (7.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: f3765e31-ddea-4c04-9958-bce6bcd4b9d9) to Async(default) with arguments: #<GlobalID:0x00005615044f6d60 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/11>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 001d8b99-f469-43dd-91bb-a6a96b2fc0c9) to Async(default) with arguments: #<GlobalID:0x00005615044f2738 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/7>>
  [1m[36mActiveStorage::Blob Load (1.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9] Performing ActiveStorage::AnalyzeJob (Job ID: f3765e31-ddea-4c04-9958-bce6bcd4b9d9) from Async(default) with arguments: #<GlobalID:0x0000561504225870 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/11>>
  [1m[36mActiveStorage::Blob Load (2.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9] Performing ActiveStorage::PurgeJob (Job ID: 001d8b99-f469-43dd-91bb-a6a96b2fc0c9) from Async(default) with arguments: #<GlobalID:0x00005615041ffa08 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/7>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9] [36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: kvk35A8QWJLWfBCSHRMB9FFm[0m
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9] [36m  Disk Storage (0.1ms) [0m[31mDeleted file from key: VvGhpPFZ1XzejuYsNDmu2GsV[0m
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/VvGhpPFZ1XzejuYsNDmu2GsV/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9]   [1m[36mActiveStorage::Blob Destroy (0.7ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 7]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 11]]
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9]   [1m[35m (6.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9]   [1m[36mActiveStorage::Attachment Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 7], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [001d8b99-f469-43dd-91bb-a6a96b2fc0c9] Performed ActiveStorage::PurgeJob (Job ID: 001d8b99-f469-43dd-91bb-a6a96b2fc0c9) from Async(default) in 11.89ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9]   [1m[35m (16.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [f3765e31-ddea-4c04-9958-bce6bcd4b9d9] Performed ActiveStorage::AnalyzeJob (Job ID: f3765e31-ddea-4c04-9958-bce6bcd4b9d9) from Async(default) in 21.81ms
Started POST "/graphql" for ::1 at 2018-08-15 05:11:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for ::1 at 2018-08-15 05:12:15 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
Completed 200 OK in 89ms (Views: 0.3ms | ActiveRecord: 12.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[36m  Disk Storage (2.1ms) [0m[32mUploaded file to key: UeBmP98er1bHohS5vYZLUpW8 (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "UeBmP98er1bHohS5vYZLUpW8"], ["filename", "5_Bubblin_anderson .paak.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-15 09:14:36.665080"]]
  [1m[35m (40.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 11]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 12], ["created_at", "2018-08-15 09:14:36.714387"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:14:36.715371"], ["id", 5]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: c3ab57cd-3c6e-463f-93c2-905b8f05409d) to Async(default) with arguments: #<GlobalID:0x0000561506416bc8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/12>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 84b2b0c0-dc16-40b4-8787-8bd55b6a0599) to Async(default) with arguments: #<GlobalID:0x000056150640fe18 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/11>>
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d] Performing ActiveStorage::AnalyzeJob (Job ID: c3ab57cd-3c6e-463f-93c2-905b8f05409d) from Async(default) with arguments: #<GlobalID:0x00007f97ac0d8108 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/12>>
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599] Performing ActiveStorage::PurgeJob (Job ID: 84b2b0c0-dc16-40b4-8787-8bd55b6a0599) from Async(default) with arguments: #<GlobalID:0x00007f97a0006920 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/11>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d] [36m  Disk Storage (1.2ms) [0m[34mDownloaded file from key: UeBmP98er1bHohS5vYZLUpW8[0m
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599] [36m  Disk Storage (0.6ms) [0m[31mDeleted file from key: kvk35A8QWJLWfBCSHRMB9FFm[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/kvk35A8QWJLWfBCSHRMB9FFm/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599]   [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d]   [1m[36mActiveStorage::Blob Update (0.5ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 12]]
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 11]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d]   [1m[35m (33.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [c3ab57cd-3c6e-463f-93c2-905b8f05409d] Performed ActiveStorage::AnalyzeJob (Job ID: c3ab57cd-3c6e-463f-93c2-905b8f05409d) from Async(default) in 41.0ms
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599]   [1m[35m (44.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 11], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [84b2b0c0-dc16-40b4-8787-8bd55b6a0599] Performed ActiveStorage::PurgeJob (Job ID: 84b2b0c0-dc16-40b4-8787-8bd55b6a0599) from Async(default) in 56.72ms
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
[36m  Disk Storage (1.5ms) [0m[32mUploaded file to key: QW1cRAqwp7b5S1qZweS86yMM (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "QW1cRAqwp7b5S1qZweS86yMM"], ["filename", "4_Old Grey_Dope Body.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-15 09:14:55.598132"]]
  [1m[35m (41.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 10]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 13], ["created_at", "2018-08-15 09:14:55.643762"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:14:55.644828"], ["id", 4]]
  [1m[35m (6.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: fb3ed667-a054-46cb-bd09-2a22ffaa1878) to Async(default) with arguments: #<GlobalID:0x0000561505c3ff58 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/13>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 4a48dc08-a57f-413d-8384-2fd47c75778d) to Async(default) with arguments: #<GlobalID:0x0000561505c3d398 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/10>>
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d] Performing ActiveStorage::PurgeJob (Job ID: 4a48dc08-a57f-413d-8384-2fd47c75778d) from Async(default) with arguments: #<GlobalID:0x00007f979c0beb78 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/10>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878] Performing ActiveStorage::AnalyzeJob (Job ID: fb3ed667-a054-46cb-bd09-2a22ffaa1878) from Async(default) with arguments: #<GlobalID:0x00007f979c0bc238 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/13>>
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d] [36m  Disk Storage (0.9ms) [0m[31mDeleted file from key: 8HTEKc1crn39pHKtDLxXgP3W[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/8HTEKc1crn39pHKtDLxXgP3W/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878] [36m  Disk Storage (0.9ms) [0m[34mDownloaded file from key: QW1cRAqwp7b5S1qZweS86yMM[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d]   [1m[36mActiveStorage::Blob Destroy (1.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 10]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878]   [1m[36mActiveStorage::Blob Update (0.2ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 13]]
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d]   [1m[35m (9.4ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 10], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [4a48dc08-a57f-413d-8384-2fd47c75778d] Performed ActiveStorage::PurgeJob (Job ID: 4a48dc08-a57f-413d-8384-2fd47c75778d) from Async(default) in 15.29ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878]   [1m[35m (19.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fb3ed667-a054-46cb-bd09-2a22ffaa1878] Performed ActiveStorage::AnalyzeJob (Job ID: fb3ed667-a054-46cb-bd09-2a22ffaa1878) from Async(default) in 24.39ms
Started POST "/graphql" for ::1 at 2018-08-15 05:16:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 30ms (Views: 0.4ms | ActiveRecord: 4.1ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[36m  Disk Storage (2.0ms) [0m[32mUploaded file to key: eEYryMW6Vv4gPdyUvr9Fwr16 (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "eEYryMW6Vv4gPdyUvr9Fwr16"], ["filename", "3_Bump Up_Sun Araw.jpg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-15 09:16:48.654688"]]
  [1m[35m (36.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 9]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 14], ["created_at", "2018-08-15 09:16:48.694672"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-15 09:16:48.695597"], ["id", 3]]
  [1m[35m (7.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 51835f00-0b94-424d-98ee-c9f04e34ae30) to Async(default) with arguments: #<GlobalID:0x00007f979c02e640 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/14>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 0f4222b6-eb84-4c41-8854-caa90b2ad949) to Async(default) with arguments: #<GlobalID:0x0000561505a231c0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/9>>
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30] Performing ActiveStorage::AnalyzeJob (Job ID: 51835f00-0b94-424d-98ee-c9f04e34ae30) from Async(default) with arguments: #<GlobalID:0x00007f979c019560 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/14>>
  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949] Performing ActiveStorage::PurgeJob (Job ID: 0f4222b6-eb84-4c41-8854-caa90b2ad949) from Async(default) with arguments: #<GlobalID:0x00007f979c015398 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/9>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30] [36m  Disk Storage (1.0ms) [0m[34mDownloaded file from key: eEYryMW6Vv4gPdyUvr9Fwr16[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30] Skipping image analysis because the mini_magick gem isn't installed
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949] [36m  Disk Storage (1.5ms) [0m[31mDeleted file from key: zLZr5xL4p77vLGaGnzmM8yHT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949] [36m  Disk Storage (0.9ms) [0m[31mDeleted files by key prefix: variants/zLZr5xL4p77vLGaGnzmM8yHT/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"analyzed\":true}"], ["id", 14]]
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949]   [1m[36mActiveStorage::Blob Destroy (0.4ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 9]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30]   [1m[35m (7.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [51835f00-0b94-424d-98ee-c9f04e34ae30] Performed ActiveStorage::AnalyzeJob (Job ID: 51835f00-0b94-424d-98ee-c9f04e34ae30) from Async(default) in 13.22ms
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949]   [1m[35m (18.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 9], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [0f4222b6-eb84-4c41-8854-caa90b2ad949] Performed ActiveStorage::PurgeJob (Job ID: 0f4222b6-eb84-4c41-8854-caa90b2ad949) from Async(default) in 24.45ms
Started POST "/graphql" for ::1 at 2018-08-15 05:17:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://test.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bd2df3cff56ea4c2149609cf06dd77a5d7aef63c/3_Bump%20Up_Sun%20Araw.jpg"], ["updated_at", "2018-08-15 09:17:53.985547"], ["id", 3]]
  [1m[35m (31.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://test.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ea9ddee3776d13f94be58e39cf28e15e23d9db95/4_Old%20Grey_Dope%20Body.jpg"], ["updated_at", "2018-08-15 09:18:07.422061"], ["id", 4]]
  [1m[35m (40.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://test.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--33469985b797a94ab416806ee9931c1bd4a4c7b2/5_Bubblin_anderson%20.paak.jpg"], ["updated_at", "2018-08-15 09:18:17.870823"], ["id", 5]]
  [1m[35m (26.0ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-08-15 05:18:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://localhost:5000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bd2df3cff56ea4c2149609cf06dd77a5d7aef63c/3_Bump%20Up_Sun%20Araw.jpg"], ["updated_at", "2018-08-15 09:19:00.411367"], ["id", 3]]
  [1m[35m (43.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://localhost:5000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ea9ddee3776d13f94be58e39cf28e15e23d9db95/4_Old%20Grey_Dope%20Body.jpg"], ["updated_at", "2018-08-15 09:19:05.402004"], ["id", 4]]
  [1m[35m (42.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://localhost:5000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--33469985b797a94ab416806ee9931c1bd4a4c7b2/5_Bubblin_anderson%20.paak.jpg"], ["updated_at", "2018-08-15 09:19:09.306174"], ["id", 5]]
  [1m[35m (15.9ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-08-15 05:19:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--33469985b797a94ab416806ee9931c1bd4a4c7b2/5_Bubblin_anderson%20.paak.jpg"], ["updated_at", "2018-08-15 09:19:40.017600"], ["id", 5]]
  [1m[35m (17.4ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-08-15 05:19:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-15 05:19:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.2ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "http://localhost:5000/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--33469985b797a94ab416806ee9931c1bd4a4c7b2/5_Bubblin_anderson%20.paak.jpg"], ["updated_at", "2018-08-15 09:20:05.400315"], ["id", 5]]
  [1m[35m (47.7ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for ::1 at 2018-08-15 05:20:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (39.4ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (0.8ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (0.8ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (7.7ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-16 00:22:07 -0400
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 44ms (Views: 0.5ms | ActiveRecord: 5.6ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:23:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.6ms)


Started GET "/graphiql" for ::1 at 2018-08-16 00:23:48 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (209.4ms)
Completed 200 OK in 214ms (Views: 212.9ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-08-16 00:23:49 -0400
Started POST "/graphql" for ::1 at 2018-08-16 00:23:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 78ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:23:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art_url\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art_url\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.3ms)


  
NoMethodError (undefined method `album_art_url' for #<Track:0x000055a270875ad8>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-08-16 00:25:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 42ms (Views: 0.5ms | ActiveRecord: 5.5ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:26:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:26:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for ::1 at 2018-08-16 00:26:36 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (19.1ms)
Completed 200 OK in 22ms (Views: 21.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:26:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 59ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:26:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:26:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.3ms)


  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "https://f4.bcbits.com/img/a4018797088_2.jpg"], ["updated_at", "2018-08-16 04:31:02.099490"], ["id", 3]]
  [1m[35m (36.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "https://f4.bcbits.com/img/a3996369203_2.jpg"], ["updated_at", "2018-08-16 04:31:10.124863"], ["id", 4]]
  [1m[35m (61.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "artwork_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["artwork_url", "https://i1.sndcdn.com/artworks-kxxCX3zAhe5m-0-t500x500.jpg"], ["updated_at", "2018-08-16 04:31:16.891920"], ["id", 5]]
  [1m[35m (33.7ms)[0m  [1m[35mCOMMIT[0m
Started GET "/graphiql" for ::1 at 2018-08-16 00:31:24 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (3.7ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:31:24 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 90ms (Views: 13.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 00:31:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art\n    artwork_url\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"# mutation {\n#   login(username:{\n#     username:\"egpavelka\",\n#     password:\"test\"\n#   }) {\n#     token\n#     user {\n#       id\n#     }\n#   }\n# }\n{\n  tracks {\n    album_art\n    artwork_url\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" ORDER BY "active_storage_blobs"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--33469985b797a94ab416806ee9931c1bd4a4c7b2/5_Bubblin_anderson%20.paak.jpg" for ::1 at 2018-08-16 00:58:48 -0400
Processing by ActiveStorage::BlobsController#show as JPEG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--33469985b797a94ab416806ee9931c1bd4a4c7b2", "filename"=>"5_Bubblin_anderson .paak"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (4.2ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFWWlVKdFVEazRaWEl4WWtodmFGTTFkbGxhVEZWd1Z6Z0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDU6MDM6NDguMzY3WiIsInB1ciI6ImJsb2Jfa2V5In19--d74333bb99952cfb4f0bf694b0e1e038d1b4c6f7/5_Bubblin_anderson%20.paak.jpg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.jpg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.jpg)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFWWlVKdFVEazRaWEl4WWtodmFGTTFkbGxhVEZWd1Z6Z0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDU6MDM6NDguMzY3WiIsInB1ciI6ImJsb2Jfa2V5In19--d74333bb99952cfb4f0bf694b0e1e038d1b4c6f7/5_Bubblin_anderson%20.paak.jpg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.jpg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.jpg
Completed 302 Found in 32ms (ActiveRecord: 6.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFWWlVKdFVEazRaWEl4WWtodmFGTTFkbGxhVEZWd1Z6Z0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDU6MDM6NDguMzY3WiIsInB1ciI6ImJsb2Jfa2V5In19--d74333bb99952cfb4f0bf694b0e1e038d1b4c6f7/5_Bubblin_anderson%20.paak.jpg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.jpg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.jpg" for ::1 at 2018-08-16 00:58:48 -0400
Processing by ActiveStorage::DiskController#show as JPEG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.jpg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.jpg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFWWlVKdFVEazRaWEl4WWtodmFGTTFkbGxhVEZWd1Z6Z0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDU6MDM6NDguMzY3WiIsInB1ciI6ImJsb2Jfa2V5In19--d74333bb99952cfb4f0bf694b0e1e038d1b4c6f7", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: UeBmP98er1bHohS5vYZLUpW8[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (7.2ms) [0m[34mGenerated URL for file at key: UeBmP98er1bHohS5vYZLUpW8 ()[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" ORDER BY "active_storage_blobs"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bd2df3cff56ea4c2149609cf06dd77a5d7aef63c/3_Bump%20Up_Sun%20Araw.jpg" for ::1 at 2018-08-16 02:43:58 -0400
Processing by ActiveStorage::BlobsController#show as JPEG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bd2df3cff56ea4c2149609cf06dd77a5d7aef63c", "filename"=>"3_Bump Up_Sun Araw"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: eEYryMW6Vv4gPdyUvr9Fwr16 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFsUlZseWVVMVhObFoyTkdkUVpIbFZkbkk1Um5keU1UWUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDY6NDg6NTguNzQxWiIsInB1ciI6ImJsb2Jfa2V5In19--2bcc8a9d5224ca018ed9b04c03ec25a689c1f4f6/3_Bump%20Up_Sun%20Araw.jpg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.jpg%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.jpg)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFsUlZseWVVMVhObFoyTkdkUVpIbFZkbkk1Um5keU1UWUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDY6NDg6NTguNzQxWiIsInB1ciI6ImJsb2Jfa2V5In19--2bcc8a9d5224ca018ed9b04c03ec25a689c1f4f6/3_Bump%20Up_Sun%20Araw.jpg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.jpg%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.jpg
Completed 302 Found in 21ms (ActiveRecord: 6.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFsUlZseWVVMVhObFoyTkdkUVpIbFZkbkk1Um5keU1UWUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDY6NDg6NTguNzQxWiIsInB1ciI6ImJsb2Jfa2V5In19--2bcc8a9d5224ca018ed9b04c03ec25a689c1f4f6/3_Bump%20Up_Sun%20Araw.jpg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.jpg%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.jpg" for ::1 at 2018-08-16 02:43:58 -0400
Processing by ActiveStorage::DiskController#show as JPEG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Bump Up_Sun Araw.jpg\"; filename*=UTF-8''3_Bump%20Up_Sun%20Araw.jpg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFsUlZseWVVMVhObFoyTkdkUVpIbFZkbkk1Um5keU1UWUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDY6NDg6NTguNzQxWiIsInB1ciI6ImJsb2Jfa2V5In19--2bcc8a9d5224ca018ed9b04c03ec25a689c1f4f6", "filename"=>"3_Bump Up_Sun Araw"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: eEYryMW6Vv4gPdyUvr9Fwr16[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-08-16 02:49:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 68ms (Views: 0.5ms | ActiveRecord: 7.9ms)


Started POST "/graphql" for ::1 at 2018-08-16 02:50:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-08-16 02:50:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 11ms (Views: 1.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-08-16 02:50:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


  [1m[35m (38.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddAlbumArtUrlToTrack (20180816065719)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "artwork_url" TO "album_art_origin"[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" ADD "album_art_url" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180816065719"]]
  [1m[35m (12.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-08-16 03:07:23 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 22ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 03:14:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    artwork_url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 03:14:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 46ms (Views: 0.5ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for ::1 at 2018-08-16 03:15:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.4ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[36m  Disk Storage (1.2ms) [0m[32mUploaded file to key: kjBAv61PumgFwVacyW5tZ3Mb (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "kjBAv61PumgFwVacyW5tZ3Mb"], ["filename", "3_Bump Up_Sun Arawimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-16 07:20:20.157754"]]
  [1m[35m (34.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 14]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 15], ["created_at", "2018-08-16 07:20:20.196881"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:20:20.197871"], ["id", 3]]
  [1m[35m (6.4ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 11b23820-5a74-4c83-8836-3c98f30e7a7d) to Async(default) with arguments: #<GlobalID:0x0000560712777828 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/15>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: b4f861b4-d79d-46b4-9e26-1245dc2a4fd0) to Async(default) with arguments: #<GlobalID:0x0000560711b6a8c8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/14>>
  [1m[36mActiveStorage::Blob Load (3.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [11b23820-5a74-4c83-8836-3c98f30e7a7d] Performing ActiveStorage::AnalyzeJob (Job ID: 11b23820-5a74-4c83-8836-3c98f30e7a7d) from Async(default) with arguments: #<GlobalID:0x0000560710bde288 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/15>>
  [1m[36mTrack Load (5.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [11b23820-5a74-4c83-8836-3c98f30e7a7d] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: kjBAv61PumgFwVacyW5tZ3Mb[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [11b23820-5a74-4c83-8836-3c98f30e7a7d]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [11b23820-5a74-4c83-8836-3c98f30e7a7d]   [1m[36mActiveStorage::Blob Update (0.7ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 15]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [11b23820-5a74-4c83-8836-3c98f30e7a7d]   [1m[35m (19.6ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [11b23820-5a74-4c83-8836-3c98f30e7a7d] Performed ActiveStorage::AnalyzeJob (Job ID: 11b23820-5a74-4c83-8836-3c98f30e7a7d) from Async(default) in 64.5ms
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0] Performing ActiveStorage::PurgeJob (Job ID: b4f861b4-d79d-46b4-9e26-1245dc2a4fd0) from Async(default) with arguments: #<GlobalID:0x00007fb3cc007878 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/14>>
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0] [36m  Disk Storage (0.6ms) [0m[31mDeleted file from key: eEYryMW6Vv4gPdyUvr9Fwr16[0m
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/eEYryMW6Vv4gPdyUvr9Fwr16/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0]   [1m[35m (1.3ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0]   [1m[36mActiveStorage::Blob Destroy (0.8ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 14]]
[36m  Disk Storage (4.1ms) [0m[32mUploaded file to key: UUEp9Kqcu84JE6cVMoeMZcdo (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "UUEp9Kqcu84JE6cVMoeMZcdo"], ["filename", "3_Bump Up_Sun Arawimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-16 07:20:40.414684"]]
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0]   [1m[35m (15.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0]   [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 14], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [b4f861b4-d79d-46b4-9e26-1245dc2a4fd0] Performed ActiveStorage::PurgeJob (Job ID: b4f861b4-d79d-46b4-9e26-1245dc2a4fd0) from Async(default) in 25.15ms
  [1m[35m (23.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 15]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 16], ["created_at", "2018-08-16 07:20:40.442536"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:20:40.443511"], ["id", 3]]
  [1m[35m (6.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 9382cc33-c8f1-449b-b2ae-19e757e796f2) to Async(default) with arguments: #<GlobalID:0x00005607128e1ee8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/16>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: dd4ac4b6-fed4-4e51-adc6-f79c57500744) to Async(default) with arguments: #<GlobalID:0x00005607128ded10 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/15>>
  [1m[36mActiveStorage::Blob Load (6.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [9382cc33-c8f1-449b-b2ae-19e757e796f2] Performing ActiveStorage::AnalyzeJob (Job ID: 9382cc33-c8f1-449b-b2ae-19e757e796f2) from Async(default) with arguments: #<GlobalID:0x00005607128c0f68 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/16>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [9382cc33-c8f1-449b-b2ae-19e757e796f2] [36m  Disk Storage (0.8ms) [0m[34mDownloaded file from key: UUEp9Kqcu84JE6cVMoeMZcdo[0m
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744] Performing ActiveStorage::PurgeJob (Job ID: dd4ac4b6-fed4-4e51-adc6-f79c57500744) from Async(default) with arguments: #<GlobalID:0x00007fb3f400e4e8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/15>>
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744] [36m  Disk Storage (0.5ms) [0m[31mDeleted file from key: kjBAv61PumgFwVacyW5tZ3Mb[0m
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744] [36m  Disk Storage (0.2ms) [0m[31mDeleted files by key prefix: variants/kjBAv61PumgFwVacyW5tZ3Mb/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744]   [1m[36mActiveStorage::Blob Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 15]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [9382cc33-c8f1-449b-b2ae-19e757e796f2]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [9382cc33-c8f1-449b-b2ae-19e757e796f2]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 16]]
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744]   [1m[35m (9.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744]   [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 15], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [dd4ac4b6-fed4-4e51-adc6-f79c57500744] Performed ActiveStorage::PurgeJob (Job ID: dd4ac4b6-fed4-4e51-adc6-f79c57500744) from Async(default) in 15.6ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [9382cc33-c8f1-449b-b2ae-19e757e796f2]   [1m[35m (13.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [9382cc33-c8f1-449b-b2ae-19e757e796f2] Performed ActiveStorage::AnalyzeJob (Job ID: 9382cc33-c8f1-449b-b2ae-19e757e796f2) from Async(default) in 34.96ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[36m  Disk Storage (1.6ms) [0m[32mUploaded file to key: sDff29iVbd5omQJoZce79TfZ (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "sDff29iVbd5omQJoZce79TfZ"], ["filename", "4_Old Grey_Dope Bodyimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-16 07:21:05.241951"]]
  [1m[35m (42.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 13]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 17], ["created_at", "2018-08-16 07:21:05.287847"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:21:05.288774"], ["id", 4]]
  [1m[35m (7.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: b619d8b2-6327-4ac1-baac-3210476832ef) to Async(default) with arguments: #<GlobalID:0x000056071243b510 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/17>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 83805705-2d8f-4969-82d4-76f52740d6d9) to Async(default) with arguments: #<GlobalID:0x0000560712438db0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/13>>
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9] Performing ActiveStorage::PurgeJob (Job ID: 83805705-2d8f-4969-82d4-76f52740d6d9) from Async(default) with arguments: #<GlobalID:0x0000560712426958 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/13>>
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [b619d8b2-6327-4ac1-baac-3210476832ef] Performing ActiveStorage::AnalyzeJob (Job ID: b619d8b2-6327-4ac1-baac-3210476832ef) from Async(default) with arguments: #<GlobalID:0x000056071241d1a0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/17>>
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9] [36m  Disk Storage (0.4ms) [0m[31mDeleted file from key: QW1cRAqwp7b5S1qZweS86yMM[0m
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/QW1cRAqwp7b5S1qZweS86yMM/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [b619d8b2-6327-4ac1-baac-3210476832ef] [36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: sDff29iVbd5omQJoZce79TfZ[0m
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9]   [1m[36mActiveStorage::Blob Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 13]]
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9]   [1m[35m (12.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 13], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [83805705-2d8f-4969-82d4-76f52740d6d9] Performed ActiveStorage::PurgeJob (Job ID: 83805705-2d8f-4969-82d4-76f52740d6d9) from Async(default) in 17.01ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [b619d8b2-6327-4ac1-baac-3210476832ef]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [b619d8b2-6327-4ac1-baac-3210476832ef]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 17]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [b619d8b2-6327-4ac1-baac-3210476832ef]   [1m[35m (6.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [b619d8b2-6327-4ac1-baac-3210476832ef] Performed ActiveStorage::AnalyzeJob (Job ID: b619d8b2-6327-4ac1-baac-3210476832ef) from Async(default) in 25.3ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[36m  Disk Storage (1.8ms) [0m[32mUploaded file to key: rrDfAozFnD4No5z2jhMkcRQR (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "rrDfAozFnD4No5z2jhMkcRQR"], ["filename", "5_Bubblin_anderson .paakimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-16 07:21:43.177983"]]
  [1m[35m (19.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 12]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 18], ["created_at", "2018-08-16 07:21:43.201116"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:21:43.202044"], ["id", 5]]
  [1m[35m (7.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 6af3d8e3-d082-46a0-acdd-c1a930e5785d) to Async(default) with arguments: #<GlobalID:0x00007fb3e01a0590 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/18>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: ac34b102-8ee8-4973-8a8c-f98e2d075a75) to Async(default) with arguments: #<GlobalID:0x00007fb3e019a500 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/12>>
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75] Performing ActiveStorage::PurgeJob (Job ID: ac34b102-8ee8-4973-8a8c-f98e2d075a75) from Async(default) with arguments: #<GlobalID:0x00005607120d35d0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/12>>
  [1m[36mActiveStorage::Blob Load (1.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [6af3d8e3-d082-46a0-acdd-c1a930e5785d] Performing ActiveStorage::AnalyzeJob (Job ID: 6af3d8e3-d082-46a0-acdd-c1a930e5785d) from Async(default) with arguments: #<GlobalID:0x00005607120d0380 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/18>>
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75] [36m  Disk Storage (0.6ms) [0m[31mDeleted file from key: UeBmP98er1bHohS5vYZLUpW8[0m
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/UeBmP98er1bHohS5vYZLUpW8/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [6af3d8e3-d082-46a0-acdd-c1a930e5785d] [36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: rrDfAozFnD4No5z2jhMkcRQR[0m
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75]   [1m[35m (2.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75]   [1m[36mActiveStorage::Blob Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 12]]
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75]   [1m[35m (9.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 12], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [ac34b102-8ee8-4973-8a8c-f98e2d075a75] Performed ActiveStorage::PurgeJob (Job ID: ac34b102-8ee8-4973-8a8c-f98e2d075a75) from Async(default) in 15.95ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [6af3d8e3-d082-46a0-acdd-c1a930e5785d]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [6af3d8e3-d082-46a0-acdd-c1a930e5785d]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":500,\"height\":500,\"analyzed\":true}"], ["id", 18]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [6af3d8e3-d082-46a0-acdd-c1a930e5785d]   [1m[35m (6.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [6af3d8e3-d082-46a0-acdd-c1a930e5785d] Performed ActiveStorage::AnalyzeJob (Job ID: 6af3d8e3-d082-46a0-acdd-c1a930e5785d) from Async(default) in 35.9ms
Started POST "/graphql" for ::1 at 2018-08-16 03:22:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 50ms (Views: 0.5ms | ActiveRecord: 6.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[36m  Disk Storage (1.7ms) [0m[32mUploaded file to key: TiBjTBngJ547wpAvc4QCySLu (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "TiBjTBngJ547wpAvc4QCySLu"], ["filename", "5_Bubblin_anderson .paakimage/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-16 07:27:46.525176"]]
  [1m[35m (14.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.4ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 18]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 19], ["created_at", "2018-08-16 07:27:46.543899"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:27:46.545022"], ["id", 5]]
  [1m[35m (6.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: fae3ea2b-dcfc-4da0-b748-fdf66ece9185) to Async(default) with arguments: #<GlobalID:0x00007fb3e0149588 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/19>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 071f40d7-5d72-4f95-a3a8-f37a4651dc81) to Async(default) with arguments: #<GlobalID:0x00007fb3e013f3d0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/18>>
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81] Performing ActiveStorage::PurgeJob (Job ID: 071f40d7-5d72-4f95-a3a8-f37a4651dc81) from Async(default) with arguments: #<GlobalID:0x0000560711b57db8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/18>>
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81] [36m  Disk Storage (0.5ms) [0m[31mDeleted file from key: rrDfAozFnD4No5z2jhMkcRQR[0m
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/rrDfAozFnD4No5z2jhMkcRQR/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fae3ea2b-dcfc-4da0-b748-fdf66ece9185] Performing ActiveStorage::AnalyzeJob (Job ID: fae3ea2b-dcfc-4da0-b748-fdf66ece9185) from Async(default) with arguments: #<GlobalID:0x0000560710d573a8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/19>>
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81]   [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81]   [1m[36mActiveStorage::Blob Destroy (1.0ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 18]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [fae3ea2b-dcfc-4da0-b748-fdf66ece9185] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: TiBjTBngJ547wpAvc4QCySLu[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fae3ea2b-dcfc-4da0-b748-fdf66ece9185]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fae3ea2b-dcfc-4da0-b748-fdf66ece9185]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":500,\"height\":500,\"analyzed\":true}"], ["id", 19]]
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81]   [1m[35m (18.6ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 18], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [071f40d7-5d72-4f95-a3a8-f37a4651dc81] Performed ActiveStorage::PurgeJob (Job ID: 071f40d7-5d72-4f95-a3a8-f37a4651dc81) from Async(default) in 27.9ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [fae3ea2b-dcfc-4da0-b748-fdf66ece9185]   [1m[35m (11.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [fae3ea2b-dcfc-4da0-b748-fdf66ece9185] Performed ActiveStorage::AnalyzeJob (Job ID: fae3ea2b-dcfc-4da0-b748-fdf66ece9185) from Async(default) in 31.78ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[36m  Disk Storage (2.3ms) [0m[32mUploaded file to key: 7NuhgHyZoc8uJ65CPSBNRwTT (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "7NuhgHyZoc8uJ65CPSBNRwTT"], ["filename", "5_Bubblin_anderson .paak.image/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-16 07:29:20.577592"]]
  [1m[35m (7.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 19]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 20], ["created_at", "2018-08-16 07:29:20.593597"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:29:20.594587"], ["id", 5]]
  [1m[35m (6.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 06ed2361-9716-4cc6-93cb-cfbe17b391e1) to Async(default) with arguments: #<GlobalID:0x0000560712a6bc78 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/20>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 726f4dc2-1d14-4535-a4ff-133fe1e237ae) to Async(default) with arguments: #<GlobalID:0x0000560712a68de8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/19>>
Started POST "/graphql" for ::1 at 2018-08-16 03:30:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 52ms (Views: 0.4ms | ActiveRecord: 7.1ms)


Started POST "/graphql" for ::1 at 2018-08-16 03:30:51 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 48ms (Views: 0.5ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for ::1 at 2018-08-16 03:31:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (2.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 2.0ms)


  [1m[35m (106402.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 19], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae] Performing ActiveStorage::PurgeJob (Job ID: 726f4dc2-1d14-4535-a4ff-133fe1e237ae) from Async(default) with arguments: #<GlobalID:0x00007fb3e400c658 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/19>>
  [1m[36mActiveStorage::Blob Load (6.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae] [36m  Disk Storage (0.2ms) [0m[31mDeleted file from key: TiBjTBngJ547wpAvc4QCySLu[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [06ed2361-9716-4cc6-93cb-cfbe17b391e1] Performing ActiveStorage::AnalyzeJob (Job ID: 06ed2361-9716-4cc6-93cb-cfbe17b391e1) from Async(default) with arguments: #<GlobalID:0x00007fb3e02c3fa8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/20>>
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/TiBjTBngJ547wpAvc4QCySLu/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae]   [1m[35m (1.4ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [06ed2361-9716-4cc6-93cb-cfbe17b391e1] [36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 7NuhgHyZoc8uJ65CPSBNRwTT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae]   [1m[36mActiveStorage::Blob Destroy (0.9ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 19]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [06ed2361-9716-4cc6-93cb-cfbe17b391e1]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [06ed2361-9716-4cc6-93cb-cfbe17b391e1]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":500,\"height\":500,\"analyzed\":true}"], ["id", 20]]
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae]   [1m[35m (71.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae]   [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 19], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [726f4dc2-1d14-4535-a4ff-133fe1e237ae] Performed ActiveStorage::PurgeJob (Job ID: 726f4dc2-1d14-4535-a4ff-133fe1e237ae) from Async(default) in 82.81ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [06ed2361-9716-4cc6-93cb-cfbe17b391e1]   [1m[35m (64.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [06ed2361-9716-4cc6-93cb-cfbe17b391e1] Performed ActiveStorage::AnalyzeJob (Job ID: 06ed2361-9716-4cc6-93cb-cfbe17b391e1) from Async(default) in 85.49ms
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 5], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[36m  Disk Storage (1.8ms) [0m[32mUploaded file to key: ax7r71La5vsmwJCiAunikbQS (checksum: pNh4WKA7XrtfKhGLVIXcsQ==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "ax7r71La5vsmwJCiAunikbQS"], ["filename", "5_Bubblin_anderson .paak.image/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 56470], ["checksum", "pNh4WKA7XrtfKhGLVIXcsQ=="], ["created_at", "2018-08-16 07:31:41.774615"]]
  [1m[35m (35.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 20]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 5], ["blob_id", 21], ["created_at", "2018-08-16 07:31:41.813021"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:31:41.813923"], ["id", 5]]
  [1m[35m (88.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: ce18612a-e274-4e69-996d-04bee268fc06) to Async(default) with arguments: #<GlobalID:0x00005607120d3b98 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/21>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: d67ea4e2-bf95-4fd7-b1a2-1503984e7040) to Async(default) with arguments: #<GlobalID:0x00005607120d1578 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/20>>
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Load (2.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mTrack Update (1.7ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-08-16 07:31:41.906132"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04/5_Bubblin_anderson%20.paak.image-jpeg"], ["id", 5]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [ce18612a-e274-4e69-996d-04bee268fc06] Performing ActiveStorage::AnalyzeJob (Job ID: ce18612a-e274-4e69-996d-04bee268fc06) from Async(default) with arguments: #<GlobalID:0x00005607120bfd78 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/21>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [ce18612a-e274-4e69-996d-04bee268fc06] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040] Performing ActiveStorage::PurgeJob (Job ID: d67ea4e2-bf95-4fd7-b1a2-1503984e7040) from Async(default) with arguments: #<GlobalID:0x00005607120a7840 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/20>>
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040] [36m  Disk Storage (0.5ms) [0m[31mDeleted file from key: 7NuhgHyZoc8uJ65CPSBNRwTT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040] [36m  Disk Storage (0.1ms) [0m[31mDeleted files by key prefix: variants/7NuhgHyZoc8uJ65CPSBNRwTT/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040]   [1m[36mActiveStorage::Blob Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 20]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [ce18612a-e274-4e69-996d-04bee268fc06]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [ce18612a-e274-4e69-996d-04bee268fc06]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":500,\"height\":500,\"analyzed\":true}"], ["id", 21]]
  [1m[35m (23.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [ce18612a-e274-4e69-996d-04bee268fc06]   [1m[35m (15.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [ce18612a-e274-4e69-996d-04bee268fc06] Performed ActiveStorage::AnalyzeJob (Job ID: ce18612a-e274-4e69-996d-04bee268fc06) from Async(default) in 35.16ms
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040]   [1m[35m (20.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040]   [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 20], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [d67ea4e2-bf95-4fd7-b1a2-1503984e7040] Performed ActiveStorage::PurgeJob (Job ID: d67ea4e2-bf95-4fd7-b1a2-1503984e7040) from Async(default) in 25.81ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[36m  Disk Storage (3.2ms) [0m[32mUploaded file to key: sKX5HBUqiBuigb5Bff1koeXx (checksum: J9/V4b5RpPkUOgJCIwlweg==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "sKX5HBUqiBuigb5Bff1koeXx"], ["filename", "test.png"], ["content_type", "image/png"], ["metadata", "{\"identified\":true}"], ["byte_size", 669370], ["checksum", "J9/V4b5RpPkUOgJCIwlweg=="], ["created_at", "2018-08-16 07:39:56.362830"]]
  [1m[35m (41.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 16]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 22], ["created_at", "2018-08-16 07:39:56.407688"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:39:56.408524"], ["id", 3]]
  [1m[35m (7.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 32de3ce3-e47d-45c4-8408-70bb71d6a472) to Async(default) with arguments: #<GlobalID:0x0000560710afa178 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/22>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 3c9a7184-6eae-4926-9180-f1d68337523c) to Async(default) with arguments: #<GlobalID:0x0000560710ace078 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/16>>
  [1m[36mActiveStorage::Blob Load (1.0ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [32de3ce3-e47d-45c4-8408-70bb71d6a472] Performing ActiveStorage::AnalyzeJob (Job ID: 32de3ce3-e47d-45c4-8408-70bb71d6a472) from Async(default) with arguments: #<GlobalID:0x0000560710755e78 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/22>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [32de3ce3-e47d-45c4-8408-70bb71d6a472] [36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: sKX5HBUqiBuigb5Bff1koeXx[0m
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c] Performing ActiveStorage::PurgeJob (Job ID: 3c9a7184-6eae-4926-9180-f1d68337523c) from Async(default) with arguments: #<GlobalID:0x00005607106efd08 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/16>>
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c] [36m  Disk Storage (0.4ms) [0m[31mDeleted file from key: UUEp9Kqcu84JE6cVMoeMZcdo[0m
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/UUEp9Kqcu84JE6cVMoeMZcdo/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 16]]
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c]   [1m[35m (11.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c]   [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 16], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [3c9a7184-6eae-4926-9180-f1d68337523c] Performed ActiveStorage::PurgeJob (Job ID: 3c9a7184-6eae-4926-9180-f1d68337523c) from Async(default) in 15.63ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [32de3ce3-e47d-45c4-8408-70bb71d6a472]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [32de3ce3-e47d-45c4-8408-70bb71d6a472]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":800,\"height\":800,\"analyzed\":true}"], ["id", 22]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [32de3ce3-e47d-45c4-8408-70bb71d6a472]   [1m[35m (6.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [32de3ce3-e47d-45c4-8408-70bb71d6a472] Performed ActiveStorage::AnalyzeJob (Job ID: 32de3ce3-e47d-45c4-8408-70bb71d6a472) from Async(default) in 60.78ms
Started POST "/graphql" for ::1 at 2018-08-16 03:40:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.5ms | ActiveRecord: 0.9ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04/5_Bubblin_anderson%20.paak.image-jpeg" for ::1 at 2018-08-16 03:40:22 -0400
Processing by ActiveStorage::BlobsController#show as 
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04", "filename"=>"5_Bubblin_anderson .paak"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[36m  Disk Storage (6.5ms) [0m[34mGenerated URL for file at key: ax7r71La5vsmwJCiAunikbQS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NDU6MjIuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--30d40b6bcb2e6edf95424852373703b543834edb/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NDU6MjIuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--30d40b6bcb2e6edf95424852373703b543834edb/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg
Completed 302 Found in 48ms (ActiveRecord: 6.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NDU6MjIuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--30d40b6bcb2e6edf95424852373703b543834edb/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:40:22 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NDU6MjIuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--30d40b6bcb2e6edf95424852373703b543834edb", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  [1m[36mTrack Load (1.1ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 2]]
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[32mUploaded file to key: TipZh4Cyokf8BUd4kVDxDEub (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "TipZh4Cyokf8BUd4kVDxDEub"], ["filename", "3_Bump Up_Sun Araw.image/jpeg"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-16 07:49:25.161173"]]
  [1m[35m (31.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 22]]
  [1m[36mActiveStorage::Attachment Create (0.2ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 23], ["created_at", "2018-08-16 07:49:25.196194"]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:49:25.197117"], ["id", 3]]
  [1m[35m (7.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 8d75d63e-5b03-499c-af9e-3f313c4e94b2) to Async(default) with arguments: #<GlobalID:0x0000560712a4b7e8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/23>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: bae4c58f-7696-4e87-b11d-44890e03fd15) to Async(default) with arguments: #<GlobalID:0x0000560712a48570 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/22>>
Started POST "/graphql" for ::1 at 2018-08-16 03:49:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 35ms (Views: 0.3ms | ActiveRecord: 5.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04/5_Bubblin_anderson%20.paak.image-jpeg" for ::1 at 2018-08-16 03:49:43 -0400
Processing by ActiveStorage::BlobsController#show as 
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04", "filename"=>"5_Bubblin_anderson .paak"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: ax7r71La5vsmwJCiAunikbQS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg
Completed 302 Found in 19ms (ActiveRecord: 3.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:49:43 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-16 03:50:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:50:26 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  [1m[35m (71932.9ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [8d75d63e-5b03-499c-af9e-3f313c4e94b2] Performing ActiveStorage::AnalyzeJob (Job ID: 8d75d63e-5b03-499c-af9e-3f313c4e94b2) from Async(default) with arguments: #<GlobalID:0x00007fb3f00c4af8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/23>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [8d75d63e-5b03-499c-af9e-3f313c4e94b2] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: TipZh4Cyokf8BUd4kVDxDEub[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [8d75d63e-5b03-499c-af9e-3f313c4e94b2]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [8d75d63e-5b03-499c-af9e-3f313c4e94b2]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 23]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [8d75d63e-5b03-499c-af9e-3f313c4e94b2]   [1m[35m (40.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [8d75d63e-5b03-499c-af9e-3f313c4e94b2] Performed ActiveStorage::AnalyzeJob (Job ID: 8d75d63e-5b03-499c-af9e-3f313c4e94b2) from Async(default) in 63.05ms
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 22], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15] Performing ActiveStorage::PurgeJob (Job ID: bae4c58f-7696-4e87-b11d-44890e03fd15) from Async(default) with arguments: #<GlobalID:0x0000560712446d20 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/22>>
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15] [36m  Disk Storage (0.3ms) [0m[31mDeleted file from key: sKX5HBUqiBuigb5Bff1koeXx[0m
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/sKX5HBUqiBuigb5Bff1koeXx/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 22]]
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15]   [1m[35m (3.6ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15]   [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 22], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [bae4c58f-7696-4e87-b11d-44890e03fd15] Performed ActiveStorage::PurgeJob (Job ID: bae4c58f-7696-4e87-b11d-44890e03fd15) from Async(default) in 13.08ms
Started POST "/graphql" for ::1 at 2018-08-16 03:50:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:50:46 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[32mUploaded file to key: xYq4U97kxDKtLr6KnHmpjQKN (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "xYq4U97kxDKtLr6KnHmpjQKN"], ["filename", "3_Bump Up_Sun Araw.png"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-16 07:53:43.960882"]]
  [1m[35m (35.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 23]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 24], ["created_at", "2018-08-16 07:53:44.001020"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:53:44.001999"], ["id", 3]]
  [1m[35m (6.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: a0640741-1c29-4d67-9fa9-2236252bee7c) to Async(default) with arguments: #<GlobalID:0x000056070fccd7a8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/24>>
Started POST "/graphql" for ::1 at 2018-08-16 03:53:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 60ms (Views: 0.7ms | ActiveRecord: 3.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:53:52 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 6ms (ActiveRecord: 0.0ms)


[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 66846bdb-a431-4c31-886e-5ffbe5de0171) to Async(default) with arguments: #<GlobalID:0x00005607123f9fc0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/23>>
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Load (2.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [a0640741-1c29-4d67-9fa9-2236252bee7c] Performing ActiveStorage::AnalyzeJob (Job ID: a0640741-1c29-4d67-9fa9-2236252bee7c) from Async(default) with arguments: #<GlobalID:0x00005607120c1560 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/24>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [a0640741-1c29-4d67-9fa9-2236252bee7c] [36m  Disk Storage (1.2ms) [0m[34mDownloaded file from key: xYq4U97kxDKtLr6KnHmpjQKN[0m
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (1.0ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-08-16 07:53:54.132754"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cf72a11f804fb1e902a3f4a408faa7b84e3c6d7f/3_Bump%20Up_Sun%20Araw.png"], ["id", 3]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [a0640741-1c29-4d67-9fa9-2236252bee7c]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [a0640741-1c29-4d67-9fa9-2236252bee7c]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 24]]
  [1m[35m (19.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [a0640741-1c29-4d67-9fa9-2236252bee7c]   [1m[35m (20.3ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [a0640741-1c29-4d67-9fa9-2236252bee7c] Performed ActiveStorage::AnalyzeJob (Job ID: a0640741-1c29-4d67-9fa9-2236252bee7c) from Async(default) in 55.46ms
Started POST "/graphql" for ::1 at 2018-08-16 03:53:58 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cf72a11f804fb1e902a3f4a408faa7b84e3c6d7f/3_Bump%20Up_Sun%20Araw.png" for ::1 at 2018-08-16 03:53:58 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cf72a11f804fb1e902a3f4a408faa7b84e3c6d7f", "filename"=>"3_Bump Up_Sun Araw"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:53:58 -0400
  [1m[36mActiveStorage::Blob Load (1.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (2.1ms) [0m[34mGenerated URL for file at key: xYq4U97kxDKtLr6KnHmpjQKN (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDE0V1hFMFZUazNhM2hFUzNSTWNqWkxia2h0Y0dwUlMwNEdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTg6NTguMjExWiIsInB1ciI6ImJsb2Jfa2V5In19--a9f14589e0681d2257ec4c24f009d4afba20bda3/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDE0V1hFMFZUazNhM2hFUzNSTWNqWkxia2h0Y0dwUlMwNEdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTg6NTguMjExWiIsInB1ciI6ImJsb2Jfa2V5In19--a9f14589e0681d2257ec4c24f009d4afba20bda3/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png
Completed 302 Found in 44ms (ActiveRecord: 9.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDE0V1hFMFZUazNhM2hFUzNSTWNqWkxia2h0Y0dwUlMwNEdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTg6NTguMjExWiIsInB1ciI6ImJsb2Jfa2V5In19--a9f14589e0681d2257ec4c24f009d4afba20bda3/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png" for ::1 at 2018-08-16 03:53:58 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Bump Up_Sun Araw.png\"; filename*=UTF-8''3_Bump%20Up_Sun%20Araw.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDE0V1hFMFZUazNhM2hFUzNSTWNqWkxia2h0Y0dwUlMwNEdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTg6NTguMjExWiIsInB1ciI6ImJsb2Jfa2V5In19--a9f14589e0681d2257ec4c24f009d4afba20bda3", "filename"=>"3_Bump Up_Sun Araw"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: xYq4U97kxDKtLr6KnHmpjQKN[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171] Performing ActiveStorage::PurgeJob (Job ID: 66846bdb-a431-4c31-886e-5ffbe5de0171) from Async(default) with arguments: #<GlobalID:0x00007fb3e0069cf8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/23>>
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171] [36m  Disk Storage (0.1ms) [0m[31mDeleted file from key: TipZh4Cyokf8BUd4kVDxDEub[0m
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/TipZh4Cyokf8BUd4kVDxDEub/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171]   [1m[36mActiveStorage::Blob Destroy (0.2ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 23]]
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171]   [1m[35m (40.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171]   [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 23], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [66846bdb-a431-4c31-886e-5ffbe5de0171] Performed ActiveStorage::PurgeJob (Job ID: 66846bdb-a431-4c31-886e-5ffbe5de0171) from Async(default) in 49.62ms
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[36m  Disk Storage (2.6ms) [0m[32mUploaded file to key: 3beC5HKwKzimxKp9EQzEpQgs (checksum: 1grGvYgezOVofnutK6JKCw==)[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "3beC5HKwKzimxKp9EQzEpQgs"], ["filename", "3_Bump Up_Sun Araw.png"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 40669], ["checksum", "1grGvYgezOVofnutK6JKCw=="], ["created_at", "2018-08-16 07:54:07.124646"]]
  [1m[35m (40.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.3ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 24]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 25], ["created_at", "2018-08-16 07:54:07.168861"]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:54:07.169772"], ["id", 3]]
  [1m[35m (7.2ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 1a0905f2-a0a4-4ed2-9f30-73eb4479242e) to Async(default) with arguments: #<GlobalID:0x00005607103e84c0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/25>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 60916387-2f37-448e-be36-7155f51ec283) to Async(default) with arguments: #<GlobalID:0x0000560710393880 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/24>>
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283] Performing ActiveStorage::PurgeJob (Job ID: 60916387-2f37-448e-be36-7155f51ec283) from Async(default) with arguments: #<GlobalID:0x000056070fff1100 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/24>>
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283] [36m  Disk Storage (1.0ms) [0m[31mDeleted file from key: xYq4U97kxDKtLr6KnHmpjQKN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283] [36m  Disk Storage (0.2ms) [0m[31mDeleted files by key prefix: variants/xYq4U97kxDKtLr6KnHmpjQKN/[0m
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283]   [1m[36mActiveStorage::Blob Destroy (2.0ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 24]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283]   [1m[35m (20.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveStorage::Blob Load (14.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[36mTrack Update (1.4ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-08-16 07:54:07.208985"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde/3_Bump%20Up_Sun%20Araw.png"], ["id", 3]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a0905f2-a0a4-4ed2-9f30-73eb4479242e] Performing ActiveStorage::AnalyzeJob (Job ID: 1a0905f2-a0a4-4ed2-9f30-73eb4479242e) from Async(default) with arguments: #<GlobalID:0x0000560712a40dc0 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/25>>
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283]   [1m[36mActiveStorage::Attachment Load (1.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 24], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [60916387-2f37-448e-be36-7155f51ec283] Performed ActiveStorage::PurgeJob (Job ID: 60916387-2f37-448e-be36-7155f51ec283) from Async(default) in 27.56ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a0905f2-a0a4-4ed2-9f30-73eb4479242e] [36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: 3beC5HKwKzimxKp9EQzEpQgs[0m
  [1m[35m (10.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a0905f2-a0a4-4ed2-9f30-73eb4479242e]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a0905f2-a0a4-4ed2-9f30-73eb4479242e]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 25]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a0905f2-a0a4-4ed2-9f30-73eb4479242e]   [1m[35m (12.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a0905f2-a0a4-4ed2-9f30-73eb4479242e] Performed ActiveStorage::AnalyzeJob (Job ID: 1a0905f2-a0a4-4ed2-9f30-73eb4479242e) from Async(default) in 32.99ms
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1 OFFSET $2[0m  [["LIMIT", 1], ["OFFSET", 1]]
  [1m[36mActiveStorage::Attachment Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[36m  Disk Storage (3.1ms) [0m[32mUploaded file to key: mdRHkNLBRLYyv6mTCY16BPZS (checksum: eWfab2JYAdzmQBM5y5KZ6g==)[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "mdRHkNLBRLYyv6mTCY16BPZS"], ["filename", "4_Old Grey_Dope Body.png"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 36323], ["checksum", "eWfab2JYAdzmQBM5y5KZ6g=="], ["created_at", "2018-08-16 07:54:14.671478"]]
  [1m[35m (61.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Attachment Destroy (0.5ms)[0m  [1m[31mDELETE FROM "active_storage_attachments" WHERE "active_storage_attachments"."id" = $1[0m  [["id", 17]]
  [1m[36mActiveStorage::Attachment Create (0.4ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 26], ["created_at", "2018-08-16 07:54:14.736324"]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-08-16 07:54:14.737282"], ["id", 4]]
  [1m[35m (7.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3) to Async(default) with arguments: #<GlobalID:0x00005607128e0778 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/26>>
[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 2068d900-087b-491c-92da-43bb2712e1ba) to Async(default) with arguments: #<GlobalID:0x00005607128de108 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/17>>
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba] Performing ActiveStorage::PurgeJob (Job ID: 2068d900-087b-491c-92da-43bb2712e1ba) from Async(default) with arguments: #<GlobalID:0x00005607128d1930 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/17>>
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba] [36m  Disk Storage (0.5ms) [0m[31mDeleted file from key: sDff29iVbd5omQJoZce79TfZ[0m
  [1m[36mActiveStorage::Blob Load (1.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba] [36m  Disk Storage (0.0ms) [0m[31mDeleted files by key prefix: variants/sDff29iVbd5omQJoZce79TfZ/[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3] Performing ActiveStorage::AnalyzeJob (Job ID: 1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3) from Async(default) with arguments: #<GlobalID:0x00005607128c8880 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/26>>
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba]   [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mTrack Update (0.7ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-08-16 07:54:14.752059"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85/4_Old%20Grey_Dope%20Body.png"], ["id", 4]]
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba]   [1m[36mActiveStorage::Blob Destroy (0.6ms)[0m  [1m[31mDELETE FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1[0m  [["id", 17]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3] [36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: mdRHkNLBRLYyv6mTCY16BPZS[0m
  [1m[35m (12.9ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 26]]
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba]   [1m[35m (45.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba]   [1m[36mActiveStorage::Attachment Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 17], ["record_type", "ActiveStorage::Blob"], ["name", "preview_image"], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::PurgeJob] [2068d900-087b-491c-92da-43bb2712e1ba] Performed ActiveStorage::PurgeJob (Job ID: 2068d900-087b-491c-92da-43bb2712e1ba) from Async(default) in 53.45ms
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3]   [1m[35m (48.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3] Performed ActiveStorage::AnalyzeJob (Job ID: 1a7cd6f6-1248-45ad-ae9a-fed9ae9d27b3) from Async(default) in 69.8ms
Started POST "/graphql" for ::1 at 2018-08-16 03:54:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde/3_Bump%20Up_Sun%20Araw.png" for ::1 at 2018-08-16 03:54:18 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde", "filename"=>"3_Bump Up_Sun Araw"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: 3beC5HKwKzimxKp9EQzEpQgs (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--39c90dcd15fa4748c85daa72020ee2b6a285dee7/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--39c90dcd15fa4748c85daa72020ee2b6a285dee7/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png
Completed 302 Found in 3ms (ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85/4_Old%20Grey_Dope%20Body.png" for ::1 at 2018-08-16 03:54:18 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85", "filename"=>"4_Old Grey_Dope Body"}
  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: mdRHkNLBRLYyv6mTCY16BPZS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTM4WiIsInB1ciI6ImJsb2Jfa2V5In19--55f57dd8339d5414c9481992edc32f6aba202853/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTM4WiIsInB1ciI6ImJsb2Jfa2V5In19--55f57dd8339d5414c9481992edc32f6aba202853/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png
Completed 302 Found in 3ms (ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-16 03:54:18 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTQ6NDMuOTU1WiIsInB1ciI6ImJsb2Jfa2V5In19--477aef5a17e9eb6ce7873fee98e2cf47efcb7a91", "filename"=>"5_Bubblin_anderson .paak"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--39c90dcd15fa4748c85daa72020ee2b6a285dee7/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png" for ::1 at 2018-08-16 03:54:18 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTM4WiIsInB1ciI6ImJsb2Jfa2V5In19--55f57dd8339d5414c9481992edc32f6aba202853/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png" for ::1 at 2018-08-16 03:54:18 -0400
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Old Grey_Dope Body.png\"; filename*=UTF-8''4_Old%20Grey_Dope%20Body.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTM4WiIsInB1ciI6ImJsb2Jfa2V5In19--55f57dd8339d5414c9481992edc32f6aba202853", "filename"=>"4_Old Grey_Dope Body"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: mdRHkNLBRLYyv6mTCY16BPZS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Bump Up_Sun Araw.png\"; filename*=UTF-8''3_Bump%20Up_Sun%20Araw.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMTZUMDc6NTk6MTguNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--39c90dcd15fa4748c85daa72020ee2b6a285dee7", "filename"=>"3_Bump Up_Sun Araw"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 3beC5HKwKzimxKp9EQzEpQgs[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-08-24 03:14:36 -0400
  [1m[35m (96.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (73.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1317ms (Views: 0.4ms | ActiveRecord: 372.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85/4_Old%20Grey_Dope%20Body.png" for ::1 at 2018-08-24 03:14:47 -0400
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04/5_Bubblin_anderson%20.paak.image-jpeg" for ::1 at 2018-08-24 03:14:47 -0400
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde/3_Bump%20Up_Sun%20Araw.png" for ::1 at 2018-08-24 03:14:47 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde", "filename"=>"3_Bump Up_Sun Araw"}
Processing by ActiveStorage::BlobsController#show as 
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85", "filename"=>"4_Old Grey_Dope Body"}
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04", "filename"=>"5_Bubblin_anderson .paak"}
  [1m[36mActiveStorage::Blob Load (180.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (180.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (180.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[36m  Disk Storage (747.6ms) [0m[34mGenerated URL for file at key: 3beC5HKwKzimxKp9EQzEpQgs (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--33c63ebd6e726e0f3235b2378cca7489f75d6ed0/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--33c63ebd6e726e0f3235b2378cca7489f75d6ed0/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png
Completed 302 Found in 1854ms (ActiveRecord: 184.7ms)


[36m  Disk Storage (747.1ms) [0m[34mGenerated URL for file at key: ax7r71La5vsmwJCiAunikbQS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY5WiIsInB1ciI6ImJsb2Jfa2V5In19--4c4e478aee91661cf2337338ccf5958538ddf4fc/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY5WiIsInB1ciI6ImJsb2Jfa2V5In19--4c4e478aee91661cf2337338ccf5958538ddf4fc/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg
Completed 302 Found in 1854ms (ActiveRecord: 184.1ms)


[36m  Disk Storage (747.8ms) [0m[34mGenerated URL for file at key: mdRHkNLBRLYyv6mTCY16BPZS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--4ddb361ec83203b9dac39a54ab56034f438f8d77/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--4ddb361ec83203b9dac39a54ab56034f438f8d77/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png
Completed 302 Found in 1855ms (ActiveRecord: 185.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY5WiIsInB1ciI6ImJsb2Jfa2V5In19--4c4e478aee91661cf2337338ccf5958538ddf4fc/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-08-24 03:14:49 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--33c63ebd6e726e0f3235b2378cca7489f75d6ed0/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png" for ::1 at 2018-08-24 03:14:49 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--4ddb361ec83203b9dac39a54ab56034f438f8d77/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png" for ::1 at 2018-08-24 03:14:49 -0400
Processing by ActiveStorage::DiskController#show as 
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Bump Up_Sun Araw.png\"; filename*=UTF-8''3_Bump%20Up_Sun%20Araw.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--33c63ebd6e726e0f3235b2378cca7489f75d6ed0", "filename"=>"3_Bump Up_Sun Araw"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY5WiIsInB1ciI6ImJsb2Jfa2V5In19--4c4e478aee91661cf2337338ccf5958538ddf4fc", "filename"=>"5_Bubblin_anderson .paak"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Old Grey_Dope Body.png\"; filename*=UTF-8''4_Old%20Grey_Dope%20Body.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDgtMjRUMDc6MTk6NDguNjY4WiIsInB1ciI6ImJsb2Jfa2V5In19--4ddb361ec83203b9dac39a54ab56034f438f8d77", "filename"=>"4_Old Grey_Dope Body"}
[36m  Disk Storage (187.1ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 188ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (190.8ms) [0m[34mDownloaded file from key: 3beC5HKwKzimxKp9EQzEpQgs[0m
Completed 200 OK in 192ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (191.0ms) [0m[34mDownloaded file from key: mdRHkNLBRLYyv6mTCY16BPZS[0m
Completed 200 OK in 192ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-12 00:46:32 -0400
  [1m[35m (9.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.2.1) lib/active_record/migration.rb:579:in `check_pending!'
activerecord (5.2.1) lib/active_record/migration.rb:556:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-09-19 02:04:10 -0400
  [1m[35m (9.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.2.1) lib/active_record/migration.rb:579:in `check_pending!'
activerecord (5.2.1) lib/active_record/migration.rb:556:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddMediaEndpointToTrack (20180824100425)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180824100425"]]
  [1m[35m (36.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (21.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddMediaEndpointToTrack (20180824100425)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::SchemaMigration Destroy (0.4ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = $1[0m  [["version", "20180824100425"]]
  [1m[35m (165.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddMediaEndpointToTrack (20180824100425)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (198.7ms)[0m  [1m[35mALTER TABLE "tracks" ADD "media_endpoint" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180824100425"]]
  [1m[35m (24.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-09-20 22:36:50 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (29.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 243ms (Views: 0.3ms | ActiveRecord: 32.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde/3_Bump%20Up_Sun%20Araw.png" for ::1 at 2018-09-20 22:36:51 -0400
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04/5_Bubblin_anderson%20.paak.image-jpeg" for ::1 at 2018-09-20 22:36:51 -0400
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85/4_Old%20Grey_Dope%20Body.png" for ::1 at 2018-09-20 22:36:51 -0400
Processing by ActiveStorage::BlobsController#show as 
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--37dc567516966dc65d413bea058aaa4811585e04", "filename"=>"5_Bubblin_anderson .paak"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--caf0c96d7a44483a651bd52050a5d11026d29fde", "filename"=>"3_Bump Up_Sun Araw"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ae174dccddaf6d9b1548833d8eff3908fa228c85", "filename"=>"4_Old Grey_Dope Body"}
  [1m[36mActiveStorage::Blob Load (16.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (15.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (21.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[36m  Disk Storage (143.0ms) [0m[34mGenerated URL for file at key: mdRHkNLBRLYyv6mTCY16BPZS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--4d6e22040be7bffa7c7be7e22b17d9f09637285c/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png)[0m
[36m  Disk Storage (143.2ms) [0m[34mGenerated URL for file at key: 3beC5HKwKzimxKp9EQzEpQgs (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--9f0d0b107f4dbac32a09174e5fded4c425317025/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--4d6e22040be7bffa7c7be7e22b17d9f09637285c/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png
[36m  Disk Storage (144.7ms) [0m[34mGenerated URL for file at key: ax7r71La5vsmwJCiAunikbQS (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--b72f9193b1a7f25b96dd489839292aff792549d5/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--9f0d0b107f4dbac32a09174e5fded4c425317025/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png
Completed 302 Found in 209ms (ActiveRecord: 19.6ms)


Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--b72f9193b1a7f25b96dd489839292aff792549d5/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg
Completed 302 Found in 210ms (ActiveRecord: 20.4ms)


Completed 302 Found in 209ms (ActiveRecord: 25.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--4d6e22040be7bffa7c7be7e22b17d9f09637285c/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png" for ::1 at 2018-09-20 22:36:51 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--9f0d0b107f4dbac32a09174e5fded4c425317025/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png" for ::1 at 2018-09-20 22:36:51 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--b72f9193b1a7f25b96dd489839292aff792549d5/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-09-20 22:36:51 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--b72f9193b1a7f25b96dd489839292aff792549d5", "filename"=>"5_Bubblin_anderson .paak"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Old Grey_Dope Body.png\"; filename*=UTF-8''4_Old%20Grey_Dope%20Body.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--4d6e22040be7bffa7c7be7e22b17d9f09637285c", "filename"=>"4_Old Grey_Dope Body"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Bump Up_Sun Araw.png\"; filename*=UTF-8''3_Bump%20Up_Sun%20Araw.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--9f0d0b107f4dbac32a09174e5fded4c425317025", "filename"=>"3_Bump Up_Sun Araw"}
[36m  Disk Storage (13.9ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 15ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (16.2ms) [0m[34mDownloaded file from key: 3beC5HKwKzimxKp9EQzEpQgs[0m
Completed 200 OK in 17ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (18.3ms) [0m[34mDownloaded file from key: mdRHkNLBRLYyv6mTCY16BPZS[0m
Completed 200 OK in 20ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-20 22:36:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--b72f9193b1a7f25b96dd489839292aff792549d5/5_Bubblin_anderson%20.paak.image-jpeg?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%225_Bubblin_anderson+.paak.image-jpeg%22%3B+filename%2A%3DUTF-8%27%275_Bubblin_anderson%2520.paak.image-jpeg" for ::1 at 2018-09-20 22:36:56 -0400
Processing by ActiveStorage::DiskController#show as 
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"5_Bubblin_anderson .paak.image-jpeg\"; filename*=UTF-8''5_Bubblin_anderson%20.paak.image-jpeg", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFoZURkeU56Rk1ZVFYyYzIxM1NrTnBRWFZ1YVd0aVVWTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--b72f9193b1a7f25b96dd489839292aff792549d5", "filename"=>"5_Bubblin_anderson .paak"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--4d6e22040be7bffa7c7be7e22b17d9f09637285c/4_Old%20Grey_Dope%20Body.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Old+Grey_Dope+Body.png%22%3B+filename%2A%3DUTF-8%27%274_Old%2520Grey_Dope%2520Body.png" for ::1 at 2018-09-20 22:36:56 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--9f0d0b107f4dbac32a09174e5fded4c425317025/3_Bump%20Up_Sun%20Araw.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Bump+Up_Sun+Araw.png%22%3B+filename%2A%3DUTF-8%27%273_Bump%2520Up_Sun%2520Araw.png" for ::1 at 2018-09-20 22:36:56 -0400
[36m  Disk Storage (0.8ms) [0m[34mDownloaded file from key: ax7r71La5vsmwJCiAunikbQS[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Bump Up_Sun Araw.png\"; filename*=UTF-8''3_Bump%20Up_Sun%20Araw.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDB6WW1WRE5VaExkMHQ2YVcxNFMzQTVSVkY2UlhCUlozTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--9f0d0b107f4dbac32a09174e5fded4c425317025", "filename"=>"3_Bump Up_Sun Araw"}
Processing by ActiveStorage::DiskController#show as PNG
[36m  Disk Storage (0.8ms) [0m[34mDownloaded file from key: 3beC5HKwKzimxKp9EQzEpQgs[0m
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Old Grey_Dope Body.png\"; filename*=UTF-8''4_Old%20Grey_Dope%20Body.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDF0WkZKSWEwNU1RbEpNV1hsMk5tMVVRMWt4TmtKUVdsTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjFUMDI6NDE6NTEuNDk0WiIsInB1ciI6ImJsb2Jfa2V5In19--4d6e22040be7bffa7c7be7e22b17d9f09637285c", "filename"=>"4_Old Grey_Dope Body"}
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: mdRHkNLBRLYyv6mTCY16BPZS[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to RenameMediaEndpointOnTrackToMediaQueryUrl (20180928004019)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "media_endpoint" TO "media_query_url"[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180928004019"]]
  [1m[35m (21.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (356.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "playsette_development"[0m
  [1m[35m (227.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "playsette_testing"[0m
  [1m[35m (1527.3ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (694.0ms)[0m  [1m[35mCREATE DATABASE "playsette_testing" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_attachments" CASCADE[0m
  [1m[35m (130.1ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (42.7ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (43.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_blobs" CASCADE[0m
  [1m[35m (88.7ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (43.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "tracks" CASCADE[0m
  [1m[35m (88.4ms)[0m  [1m[35mCREATE TABLE "tracks" ("id" bigserial primary key, "url" character varying, "title" character varying, "artist" character varying, "album" character varying, "service" character varying, "media_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "media_url" character varying, "user_id" bigint, "year" character varying, "album_art_origin" character varying, "album_art_url" character varying, "media_query_url" character varying)[0m
  [1m[35m (43.3ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (88.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "password_digest" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (33.1ms)[0m  [1m[35mALTER TABLE "tracks" ADD CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (77.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (9.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20180928004019)[0m
  [1m[35m (11.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180824100425),
(20180809135505),
(20180806110551),
(20180617093213),
(20180812125814),
(20180806112719),
(20180812123042),
(20180617094622),
(20180711093417),
(20180816065719),
(20180728072251),
(20180806104409);

[0m
  [1m[35m (77.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-09-28 00:41:39.196197"], ["updated_at", "2018-09-28 00:41:39.196197"]]
  [1m[35m (5.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_attachments" CASCADE[0m
  [1m[35m (88.6ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (42.9ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (43.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_storage_blobs" CASCADE[0m
  [1m[35m (88.6ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (43.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "tracks" CASCADE[0m
  [1m[35m (79.1ms)[0m  [1m[35mCREATE TABLE "tracks" ("id" bigserial primary key, "url" character varying, "title" character varying, "artist" character varying, "album" character varying, "service" character varying, "media_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "media_url" character varying, "user_id" bigint, "year" character varying, "album_art_origin" character varying, "album_art_url" character varying, "media_query_url" character varying)[0m
  [1m[35m (43.4ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (88.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "password_digest" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (10.8ms)[0m  [1m[35mALTER TABLE "tracks" ADD CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (88.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (10.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20180928004019)[0m
  [1m[35m (11.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180824100425),
(20180809135505),
(20180806110551),
(20180617093213),
(20180812125814),
(20180806112719),
(20180812123042),
(20180617094622),
(20180711093417),
(20180816065719),
(20180728072251),
(20180806104409);

[0m
  [1m[35m (77.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-09-28 00:41:39.942609"], ["updated_at", "2018-09-28 00:41:39.942609"]]
  [1m[35m (8.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2018-09-28 00:41:39.953154"], ["key", "environment"]]
  [1m[35m (9.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-09-27 21:17:54 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 26ms (Views: 0.1ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for ::1 at 2018-09-27 21:35:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"egpavelka@gmail.com", "name"=>"e.g. pavelka", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"egpavelka@gmail.com", "name"=>"e.g. pavelka", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:24: syntax error, unexpected tIDENTIFIER, expecting ')'
      service: args[:service],
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:25: syntax error, unexpected tLABEL, expecting '='
      media_type: args[:media_type],
      ^~~~~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:26: syntax error, unexpected tLABEL, expecting '='
      title: args[:title],
      ^~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:27: syntax error, unexpected tLABEL, expecting '='
      artist: args[:artist],
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:28: syntax error, unexpected tLABEL, expecting '='
      album: args[:album],
      ^~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:29: syntax error, unexpected tLABEL, expecting '='
      year: args[:year],
      ^~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tLABEL, expecting '='
      album_art_origin: args[:album_art_origin],
      ^~~~~~~~~~~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:32: syntax error, unexpected tLABEL, expecting '='
      user_id: "1"
      ^~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:33: syntax error, unexpected ')', expecting keyword_end
    )
    ^):
  
app/graphql/resolvers/create_track.rb:24: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/resolvers/create_track.rb:25: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:26: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:27: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:28: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:29: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:32: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:33: syntax error, unexpected ')', expecting keyword_end
app/graphql/types/mutation_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-09-27 21:35:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"egpavelka@gmail.com", "name"=>"e.g. pavelka", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"egpavelka@gmail.com", "name"=>"e.g. pavelka", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "egpavelka"], ["email", "egpavelka@gmail.com"], ["name", "e.g. pavelka"], ["password_digest", "$2a$10$f0IxA3zXuTj4rDOOgLK4V.QwKT6Thy4FzaSG7y62a1PGZHfeWEcnu"], ["created_at", "2018-09-28 01:35:40.096377"], ["updated_at", "2018-09-28 01:35:40.096377"]]
  [1m[35m (15.7ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 150ms (Views: 0.2ms | ActiveRecord: 21.1ms)


Started GET "/graphql" for ::1 at 2018-09-27 21:37:30 -0400
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started GET "/favicon.ico" for ::1 at 2018-09-27 21:37:31 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.6.2) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.6.2) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `catch'
web-console (3.6.2) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2018-09-27 21:37:59 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (297.6ms)
Completed 200 OK in 300ms (Views: 299.0ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-09-27 21:37:59 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-09-27 21:37:59 -0400
Started POST "/graphql" for ::1 at 2018-09-27 21:38:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 60ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-09-28 02:00:03 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.gem/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (2.9ms)
Completed 200 OK in 5ms (Views: 4.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:00:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:24: syntax error, unexpected tIDENTIFIER, expecting ')'
      service: args[:service],
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:25: syntax error, unexpected tLABEL, expecting '='
      media_type: args[:media_type],
      ^~~~~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:26: syntax error, unexpected tLABEL, expecting '='
      title: args[:title],
      ^~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:27: syntax error, unexpected tLABEL, expecting '='
      artist: args[:artist],
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:28: syntax error, unexpected tLABEL, expecting '='
      album: args[:album],
      ^~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:29: syntax error, unexpected tLABEL, expecting '='
      year: args[:year],
      ^~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tLABEL, expecting '='
      album_art_origin: args[:album_art_origin],
      ^~~~~~~~~~~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:32: syntax error, unexpected tLABEL, expecting '='
      user_id: "1"
      ^~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:33: syntax error, unexpected ')', expecting keyword_end
    )
    ^):
  
app/graphql/resolvers/create_track.rb:24: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/resolvers/create_track.rb:25: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:26: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:27: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:28: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:29: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:32: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:33: syntax error, unexpected ')', expecting keyword_end
app/graphql/types/mutation_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-09-28 02:00:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 55ms (Views: 6.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:00:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1317ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:01:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538200832&t=c0469e684667274a22bfcc00c17d3cb6b6672203&token=1538200832_72e032a194ab9cf116c0b696392275efbe948fa1", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538200832&t=c0469e684667274a22bfcc00c17d3cb6b6672203&token=1538200832_72e032a194ab9cf116c0b696392275efbe948fa1", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:01:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538200832&t=c0469e684667274a22bfcc00c17d3cb6b6672203&token=1538200832_72e032a194ab9cf116c0b696392275efbe948fa1", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538200832&t=c0469e684667274a22bfcc00c17d3cb6b6672203&token=1538200832_72e032a194ab9cf116c0b696392275efbe948fa1", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:01:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538200832&t=c0469e684667274a22bfcc00c17d3cb6b6672203&token=1538200832_72e032a194ab9cf116c0b696392275efbe948fa1", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538200832&t=c0469e684667274a22bfcc00c17d3cb6b6672203&token=1538200832_72e032a194ab9cf116c0b696392275efbe948fa1", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:01:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:03:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:03:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 670ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:03:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201035&t=8dbec8280c4d2f17542658ebfde95bc4631da2ce&token=1538201035_0aa8bf66d67b9e5278192a6440bee029955d5fbe", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201035&t=8dbec8280c4d2f17542658ebfde95bc4631da2ce&token=1538201035_0aa8bf66d67b9e5278192a6440bee029955d5fbe", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:10:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 780ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:10:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201435&t=185ecb2a482965fa84eb05e34b754c89e20e19f1&token=1538201435_0cc01a51147b234eb1bf00389f4898fd997c8f5c", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201435&t=185ecb2a482965fa84eb05e34b754c89e20e19f1&token=1538201435_0cc01a51147b234eb1bf00389f4898fd997c8f5c", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:10:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201435&t=185ecb2a482965fa84eb05e34b754c89e20e19f1&token=1538201435_0cc01a51147b234eb1bf00389f4898fd997c8f5c", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201435&t=185ecb2a482965fa84eb05e34b754c89e20e19f1&token=1538201435_0cc01a51147b234eb1bf00389f4898fd997c8f5c", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:10:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:11:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation NewTrackMutation {\n  url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\"\n}", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"mutation NewTrackMutation {\n  url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\"\n}", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:12:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation NewTrackMutation {\n  \"url\": \"grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\"\n}", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"mutation NewTrackMutation {\n  \"url\": \"grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\"\n}", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:12:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 783ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:15:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n    media_query_url\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n    media_query_url\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 803ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:15:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n    media_query_url\n    media_url\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n    media_query_url\n    media_url\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 672ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:15:54 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:16:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1119ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:17:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:17:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:17:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:17:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201774&t=1d15beccc99e1dabb0ea48e614dd3613a3693b7f&token=1538201774_d40dc7d1a4c5974810be76a8887b9936d33a03e9", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Cosmos, Don't Wake Me", "artist"=>"Grabbing Clouds Records and Tapes", "album"=>"Cosmos, Astrid and Me - 33 Brewer Street", "year"=>"2017", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3792521648_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:17:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.5ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-09-28 02:19:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n    media_query_url\n    media_url\n    url\n    service\n    media_type\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation", "graphql"=>{"query"=>"mutation NewTrackMutation {\n  new_track(url:\"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\") {\n    album\n    album_art_origin\n    artist\n    title\n    year\n    media_query_url\n    media_url\n    url\n    service\n    media_type\n  }\n}", "variables"=>nil, "operationName"=>"NewTrackMutation"}}
Completed 200 OK in 1044ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:22:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  )\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation", "graphql"=>{"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  )\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:24:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  )\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation", "graphql"=>{"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  )\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:24: syntax error, unexpected tIDENTIFIER, expecting ')'
      service: args[:service],
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:25: syntax error, unexpected tLABEL, expecting '='
      media_type: args[:media_type],
      ^~~~~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:26: syntax error, unexpected tLABEL, expecting '='
      title: args[:title],
      ^~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:27: syntax error, unexpected tLABEL, expecting '='
      artist: args[:artist],
      ^~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:28: syntax error, unexpected tLABEL, expecting '='
      album: args[:album],
      ^~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:29: syntax error, unexpected tLABEL, expecting '='
      year: args[:year],
      ^~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tLABEL, expecting '='
      album_art_origin: args[:album_art_origin],
      ^~~~~~~~~~~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:32: syntax error, unexpected tLABEL, expecting '='
      user_id: "1"
      ^~~~~~~~
/home/gigi/Code/Current/playsette/api/app/graphql/resolvers/create_track.rb:33: syntax error, unexpected ')', expecting keyword_end
    )
    ^):
  
app/graphql/resolvers/create_track.rb:24: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/resolvers/create_track.rb:25: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:26: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:27: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:28: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:29: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:30: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:32: syntax error, unexpected tLABEL, expecting '='
app/graphql/resolvers/create_track.rb:33: syntax error, unexpected ')', expecting keyword_end
app/graphql/types/mutation_type.rb:8:in `block in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-09-28 02:24:53 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  )\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation", "graphql"=>{"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  )\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation"}}
Completed 200 OK in 28ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-28 02:25:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  ) {\n    title\n  }\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation", "graphql"=>{"query"=>"mutation CreateTrackMutation {\n  create_track(\n    album: \"Cosmos, Astrid and Me - 33 Brewer Street\",\n    album_art_origin: \"https://f4.bcbits.com/img/a3792521648_2.jpg\",\n    artist: \"Grabbing Clouds Records and Tapes\",\n    title: \"Cosmos, Don't Wake Me\",\n    year: \"2017\",\n    media_query_url: \"https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/\",\n    media_url: \"https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998\",\n    url: \"https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2\",\n    service: \"Bandcamp\",\n    media_type: \"audio\"\n  ) {\n    title\n  }\n}", "variables"=>nil, "operationName"=>"CreateTrackMutation"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.8ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "album_art_origin", "media_query_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) RETURNING "id"[0m  [["url", "https://grabbingclouds.bandcamp.com/track/cosmos-dont-wake-me-2"], ["title", "Cosmos, Don't Wake Me"], ["artist", "Grabbing Clouds Records and Tapes"], ["album", "Cosmos, Astrid and Me - 33 Brewer Street"], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-09-28 06:25:06.340387"], ["updated_at", "2018-09-28 06:25:06.340387"], ["media_url", "https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538201978&t=b51dc6153c86aef055e7ae285fca4ae0989e0c4d&token=1538201978_b94d86a0ebebb242fb6bf9d78730def1e6a3f998"], ["user_id", 1], ["year", "2017"], ["album_art_origin", "https://f4.bcbits.com/img/a3792521648_2.jpg"], ["media_query_url", "https://bandcamp.com/EmbeddedPlayer/v=2/track=3368595737/size=large/tracklist=false/artwork=small/"]]
  [1m[36mActiveStorage::Attachment Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 1], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (3.0ms) [0m[32mUploaded file to key: HZHZsB4iMnJUvLAuBTZzSkE3 (checksum: Y3OOaw8zVwgz9YCzLEugsQ==)[0m
  [1m[36mActiveStorage::Blob Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "HZHZsB4iMnJUvLAuBTZzSkE3"], ["filename", "1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes.png"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 42067], ["checksum", "Y3OOaw8zVwgz9YCzLEugsQ=="], ["created_at", "2018-09-28 06:25:06.684307"]]
  [1m[36mActiveStorage::Attachment Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 1], ["blob_id", 1], ["created_at", "2018-09-28 06:25:06.696307"]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 AND "users"."id" != $2 LIMIT $3[0m  [["username", "egpavelka"], ["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-09-28 06:25:06.700121"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png"], ["id", 1]]
  [1m[36mTrack Update (0.2ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-09-28 06:25:06.697781"], ["id", 1]]
  [1m[35m (19.7ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 7c67ebce-f49b-4d4a-b8af-04f0e37eaf40) to Async(default) with arguments: #<GlobalID:0x00007f96584143f8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
Completed 200 OK in 565ms (Views: 0.2ms | ActiveRecord: 34.2ms)


  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c67ebce-f49b-4d4a-b8af-04f0e37eaf40] Performing ActiveStorage::AnalyzeJob (Job ID: 7c67ebce-f49b-4d4a-b8af-04f0e37eaf40) from Async(default) with arguments: #<GlobalID:0x00007f9658350278 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c67ebce-f49b-4d4a-b8af-04f0e37eaf40] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c67ebce-f49b-4d4a-b8af-04f0e37eaf40]   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c67ebce-f49b-4d4a-b8af-04f0e37eaf40]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c67ebce-f49b-4d4a-b8af-04f0e37eaf40]   [1m[35m (28.5ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [7c67ebce-f49b-4d4a-b8af-04f0e37eaf40] Performed ActiveStorage::AnalyzeJob (Job ID: 7c67ebce-f49b-4d4a-b8af-04f0e37eaf40) from Async(default) in 45.98ms
Started POST "/graphql" for ::1 at 2018-09-28 02:25:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-28 02:25:12 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjhUMDY6MzA6MTIuNzUxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1d6126dd2febef6e60f08d04c5fb9023d24e2a/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjhUMDY6MzA6MTIuNzUxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1d6126dd2febef6e60f08d04c5fb9023d24e2a/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 4ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjhUMDY6MzA6MTIuNzUxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1d6126dd2febef6e60f08d04c5fb9023d24e2a/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-28 02:25:12 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjhUMDY6MzA6MTIuNzUxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1d6126dd2febef6e60f08d04c5fb9023d24e2a", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 02:57:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 49ms (Views: 0.3ms | ActiveRecord: 4.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 02:57:31 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 21ms (ActiveRecord: 3.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 02:57:31 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:00:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:00:04 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:01:22 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:01:22 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDI6MzEuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--fd9a198415ad56e8d59279691d70d42b1ddc8158", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:02:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:02:46 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:02:46 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:06:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:06:34 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:07:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:07:04 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MDc6NDYuOTY1WiIsInB1ciI6ImJsb2Jfa2V5In19--fbf4785467d4e9e146504c259095dc4684209dbd", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:08:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 46ms (Views: 0.2ms | ActiveRecord: 4.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:08:45 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 20ms (ActiveRecord: 4.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:08:45 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:09:04 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:09:04 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:09:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:09:06 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:11:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:11:12 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:11:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    media_url\n    service\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:11:30 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:13:01 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:13:01 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTM6NDUuNTQxWiIsInB1ciI6ImJsb2Jfa2V5In19--985c391cc75cf4f672080637cb8660e7663a3f6b", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:14:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:14:23 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:14:24 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:14:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:14:52 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:15:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:15:11 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MTk6MjMuODYzWiIsInB1ciI6ImJsb2Jfa2V5In19--c8615fd9330a262497bec5c294fa3af9d3663210", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:19:45 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 500 Internal Server Error in 571ms (ActiveRecord: 5.2ms)


  
NoMethodError (undefined method `attributes' for nil:NilClass):
  
app/services/bandcamp_service.rb:59:in `xpath_meta_property'
app/services/bandcamp_service.rb:28:in `call'
app/services/bandcamp_service.rb:9:in `initialize'
app/models/track.rb:30:in `new'
app/models/track.rb:30:in `rescue in check_bandcamp'
app/models/track.rb:25:in `check_bandcamp'
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-09-29 03:23:33 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538292215&t=c319cebf9d7ffd0e2993cd4e12e3f464a7bc27c9&token=1538292215_1e22827e870587d00f9d71880f6b158c04e68aa3"], ["updated_at", "2018-09-29 07:23:35.633171"], ["id", 1]]
  [1m[35m (71.9ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 2365ms (Views: 0.3ms | ActiveRecord: 78.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:23:35 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mjg6MzUuNzYwWiIsInB1ciI6ImJsb2Jfa2V5In19--24c833e1431137abc404d4235ce505adb0d9efd1/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mjg6MzUuNzYwWiIsInB1ciI6ImJsb2Jfa2V5In19--24c833e1431137abc404d4235ce505adb0d9efd1/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 19ms (ActiveRecord: 2.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mjg6MzUuNzYwWiIsInB1ciI6ImJsb2Jfa2V5In19--24c833e1431137abc404d4235ce505adb0d9efd1/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:23:35 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mjg6MzUuNzYwWiIsInB1ciI6ImJsb2Jfa2V5In19--24c833e1431137abc404d4235ce505adb0d9efd1", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:24:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 585ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mjg6MzUuNzYwWiIsInB1ciI6ImJsb2Jfa2V5In19--24c833e1431137abc404d4235ce505adb0d9efd1/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:24:57 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mjg6MzUuNzYwWiIsInB1ciI6ImJsb2Jfa2V5In19--24c833e1431137abc404d4235ce505adb0d9efd1", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:28:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 908ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:28:38 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.8ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MzM6MzguODMyWiIsInB1ciI6ImJsb2Jfa2V5In19--b9fdeee19920e818e1269c63eae5098a8f8b2c1d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MzM6MzguODMyWiIsInB1ciI6ImJsb2Jfa2V5In19--b9fdeee19920e818e1269c63eae5098a8f8b2c1d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MzM6MzguODMyWiIsInB1ciI6ImJsb2Jfa2V5In19--b9fdeee19920e818e1269c63eae5098a8f8b2c1d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:28:38 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MzM6MzguODMyWiIsInB1ciI6ImJsb2Jfa2V5In19--b9fdeee19920e818e1269c63eae5098a8f8b2c1d", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (21.7ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 23ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:29:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 795ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MzM6MzguODMyWiIsInB1ciI6ImJsb2Jfa2V5In19--b9fdeee19920e818e1269c63eae5098a8f8b2c1d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:29:16 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6MzM6MzguODMyWiIsInB1ciI6ImJsb2Jfa2V5In19--b9fdeee19920e818e1269c63eae5098a8f8b2c1d", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:33:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 678ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:33:43 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:33:43 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:34:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 902ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:34:56 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.8ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:36:46 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1078ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:36:47 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:37:15 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 928ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:37:16 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6Mzg6NDMuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--4026c25270b7aaaa2cc2e545c2902b82625001ae", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:38:49 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1228ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:38:50 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:38:50 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (6.0ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 7ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:39:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1099ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:39:56 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:40:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1047ms (Views: 0.2ms | ActiveRecord: 1.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:40:06 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:40:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1249ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:41:01 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:42:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1230ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:42:07 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (1.0ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:42:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (29.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1263ms (Views: 0.2ms | ActiveRecord: 29.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:42:53 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (80.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 81ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:43:25 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1311ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:43:26 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDM6NTAuNjk2WiIsInB1ciI6ImJsb2Jfa2V5In19--0c532f56e2b5b152ff3a0f93b2e12b69442243a8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:43:51 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1026ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:43:52 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:43:52 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:45:55 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1076ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:45:56 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (90.9ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 92ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:46:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 780ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:46:41 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:47:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 734ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:47:36 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:48:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 843ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:48:03 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NDg6NTIuOTYxWiIsInB1ciI6ImJsb2Jfa2V5In19--6248c10658bd7755da9898f351fd1988716a77b0", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:49:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 759ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:49:18 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:49:18 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:49:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 738ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:49:33 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:50:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 704ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:50:26 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:50:50 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 637ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:50:51 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:51:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 698ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:51:06 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:52:26 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 932ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:52:27 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:53:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 997ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:53:04 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTQ6MTguNjk0WiIsInB1ciI6ImJsb2Jfa2V5In19--fe3af0bc80e7f87fe77a0b1ffdd90c77be5bfea7", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:54:17 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1261ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:54:18 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:54:18 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:55:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1103ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:55:01 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (87.8ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 89ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:55:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1054ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:56:00 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:56:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1189ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:56:45 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:57:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 919ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:57:37 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (86.8ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 87ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:58:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 952ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:58:58 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDc6NTk6MTguNTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--9411036d09f1b967bb3e7aeb7f8a80109c2da6e8", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:59:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1008ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-09-29 03:59:25 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:59:25 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 03:59:41 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 970ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 03:59:42 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 04:00:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1078ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 04:00:08 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (1.9ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-09-29 04:01:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 844ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-09-29 04:01:31 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMDktMjlUMDg6MDQ6MjUuMDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--45b1cd192966d7c207e9d27acd8dae956d3bf771", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (1.1ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 4ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:10:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.5ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1538979061&t=0a0ad9e798e41b2c711b067bcb34c63773cd116e&token=1538979061_9f385e93ecea47d1df5b54bc18f5a073cdf91aa8"], ["updated_at", "2018-10-07 06:11:01.431761"], ["id", 1]]
  [1m[35m (38.4ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 1982ms (Views: 0.2ms | ActiveRecord: 40.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 02:11:01 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MTY6MDEuNTE1WiIsInB1ciI6ImJsb2Jfa2V5In19--d25ab8a92a004598cd906b40932e3b16cab30593/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MTY6MDEuNTE1WiIsInB1ciI6ImJsb2Jfa2V5In19--d25ab8a92a004598cd906b40932e3b16cab30593/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MTY6MDEuNTE1WiIsInB1ciI6ImJsb2Jfa2V5In19--d25ab8a92a004598cd906b40932e3b16cab30593/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:11:01 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MTY6MDEuNTE1WiIsInB1ciI6ImJsb2Jfa2V5In19--d25ab8a92a004598cd906b40932e3b16cab30593", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (48.7ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 49ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:14:02 -0400
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1111ms (Views: 0.3ms | ActiveRecord: 3.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MTY6MDEuNTE1WiIsInB1ciI6ImJsb2Jfa2V5In19--d25ab8a92a004598cd906b40932e3b16cab30593/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:14:04 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MTY6MDEuNTE1WiIsInB1ciI6ImJsb2Jfa2V5In19--d25ab8a92a004598cd906b40932e3b16cab30593", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 55ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:20:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 946ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:30:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 970ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:31:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1037ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 02:31:43 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (64.9ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MzY6NDMuNjI3WiIsInB1ciI6ImJsb2Jfa2V5In19--66795a3ef46e4e3a0cd385ce7c3cf0f9dfe4e336/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MzY6NDMuNjI3WiIsInB1ciI6ImJsb2Jfa2V5In19--66795a3ef46e4e3a0cd385ce7c3cf0f9dfe4e336/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 105ms (ActiveRecord: 6.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MzY6NDMuNjI3WiIsInB1ciI6ImJsb2Jfa2V5In19--66795a3ef46e4e3a0cd385ce7c3cf0f9dfe4e336/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:31:43 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6MzY6NDMuNjI3WiIsInB1ciI6ImJsb2Jfa2V5In19--66795a3ef46e4e3a0cd385ce7c3cf0f9dfe4e336", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:38:00 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 644ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 02:38:00 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:38:00 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (5.1ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 6ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:42:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 862ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:42:22 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:42:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 799ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:42:45 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:42:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 790ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:42:58 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDM6MDAuNzYzWiIsInB1ciI6ImJsb2Jfa2V5In19--e706756517f832aeedfa13a9f2979e071fda5e9f", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:44:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 827ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 02:44:57 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDk6NTcuOTc4WiIsInB1ciI6ImJsb2Jfa2V5In19--7fe84d291e6eb06eaba67375a1548bf7e5ba4736/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDk6NTcuOTc4WiIsInB1ciI6ImJsb2Jfa2V5In19--7fe84d291e6eb06eaba67375a1548bf7e5ba4736/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDk6NTcuOTc4WiIsInB1ciI6ImJsb2Jfa2V5In19--7fe84d291e6eb06eaba67375a1548bf7e5ba4736/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:44:58 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NDk6NTcuOTc4WiIsInB1ciI6ImJsb2Jfa2V5In19--7fe84d291e6eb06eaba67375a1548bf7e5ba4736", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:51:42 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 967ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 02:51:43 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NTY6NDMuOTEyWiIsInB1ciI6ImJsb2Jfa2V5In19--a366e52ab80f8d15efd9f87d0d3d24b87157e50c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NTY6NDMuOTEyWiIsInB1ciI6ImJsb2Jfa2V5In19--a366e52ab80f8d15efd9f87d0d3d24b87157e50c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 3ms (ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NTY6NDMuOTEyWiIsInB1ciI6ImJsb2Jfa2V5In19--a366e52ab80f8d15efd9f87d0d3d24b87157e50c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:51:43 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NTY6NDMuOTEyWiIsInB1ciI6ImJsb2Jfa2V5In19--a366e52ab80f8d15efd9f87d0d3d24b87157e50c", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:56:05 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 899ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NTY6NDMuOTEyWiIsInB1ciI6ImJsb2Jfa2V5In19--a366e52ab80f8d15efd9f87d0d3d24b87157e50c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:56:06 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDY6NTY6NDMuOTEyWiIsInB1ciI6ImJsb2Jfa2V5In19--a366e52ab80f8d15efd9f87d0d3d24b87157e50c", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:57:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 730ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 02:57:11 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:57:11 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:58:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1039ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:58:22 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (66.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 67ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 02:59:02 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1053ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 02:59:03 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 03:00:32 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 729ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 03:00:33 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 03:00:59 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 691ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 03:01:00 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDI6MTEuNzc1WiIsInB1ciI6ImJsb2Jfa2V5In19--ad17abe0b2a60fd93c462c698d9a863d0b449f95", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (6.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 8ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 03:04:13 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 812ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-10-07 03:04:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 862ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-07 03:04:30 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDk6MzAuMzAwWiIsInB1ciI6ImJsb2Jfa2V5In19--ff063f0b5f69e7706671a9f9b3002d1262c4a01e/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDk6MzAuMzAwWiIsInB1ciI6ImJsb2Jfa2V5In19--ff063f0b5f69e7706671a9f9b3002d1262c4a01e/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 2ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDk6MzAuMzAwWiIsInB1ciI6ImJsb2Jfa2V5In19--ff063f0b5f69e7706671a9f9b3002d1262c4a01e/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 03:04:30 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDk6MzAuMzAwWiIsInB1ciI6ImJsb2Jfa2V5In19--ff063f0b5f69e7706671a9f9b3002d1262c4a01e", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-07 03:08:06 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1023ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDk6MzAuMzAwWiIsInB1ciI6ImJsb2Jfa2V5In19--ff063f0b5f69e7706671a9f9b3002d1262c4a01e/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-07 03:08:07 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDdUMDc6MDk6MzAuMzAwWiIsInB1ciI6ImJsb2Jfa2V5In19--ff063f0b5f69e7706671a9f9b3002d1262c4a01e", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-08 21:45:51 -0400
  [1m[35m (28.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (84.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (26.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (46.1ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1539135955&t=cb608bfcc813ea5e8ebe047ddbec07ffd414e4ad&token=1539135955_5bf4c8330c07cd8ba990f87fc6621e9e35d7aef2"], ["updated_at", "2018-10-09 01:45:56.144237"], ["id", 1]]
  [1m[35m (62.0ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 3161ms (Views: 0.3ms | ActiveRecord: 257.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-08 21:45:56 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (193.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (769.5ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDE6NTA6NTYuNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--d9449c70a325f0e52e0a9c82575c62550c6ae24d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDE6NTA6NTYuNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--d9449c70a325f0e52e0a9c82575c62550c6ae24d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 1075ms (ActiveRecord: 197.2ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDE6NTA6NTYuNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--d9449c70a325f0e52e0a9c82575c62550c6ae24d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-08 21:45:57 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDE6NTA6NTYuNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--d9449c70a325f0e52e0a9c82575c62550c6ae24d", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (120.0ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 121ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-08 22:07:50 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 772ms (Views: 0.4ms | ActiveRecord: 4.7ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-08 22:07:51 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (4.0ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MTI6NTEuOTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--3a19d9b92483716d61b554228edfeb2dfe4f6d8d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MTI6NTEuOTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--3a19d9b92483716d61b554228edfeb2dfe4f6d8d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 34ms (ActiveRecord: 4.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MTI6NTEuOTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--3a19d9b92483716d61b554228edfeb2dfe4f6d8d/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-08 22:07:52 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MTI6NTEuOTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--3a19d9b92483716d61b554228edfeb2dfe4f6d8d", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (8.0ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 9ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-08 22:31:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1052ms (Views: 0.3ms | ActiveRecord: 1.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-08 22:31:28 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MzY6MjguNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1832ddf056750b8cbd267aa991af9895f2985c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MzY6MjguNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1832ddf056750b8cbd267aa991af9895f2985c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 4ms (ActiveRecord: 0.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MzY6MjguNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1832ddf056750b8cbd267aa991af9895f2985c/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-08 22:31:28 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMDlUMDI6MzY6MjguNDkzWiIsInB1ciI6ImJsb2Jfa2V5In19--fd1832ddf056750b8cbd267aa991af9895f2985c", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-22 16:37:03 -0400
  [1m[35m (27.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (84.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (26.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (10.5ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/57b176f44829455fcd3c3b9f097ac431/mp3-128/3368595737?p=0&ts=1540327028&t=7765995b3fd9eb10bed774493f613dc347881106&token=1540327028_852ff09d08d5eb3de870293d61afdea1c7759b00"], ["updated_at", "2018-10-22 20:37:08.241623"], ["id", 1]]
  [1m[35m (17.7ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 2762ms (Views: 0.3ms | ActiveRecord: 178.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png" for ::1 at 2018-10-22 16:37:08 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
  [1m[36mActiveStorage::Blob Load (26.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (101.8ms) [0m[34mGenerated URL for file at key: HZHZsB4iMnJUvLAuBTZzSkE3 (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMjJUMjA6NDI6MDguNDg0WiIsInB1ciI6ImJsb2Jfa2V5In19--d73d0250c5565475004493a394b972773e1a3078/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMjJUMjA6NDI6MDguNDg0WiIsInB1ciI6ImJsb2Jfa2V5In19--d73d0250c5565475004493a394b972773e1a3078/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png
Completed 302 Found in 220ms (ActiveRecord: 31.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMjJUMjA6NDI6MDguNDg0WiIsInB1ciI6ImJsb2Jfa2V5In19--d73d0250c5565475004493a394b972773e1a3078/1_Cosmos,%20Don't%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%221_Cosmos%252C+Don%2527t+Wake+Me_Grabbing+Clouds+Records+and+Tapes.png%22%3B+filename%2A%3DUTF-8%27%271_Cosmos%252C%2520Don%2527t%2520Wake%2520Me_Grabbing%2520Clouds%2520Records%2520and%2520Tapes.png" for ::1 at 2018-10-22 16:37:08 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"1_Cosmos%2C Don%27t Wake Me_Grabbing Clouds Records and Tapes.png\"; filename*=UTF-8''1_Cosmos%2C%20Don%27t%20Wake%20Me_Grabbing%20Clouds%20Records%20and%20Tapes.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFJV2toYWMwSTBhVTF1U2xWMlRFRjFRbFJhZWxOclJUTUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTAtMjJUMjA6NDI6MDguNDg0WiIsInB1ciI6ImJsb2Jfa2V5In19--d73d0250c5565475004493a394b972773e1a3078", "filename"=>"1_Cosmos, Don't Wake Me_Grabbing Clouds Records and Tapes"}
[36m  Disk Storage (31.5ms) [0m[34mDownloaded file from key: HZHZsB4iMnJUvLAuBTZzSkE3[0m
Completed 200 OK in 32ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-10-26 05:42:17 -0400
  
PG::ConnectionBad (could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/run/postgresql/.s.PGSQL.5432"?
):
  
pg (1.1.3) lib/pg.rb:56:in `initialize'
pg (1.1.3) lib/pg.rb:56:in `new'
pg (1.1.3) lib/pg.rb:56:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:684:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:215:in `initialize'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `new'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `postgresql_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:809:in `new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:853:in `checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:832:in `try_to_checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:793:in `acquire_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:521:in `checkout'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:380:in `connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:1008:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:118:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:90:in `connection'
activerecord (5.2.1) lib/active_record/migration.rb:554:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-10-26 18:07:34 -0400
  
ActiveRecord::NoDatabaseError (FATAL:  role "gigi" does not exist
):
  
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:688:in `rescue in connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:683:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:215:in `initialize'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `new'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `postgresql_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:809:in `new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:853:in `checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:832:in `try_to_checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:793:in `acquire_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:521:in `checkout'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:380:in `connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:1008:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:118:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:90:in `connection'
activerecord (5.2.1) lib/active_record/migration.rb:554:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
  [1m[35m (0.4ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE DATABASE "playsette_development" ENCODING = 'unicode'[0m
  [1m[35m (428.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (151.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180617093213)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (90.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "email" character varying, "name" character varying, "password_digest" character varying, "activated" boolean, "activated_at" timestamp, "activation_digest" character varying, "bio" text, "admin" boolean, "reset_digest" character varying, "reset_sent_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180617093213"]]
  [1m[35m (8.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateTracks (20180617094622)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (74.8ms)[0m  [1m[35mCREATE TABLE "tracks" ("id" bigserial primary key, "source_path" character varying, "title" character varying, "artist" character varying, "album" character varying, "source_service" character varying, "source_service_id" character varying, "media_type" character varying, "submission_type" character varying, "submission_id" bigint, "user_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
)[0m
  [1m[35m (30.7ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_submission_type_and_submission_id" ON "tracks"  ("submission_type", "submission_id")[0m
  [1m[35m (32.1ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180617094622"]]
  [1m[35m (9.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to ChangeTrackColumns (20180711093417)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "source_path" TO "submitted_url"[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "submission_type"[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "submission_id"[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" ADD "media_url" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180711093417"]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveSourceServiceIdFromTracks (20180728072251)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "source_service_id"[0m
  [1m[35m (0.1ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "submitted_url" TO "url"[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180728072251"]]
  [1m[35m (5.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to RenameSourceServiceToService (20180806104409)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "source_service" TO "service"[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180806104409"]]
  [1m[35m (6.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddYearToTrack (20180806110551)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" ADD "year" integer[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180806110551"]]
  [1m[35m (7.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to ChangeUserReferenceOnTrack (20180806112719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "user_id"[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "tracks" ADD "user_id" bigint[0m
  [1m[35m (40.2ms)[0m  [1m[35mCREATE  INDEX  "index_tracks_on_user_id" ON "tracks"  ("user_id")[0m
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "tracks" ADD CONSTRAINT "fk_rails_a9ae83adcc"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180806112719"]]
  [1m[35m (7.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to ChangeYearToStringOnTrack (20180809135505)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "tracks" DROP COLUMN "year"[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" ADD "year" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180809135505"]]
  [1m[35m (7.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateActiveStorageTables (20180812123042)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (66.5ms)[0m  [1m[35mCREATE TABLE "active_storage_blobs" ("id" bigserial primary key, "key" character varying NOT NULL, "filename" character varying NOT NULL, "content_type" character varying, "metadata" text, "byte_size" bigint NOT NULL, "checksum" character varying NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (41.3ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_blobs_on_key" ON "active_storage_blobs"  ("key")[0m
  [1m[35m (67.8ms)[0m  [1m[35mCREATE TABLE "active_storage_attachments" ("id" bigserial primary key, "name" character varying NOT NULL, "record_type" character varying NOT NULL, "record_id" bigint NOT NULL, "blob_id" bigint NOT NULL, "created_at" timestamp NOT NULL)[0m
  [1m[35m (31.1ms)[0m  [1m[35mCREATE  INDEX  "index_active_storage_attachments_on_blob_id" ON "active_storage_attachments"  ("blob_id")[0m
  [1m[35m (31.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_active_storage_attachments_uniqueness" ON "active_storage_attachments"  ("record_type", "record_id", "name", "blob_id")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180812123042"]]
  [1m[35m (8.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddArtworkUrlToTrack (20180812125814)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "tracks" ADD "artwork_url" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180812125814"]]
  [1m[35m (8.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddAlbumArtUrlToTrack (20180816065719)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "artwork_url" TO "album_art_origin"[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" ADD "album_art_url" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180816065719"]]
  [1m[35m (5.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddMediaEndpointToTrack (20180824100425)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "tracks" ADD "media_endpoint" character varying[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180824100425"]]
  [1m[35m (8.9ms)[0m  [1m[35mCOMMIT[0m
Migrating to RenameMediaEndpointOnTrackToMediaQueryUrl (20180928004019)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "tracks" RENAME COLUMN "media_endpoint" TO "media_query_url"[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180928004019"]]
  [1m[35m (6.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-10-27 02:25:54.381206"], ["updated_at", "2018-10-27 02:25:54.381206"]]
  [1m[35m (11.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7899275574939970200)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2018-10-26 22:26:12 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 25ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for ::1 at 2018-10-27 02:02:36 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 31ms (Views: 0.3ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for ::1 at 2018-10-28 20:09:53 -0400
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 33ms (Views: 0.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for ::1 at 2018-10-28 20:14:50 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 32ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for ::1 at 2018-10-29 00:09:04 -0400
  [1m[35m (40.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (486.0ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 580ms (Views: 0.3ms | ActiveRecord: 528.0ms)


Started POST "/graphql" for ::1 at 2018-10-29 00:22:05 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for ::1 at 2018-10-29 00:26:47 -0400
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 35ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-10-29 00:28:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:32:48 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:33:03 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LoginMutation", "variables"=>{"username"=>"egpavelka", "email"=>"", "name"=>"", "password"=>"[FILTERED]"}, "query"=>"mutation LoginMutation($username: String!, $password: String!) {\n  login(username: {username: $username, password: $password}) {\n    token\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (16.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
Completed 200 OK in 178ms (Views: 0.2ms | ActiveRecord: 38.1ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:33:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:33:29 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"egpavelka@gmail.com", "name"=>"grace", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignupMutation", "variables"=>{"username"=>"egpavelka", "email"=>"egpavelka@gmail.com", "name"=>"grace", "password"=>"[FILTERED]"}, "query"=>"mutation SignupMutation($username: String!, $email: String!, $name: String!, $password: String!) {\n  signup(authProvider: {username: {username: $username, password: $password}}, email: $email, name: $name) {\n    id\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "egpavelka"], ["LIMIT", 1]]
  [1m[36mUser Create (36.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "name", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["username", "egpavelka"], ["email", "egpavelka@gmail.com"], ["name", "grace"], ["password_digest", "$2a$10$WEHEHwiYZWdm8NX9nIQYk.GQr8ZY6n6sUcOiW3pFMH/7jHc01lwdO"], ["created_at", "2018-11-03 06:33:29.780725"], ["updated_at", "2018-11-03 06:33:29.780725"]]
  [1m[35m (20.8ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 206ms (Views: 0.2ms | ActiveRecord: 125.4ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:34:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1204ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:35:09 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541313314&t=94771dfea0d02b5944f771109c0c6b5df47bc5ad&token=1541313314_3c3f165566c5cc8ac00089a563cb11c5aabd3101", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Dysphoria", "artist"=>"Blood Sister", "album"=>"Dysphoria 7\"", "year"=>"2015", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3933317229_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541313314&t=94771dfea0d02b5944f771109c0c6b5df47bc5ad&token=1541313314_3c3f165566c5cc8ac00089a563cb11c5aabd3101", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Dysphoria", "artist"=>"Blood Sister", "album"=>"Dysphoria 7\"", "year"=>"2015", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3933317229_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (35.2ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "album_art_origin", "media_query_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) RETURNING "id"[0m  [["url", "http://grabbingclouds.bandcamp.com/track/dysphoria"], ["title", "Dysphoria"], ["artist", "Blood Sister"], ["album", "Dysphoria 7\""], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-11-03 06:35:09.072955"], ["updated_at", "2018-11-03 06:35:09.072955"], ["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541313314&t=94771dfea0d02b5944f771109c0c6b5df47bc5ad&token=1541313314_3c3f165566c5cc8ac00089a563cb11c5aabd3101"], ["user_id", 1], ["year", "2015"], ["album_art_origin", "https://f4.bcbits.com/img/a3933317229_2.jpg"], ["media_query_url", "https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 295ms (ActiveRecord: 37.9ms)


  
MiniMagick::Invalid (You must have ImageMagick or GraphicsMagick installed):
  
app/models/track.rb:43:in `attach_album_art'
app/graphql/resolvers/create_track.rb:20:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-03 02:35:39 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541313314&t=94771dfea0d02b5944f771109c0c6b5df47bc5ad&token=1541313314_3c3f165566c5cc8ac00089a563cb11c5aabd3101", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Dysphoria", "artist"=>"Blood Sister", "album"=>"Dysphoria 7\"", "year"=>"2015", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3933317229_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541313314&t=94771dfea0d02b5944f771109c0c6b5df47bc5ad&token=1541313314_3c3f165566c5cc8ac00089a563cb11c5aabd3101", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Dysphoria", "artist"=>"Blood Sister", "album"=>"Dysphoria 7\"", "year"=>"2015", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3933317229_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.4ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "album_art_origin", "media_query_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) RETURNING "id"[0m  [["url", "http://grabbingclouds.bandcamp.com/track/dysphoria"], ["title", "Dysphoria"], ["artist", "Blood Sister"], ["album", "Dysphoria 7\""], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-11-03 06:35:39.706514"], ["updated_at", "2018-11-03 06:35:39.706514"], ["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541313314&t=94771dfea0d02b5944f771109c0c6b5df47bc5ad&token=1541313314_3c3f165566c5cc8ac00089a563cb11c5aabd3101"], ["user_id", 1], ["year", "2015"], ["album_art_origin", "https://f4.bcbits.com/img/a3933317229_2.jpg"], ["media_query_url", "https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 171ms (ActiveRecord: 1.0ms)


  
MiniMagick::Invalid (You must have ImageMagick or GraphicsMagick installed):
  
app/models/track.rb:43:in `attach_album_art'
app/graphql/resolvers/create_track.rb:20:in `call'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-03 02:47:45 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 61ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:47:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1206ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:48:11 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541314093&t=e74f38383e1e2a2b745ae03383ae5f6dfbb6a816&token=1541314093_f33e85e1a17be538845a4892a72bead300604581", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Dysphoria", "artist"=>"Blood Sister", "album"=>"Dysphoria 7\"", "year"=>"2015", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3933317229_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"http://grabbingclouds.bandcamp.com/track/dysphoria", "service"=>"Bandcamp", "mediaUrl"=>"https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541314093&t=e74f38383e1e2a2b745ae03383ae5f6dfbb6a816&token=1541314093_f33e85e1a17be538845a4892a72bead300604581", "mediaQueryUrl"=>"https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/", "mediaType"=>"audio", "title"=>"Dysphoria", "artist"=>"Blood Sister", "album"=>"Dysphoria 7\"", "year"=>"2015", "albumArtOrigin"=>"https://f4.bcbits.com/img/a3933317229_2.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (0.7ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "album", "service", "media_type", "created_at", "updated_at", "media_url", "user_id", "year", "album_art_origin", "media_query_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) RETURNING "id"[0m  [["url", "http://grabbingclouds.bandcamp.com/track/dysphoria"], ["title", "Dysphoria"], ["artist", "Blood Sister"], ["album", "Dysphoria 7\""], ["service", "Bandcamp"], ["media_type", "audio"], ["created_at", "2018-11-03 06:48:11.821614"], ["updated_at", "2018-11-03 06:48:11.821614"], ["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541314093&t=e74f38383e1e2a2b745ae03383ae5f6dfbb6a816&token=1541314093_f33e85e1a17be538845a4892a72bead300604581"], ["user_id", 1], ["year", "2015"], ["album_art_origin", "https://f4.bcbits.com/img/a3933317229_2.jpg"], ["media_query_url", "https://bandcamp.com/EmbeddedPlayer/v=2/track=1079575302/size=large/tracklist=false/artwork=small/"]]
  [1m[36mActiveStorage::Attachment Load (23.6ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 3], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (3.5ms) [0m[32mUploaded file to key: 8mznPCpmjkSkhzrfu3k36rqx (checksum: dtvionxqP0PENQI95HS1IQ==)[0m
  [1m[36mActiveStorage::Blob Create (32.1ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "8mznPCpmjkSkhzrfu3k36rqx"], ["filename", "3_Dysphoria_Blood Sister.png"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 44290], ["checksum", "dtvionxqP0PENQI95HS1IQ=="], ["created_at", "2018-11-03 06:48:12.304298"]]
  [1m[36mActiveStorage::Attachment Create (5.5ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 3], ["blob_id", 1], ["created_at", "2018-11-03 06:48:12.366474"]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 AND "users"."id" != $2 LIMIT $3[0m  [["username", "egpavelka"], ["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-11-03 06:48:12.375203"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png"], ["id", 3]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-11-03 06:48:12.372872"], ["id", 3]]
  [1m[35m (25.1ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 26d29119-d2eb-4af8-afba-44e8e85ad36f) to Async(default) with arguments: #<GlobalID:0x0000562254245cf8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
Completed 200 OK in 705ms (Views: 0.4ms | ActiveRecord: 99.8ms)


  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [26d29119-d2eb-4af8-afba-44e8e85ad36f] Performing ActiveStorage::AnalyzeJob (Job ID: 26d29119-d2eb-4af8-afba-44e8e85ad36f) from Async(default) with arguments: #<GlobalID:0x00005622541c0738 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/1>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [26d29119-d2eb-4af8-afba-44e8e85ad36f] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [26d29119-d2eb-4af8-afba-44e8e85ad36f]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [26d29119-d2eb-4af8-afba-44e8e85ad36f]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":350,\"height\":350,\"analyzed\":true}"], ["id", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [26d29119-d2eb-4af8-afba-44e8e85ad36f]   [1m[35m (76.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [26d29119-d2eb-4af8-afba-44e8e85ad36f] Performed ActiveStorage::AnalyzeJob (Job ID: 26d29119-d2eb-4af8-afba-44e8e85ad36f) from Async(default) in 189.02ms
Started POST "/graphql" for ::1 at 2018-11-03 02:48:18 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 938ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-03 02:48:19 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDY6NTM6MTkuNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--180dc42c97e452f839fe51f38f2b758d5f916e51/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDY6NTM6MTkuNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--180dc42c97e452f839fe51f38f2b758d5f916e51/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 3ms (ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDY6NTM6MTkuNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--180dc42c97e452f839fe51f38f2b758d5f916e51/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-03 02:48:19 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDY6NTM6MTkuNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--180dc42c97e452f839fe51f38f2b758d5f916e51", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:48:37 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 950ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:49:08 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1598ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:49:14 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1323ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:49:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 959ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDY6NTM6MTkuNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--180dc42c97e452f839fe51f38f2b758d5f916e51/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-03 02:49:28 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDY6NTM6MTkuNTI2WiIsInB1ciI6ImJsb2Jfa2V5In19--180dc42c97e452f839fe51f38f2b758d5f916e51", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:49:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1317ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/" for ::1 at 2018-11-03 02:56:42 -0400
Started GET "/graphiql" for ::1 at 2018-11-03 02:56:42 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (860.2ms)
Completed 200 OK in 901ms (Views: 890.4ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-2fbb932618633e58c4f72482da2714cb25f2c9fc91e26fb33df63a1e5b47f74c.css" for ::1 at 2018-11-03 02:56:43 -0400
Started GET "/assets/graphiql/rails/application-09ecfeeb9885e7c9d9529f06c4360e92312b9c15f455df0e6d29ed6098ae85ee.js" for ::1 at 2018-11-03 02:56:43 -0400
Started POST "/graphql" for ::1 at 2018-11-03 02:56:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 88ms (Views: 23.4ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-11-03 02:56:44 -0400
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-11-03 02:59:34 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 02:59:52 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    artist\n  }\n}", "variables"=>nil}}
Completed 200 OK in 835ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:00:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil}}
Completed 200 OK in 865ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:00:36 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil}}
Completed 200 OK in 951ms (Views: 1.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-11-03 03:06:11 -0400
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.11/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:06:12 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 91ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:06:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil}}
Completed 200 OK in 847ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:06:23 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  new_track(url:\"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\") {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil}}
Completed 200 OK in 790ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:06:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"NewTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"", "mediaUrl"=>"", "mediaQueryUrl"=>"", "mediaType"=>"", "title"=>"", "artist"=>"", "album"=>"", "year"=>"", "albumArtOrigin"=>""}, "query"=>"mutation NewTrackMutation($url: String!) {\n  new_track(url: $url) {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n    __typename\n  }\n}\n"}}
Completed 200 OK in 1402ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:07:21 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"Soundcloud", "mediaUrl"=>nil, "mediaQueryUrl"=>"https://api.soundcloud.com/tracks/185931673/stream", "mediaType"=>"audio", "title"=>"Terrible Thing", "artist"=>"AG & Brad Gordon", "album"=>nil, "year"=>"", "albumArtOrigin"=>"https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"Soundcloud", "mediaUrl"=>nil, "mediaQueryUrl"=>"https://api.soundcloud.com/tracks/185931673/stream", "mediaType"=>"audio", "title"=>"Terrible Thing", "artist"=>"AG & Brad Gordon", "album"=>nil, "year"=>"", "albumArtOrigin"=>"https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:07:30 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"Soundcloud", "mediaUrl"=>nil, "mediaQueryUrl"=>"https://api.soundcloud.com/tracks/185931673/stream", "mediaType"=>"audio", "title"=>"Terrible Thing", "artist"=>"AG & Brad Gordon", "album"=>nil, "year"=>"", "albumArtOrigin"=>"https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateTrackMutation", "variables"=>{"url"=>"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing", "service"=>"Soundcloud", "mediaUrl"=>nil, "mediaQueryUrl"=>"https://api.soundcloud.com/tracks/185931673/stream", "mediaType"=>"audio", "title"=>"Terrible Thing", "artist"=>"AG & Brad Gordon", "album"=>nil, "year"=>"", "albumArtOrigin"=>"https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg"}, "query"=>"mutation CreateTrackMutation($url: String!, $service: String!, $mediaUrl: String!, $mediaQueryUrl: String!, $mediaType: String!, $title: String!, $artist: String!, $album: String, $year: String, $albumArtOrigin: String) {\n  create_track(url: $url, service: $service, media_type: $mediaType, media_url: $mediaUrl, media_query_url: $mediaQueryUrl, title: $title, artist: $artist, album: $album, year: $year, album_art_origin: $albumArtOrigin) {\n    url\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:10:35 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_track(\n      url: \"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\",\n      service: \"Soundcloud\",\n      media_url: null,\n      media_query_url: \"https://api.soundcloud.com/tracks/185931673/stream\",\n      media_type: \"audio\",\n      title: \"Terrible Thing\",\n      artist: \"AG & Brad Gordon\",\n      album: null,\n      year: \"\",\n      album_art_origin: \"https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg\") {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_track(\n      url: \"https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing\",\n      service: \"Soundcloud\",\n      media_url: null,\n      media_query_url: \"https://api.soundcloud.com/tracks/185931673/stream\",\n      media_type: \"audio\",\n      title: \"Terrible Thing\",\n      artist: \"AG & Brad Gordon\",\n      album: null,\n      year: \"\",\n      album_art_origin: \"https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg\") {\n    url\n    service\n    media_url\n    media_query_url\n    media_type\n    title\n    artist\n    album\n    year\n    album_art_origin\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Create (1.2ms)[0m  [1m[32mINSERT INTO "tracks" ("url", "title", "artist", "service", "media_type", "created_at", "updated_at", "user_id", "year", "album_art_origin", "media_query_url") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING "id"[0m  [["url", "https://soundcloud.com/thebradgordon/ag-the-rescues-and-brad-gordon-terrible-thing"], ["title", "Terrible Thing"], ["artist", "AG & Brad Gordon"], ["service", "Soundcloud"], ["media_type", "audio"], ["created_at", "2018-11-03 07:10:35.320281"], ["updated_at", "2018-11-03 07:10:35.320281"], ["user_id", 1], ["year", ""], ["album_art_origin", "https://i1.sndcdn.com/artworks-000429878301-onl3m0-t500x500.jpg"], ["media_query_url", "https://api.soundcloud.com/tracks/185931673/stream"]]
  [1m[36mActiveStorage::Attachment Load (1.2ms)[0m  [1m[34mSELECT  "active_storage_attachments".* FROM "active_storage_attachments" WHERE "active_storage_attachments"."record_id" = $1 AND "active_storage_attachments"."record_type" = $2 AND "active_storage_attachments"."name" = $3 LIMIT $4[0m  [["record_id", 4], ["record_type", "Track"], ["name", "album_art"], ["LIMIT", 1]]
[36m  Disk Storage (3.2ms) [0m[32mUploaded file to key: ka4N9u32X5ETshYhWhr7Dhnp (checksum: ER81Lsrplt+5N6800ITUsA==)[0m
  [1m[36mActiveStorage::Blob Create (0.5ms)[0m  [1m[32mINSERT INTO "active_storage_blobs" ("key", "filename", "content_type", "metadata", "byte_size", "checksum", "created_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["key", "ka4N9u32X5ETshYhWhr7Dhnp"], ["filename", "4_Terrible Thing_AG & Brad Gordon.png"], ["content_type", "image/jpeg"], ["metadata", "{\"identified\":true}"], ["byte_size", 48330], ["checksum", "ER81Lsrplt+5N6800ITUsA=="], ["created_at", "2018-11-03 07:10:35.514871"]]
  [1m[36mActiveStorage::Attachment Create (0.3ms)[0m  [1m[32mINSERT INTO "active_storage_attachments" ("name", "record_type", "record_id", "blob_id", "created_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "album_art"], ["record_type", "Track"], ["record_id", 4], ["blob_id", 2], ["created_at", "2018-11-03 07:10:35.528934"]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."username" = $1 AND "users"."id" != $2 LIMIT $3[0m  [["username", "egpavelka"], ["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.5ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1, "album_art_url" = $2 WHERE "tracks"."id" = $3[0m  [["updated_at", "2018-11-03 07:10:35.539391"], ["album_art_url", "http://localhost:5100/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png"], ["id", 4]]
  [1m[36mTrack Update (0.3ms)[0m  [1m[33mUPDATE "tracks" SET "updated_at" = $1 WHERE "tracks"."id" = $2[0m  [["updated_at", "2018-11-03 07:10:35.530108"], ["id", 4]]
  [1m[35m (11.8ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 84640a29-6d4e-4f45-9652-f2532f4a8ec1) to Async(default) with arguments: #<GlobalID:0x00007f115da9b198 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/2>>
Completed 200 OK in 283ms (Views: 0.2ms | ActiveRecord: 42.2ms)


  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [84640a29-6d4e-4f45-9652-f2532f4a8ec1] Performing ActiveStorage::AnalyzeJob (Job ID: 84640a29-6d4e-4f45-9652-f2532f4a8ec1) from Async(default) with arguments: #<GlobalID:0x00007f115da91cd8 @uri=#<URI::GID gid://playsette/ActiveStorage::Blob/2>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [84640a29-6d4e-4f45-9652-f2532f4a8ec1] [36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [84640a29-6d4e-4f45-9652-f2532f4a8ec1]   [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [84640a29-6d4e-4f45-9652-f2532f4a8ec1]   [1m[36mActiveStorage::Blob Update (0.3ms)[0m  [1m[33mUPDATE "active_storage_blobs" SET "metadata" = $1 WHERE "active_storage_blobs"."id" = $2[0m  [["metadata", "{\"identified\":true,\"width\":500,\"height\":500,\"analyzed\":true}"], ["id", 2]]
[ActiveJob] [ActiveStorage::AnalyzeJob] [84640a29-6d4e-4f45-9652-f2532f4a8ec1]   [1m[35m (6.0ms)[0m  [1m[35mCOMMIT[0m
[ActiveJob] [ActiveStorage::AnalyzeJob] [84640a29-6d4e-4f45-9652-f2532f4a8ec1] Performed ActiveStorage::AnalyzeJob (Job ID: 84640a29-6d4e-4f45-9652-f2532f4a8ec1) from Async(default) in 28.2ms
Started POST "/graphql" for ::1 at 2018-11-03 03:11:40 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1327ms (Views: 0.3ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:11:43 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1738ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started POST "/graphql" for ::1 at 2018-11-03 03:20:57 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 790ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:25:31 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 802ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:32:44 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 842ms (Views: 0.5ms | ActiveRecord: 5.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-03 03:32:45 -0400
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-03 03:32:45 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (1.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (8.0ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI3WiIsInB1ciI6ImJsb2Jfa2V5In19--3235d06638e6892fef6b23441c08de6509c44b48/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--e59a92980453864ac5cae16952be3f04d6183237/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI3WiIsInB1ciI6ImJsb2Jfa2V5In19--3235d06638e6892fef6b23441c08de6509c44b48/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--e59a92980453864ac5cae16952be3f04d6183237/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 13ms (ActiveRecord: 8.0ms)


Completed 302 Found in 27ms (ActiveRecord: 4.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--e59a92980453864ac5cae16952be3f04d6183237/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-03 03:32:45 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI3WiIsInB1ciI6ImJsb2Jfa2V5In19--3235d06638e6892fef6b23441c08de6509c44b48/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-03 03:32:45 -0400
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--e59a92980453864ac5cae16952be3f04d6183237", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6Mzc6NDUuNDI3WiIsInB1ciI6ImJsb2Jfa2V5In19--3235d06638e6892fef6b23441c08de6509c44b48", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.9ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:43:07 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 755ms (Views: 0.7ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-03 03:43:08 -0400
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-03 03:43:08 -0400
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (1.2ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzgyWiIsInB1ciI6ImJsb2Jfa2V5In19--78989db45464018e424c5914a657390df878fb64/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzgyWiIsInB1ciI6ImJsb2Jfa2V5In19--78989db45464018e424c5914a657390df878fb64/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 6ms (ActiveRecord: 0.8ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.8ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--cf7d6f40ac04db69f572c0a89bc2acd71d29a86c/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--cf7d6f40ac04db69f572c0a89bc2acd71d29a86c/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 3ms (ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzgyWiIsInB1ciI6ImJsb2Jfa2V5In19--78989db45464018e424c5914a657390df878fb64/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-03 03:43:08 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzgyWiIsInB1ciI6ImJsb2Jfa2V5In19--78989db45464018e424c5914a657390df878fb64", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--cf7d6f40ac04db69f572c0a89bc2acd71d29a86c/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-03 03:43:08 -0400
[36m  Disk Storage (1.0ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--cf7d6f40ac04db69f572c0a89bc2acd71d29a86c", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-03 03:45:27 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 830ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzgyWiIsInB1ciI6ImJsb2Jfa2V5In19--78989db45464018e424c5914a657390df878fb64/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-03 03:45:27 -0400
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--cf7d6f40ac04db69f572c0a89bc2acd71d29a86c/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-03 03:45:27 -0400
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--cf7d6f40ac04db69f572c0a89bc2acd71d29a86c", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (3.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 4ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDNUMDc6NDg6MDguMzgyWiIsInB1ciI6ImJsb2Jfa2V5In19--78989db45464018e424c5914a657390df878fb64", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-04 15:06:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541448397&t=4308e1bb8ebb2fc04a93f51e84dd1101f58c1b5b&token=1541448397_7b95e8189dc641729892b30d35df1d837b6fe33c"], ["updated_at", "2018-11-04 20:06:21.098764"], ["id", 3]]
  [1m[35m (24.9ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 2512ms (Views: 0.4ms | ActiveRecord: 30.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-04 15:06:21 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (1.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMTgxWiIsInB1ciI6ImJsb2Jfa2V5In19--577132f7b00d9376b3e4a06979bf9c5a59fc01e0/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMTgxWiIsInB1ciI6ImJsb2Jfa2V5In19--577132f7b00d9376b3e4a06979bf9c5a59fc01e0/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 4ms (ActiveRecord: 1.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMTgxWiIsInB1ciI6ImJsb2Jfa2V5In19--577132f7b00d9376b3e4a06979bf9c5a59fc01e0/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-04 15:06:21 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMTgxWiIsInB1ciI6ImJsb2Jfa2V5In19--577132f7b00d9376b3e4a06979bf9c5a59fc01e0", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-04 15:06:21 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMjA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c749e4ab87b63463f7ba2728375fa732dc82cc32/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMjA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c749e4ab87b63463f7ba2728375fa732dc82cc32/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 2ms (ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMjA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c749e4ab87b63463f7ba2728375fa732dc82cc32/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-04 15:06:21 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMjA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c749e4ab87b63463f7ba2728375fa732dc82cc32", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (121.6ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 122ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (108.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 109ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-04 15:08:13 -0500
Started POST "/graphql" for ::1 at 2018-11-04 15:08:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n"}}
  [1m[36mTrack Load (1.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Completed 200 OK in 1039ms (Views: 0.5ms | ActiveRecord: 1.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMjA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c749e4ab87b63463f7ba2728375fa732dc82cc32/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-04 15:08:14 -0500
Processing by ActiveStorage::DiskController#show as PNG
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMTgxWiIsInB1ciI6ImJsb2Jfa2V5In19--577132f7b00d9376b3e4a06979bf9c5a59fc01e0/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-04 15:08:14 -0500
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMjA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c749e4ab87b63463f7ba2728375fa732dc82cc32", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MTE6MjEuMTgxWiIsInB1ciI6ImJsb2Jfa2V5In19--577132f7b00d9376b3e4a06979bf9c5a59fc01e0", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-04 15:16:02 -0500
Started POST "/graphql" for ::1 at 2018-11-04 15:16:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.9ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n"}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Completed 200 OK in 1028ms (Views: 0.4ms | ActiveRecord: 0.9ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-04 15:16:03 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-04 15:16:03 -0500
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjE5WiIsInB1ciI6ImJsb2Jfa2V5In19--abda89bbdabaac0b219298635f0a7a57f9fd236a/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Processing by ActiveStorage::BlobsController#show as PNG
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjE5WiIsInB1ciI6ImJsb2Jfa2V5In19--abda89bbdabaac0b219298635f0a7a57f9fd236a/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Completed 302 Found in 6ms (ActiveRecord: 0.8ms)


  [1m[36mActiveStorage::Blob Load (1.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjI0WiIsInB1ciI6ImJsb2Jfa2V5In19--2e5d442a5f949ffa37f7e1084e8db3c380949b4f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjI0WiIsInB1ciI6ImJsb2Jfa2V5In19--2e5d442a5f949ffa37f7e1084e8db3c380949b4f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 3ms (ActiveRecord: 1.1ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjE5WiIsInB1ciI6ImJsb2Jfa2V5In19--abda89bbdabaac0b219298635f0a7a57f9fd236a/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-04 15:16:03 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjE5WiIsInB1ciI6ImJsb2Jfa2V5In19--abda89bbdabaac0b219298635f0a7a57f9fd236a", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjI0WiIsInB1ciI6ImJsb2Jfa2V5In19--2e5d442a5f949ffa37f7e1084e8db3c380949b4f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-04 15:16:03 -0500
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjA6MjE6MDMuMjI0WiIsInB1ciI6ImJsb2Jfa2V5In19--2e5d442a5f949ffa37f7e1084e8db3c380949b4f", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-04 16:46:48 -0500
Started POST "/graphql" for ::1 at 2018-11-04 16:46:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3604ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-04 16:46:52 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-04 16:46:52 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (3.0ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--373240206f8182c5a81428798ee20bac907190cb/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--373240206f8182c5a81428798ee20bac907190cb/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
  [1m[36mActiveStorage::Blob Load (1.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--95b1f9ad61e20d1dca0ce8ff99021243760c422c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--95b1f9ad61e20d1dca0ce8ff99021243760c422c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 4ms (ActiveRecord: 1.7ms)


Completed 302 Found in 7ms (ActiveRecord: 4.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--373240206f8182c5a81428798ee20bac907190cb/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-04 16:46:52 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--95b1f9ad61e20d1dca0ce8ff99021243760c422c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-04 16:46:52 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI2WiIsInB1ciI6ImJsb2Jfa2V5In19--373240206f8182c5a81428798ee20bac907190cb", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjE6NTE6NTIuNDI4WiIsInB1ciI6ImJsb2Jfa2V5In19--95b1f9ad61e20d1dca0ce8ff99021243760c422c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
[36m  Disk Storage (3.7ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 5ms (ActiveRecord: 0.0ms)


Completed 200 OK in 5ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-04 16:55:26 -0500
Started POST "/graphql" for ::1 at 2018-11-04 16:55:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Completed 200 OK in 1707ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-04 16:55:28 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzMzWiIsInB1ciI6ImJsb2Jfa2V5In19--8512ca8f5801efbe23ee359353633f7a5db9433d/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzMzWiIsInB1ciI6ImJsb2Jfa2V5In19--8512ca8f5801efbe23ee359353633f7a5db9433d/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 3ms (ActiveRecord: 0.9ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-04 16:55:28 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzQ2WiIsInB1ciI6ImJsb2Jfa2V5In19--25d5c1e9818c5695e7bb7892160c87676123907e/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzQ2WiIsInB1ciI6ImJsb2Jfa2V5In19--25d5c1e9818c5695e7bb7892160c87676123907e/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzQ2WiIsInB1ciI6ImJsb2Jfa2V5In19--25d5c1e9818c5695e7bb7892160c87676123907e/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-04 16:55:28 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzMzWiIsInB1ciI6ImJsb2Jfa2V5In19--8512ca8f5801efbe23ee359353633f7a5db9433d/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-04 16:55:28 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzQ2WiIsInB1ciI6ImJsb2Jfa2V5In19--25d5c1e9818c5695e7bb7892160c87676123907e", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDRUMjI6MDA6MjguNzMzWiIsInB1ciI6ImJsb2Jfa2V5In19--8512ca8f5801efbe23ee359353633f7a5db9433d", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-06 01:47:15 -0500
Started POST "/graphql" for ::1 at 2018-11-06 01:47:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks @client {\n    id\n    service\n    media_url\n    title\n    artist\n    album\n    year\n    __typename\n  }\n  currentTrack @client\n}\n"}}
Completed 200 OK in 13ms (Views: 11.1ms | ActiveRecord: 0.0ms)


  [1m[36mTrack Load (93.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (37.0ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1541573257&t=5039a19ecb1f2d2b5695a83cdceb14816f48e6ba&token=1541573257_5b54221e877785d4b593a2e9f9e4c823fa453085"], ["updated_at", "2018-11-06 06:47:19.534734"], ["id", 3]]
  [1m[35m (45.3ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 3242ms (Views: 0.8ms | ActiveRecord: 177.2ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-06 01:47:19 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-06 01:47:19 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (8.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (22.3ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzEwWiIsInB1ciI6ImJsb2Jfa2V5In19--af7e655a5f303895a4c6d87f30acd9a639270fdc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzEwWiIsInB1ciI6ImJsb2Jfa2V5In19--af7e655a5f303895a4c6d87f30acd9a639270fdc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 51ms (ActiveRecord: 8.1ms)


  [1m[36mActiveStorage::Blob Load (21.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzM0WiIsInB1ciI6ImJsb2Jfa2V5In19--5948c10e05873ed7991f21889f190cbb5854dacf/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzM0WiIsInB1ciI6ImJsb2Jfa2V5In19--5948c10e05873ed7991f21889f190cbb5854dacf/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 48ms (ActiveRecord: 21.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzEwWiIsInB1ciI6ImJsb2Jfa2V5In19--af7e655a5f303895a4c6d87f30acd9a639270fdc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-06 01:47:19 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzM0WiIsInB1ciI6ImJsb2Jfa2V5In19--5948c10e05873ed7991f21889f190cbb5854dacf/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-06 01:47:19 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzEwWiIsInB1ciI6ImJsb2Jfa2V5In19--af7e655a5f303895a4c6d87f30acd9a639270fdc", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMDY6NTI6MTkuNzM0WiIsInB1ciI6ImJsb2Jfa2V5In19--5948c10e05873ed7991f21889f190cbb5854dacf", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (39.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 40ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (48.9ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 49ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-06 04:56:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 17383ms (Views: 1.6ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-06 04:56:50 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-06 04:56:50 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 4ms (ActiveRecord: 0.6ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 3ms (ActiveRecord: 0.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-06 04:56:50 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-06 04:56:50 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-06 04:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 959ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-06 04:57:33 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-06 04:57:33 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
[36m  Disk Storage (3.0ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 4ms (ActiveRecord: 0.0ms)


  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-06 04:58:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 805ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-06 04:58:14 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDI0WiIsInB1ciI6ImJsb2Jfa2V5In19--c58654d60312f5fa36b68acb64056dca9fbf16f7", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-06 04:58:14 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMDZUMTA6MDE6NTAuNDM4WiIsInB1ciI6ImJsb2Jfa2V5In19--e4db2f13ec2e9b7ece8e1607ed9a3c2dbb4b4436", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-15 07:00:07 -0500
  [1m[35m (30.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (78.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (36.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (32.4ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1542369665&t=d6a968dc8fa0317a373bc5680aa9186521308ed2&token=1542369665_b090cff2cd6333f0f2a4d425938e0376d4d94220"], ["updated_at", "2018-11-15 12:00:12.385911"], ["id", 3]]
  [1m[35m (12.2ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 3186ms (Views: 0.4ms | ActiveRecord: 190.2ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-15 07:00:12 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-15 07:00:12 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (31.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (40.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (75.1ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcxWiIsInB1ciI6ImJsb2Jfa2V5In19--28d175f849cc48eda23eaa7a53308cbe1df38579/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcxWiIsInB1ciI6ImJsb2Jfa2V5In19--28d175f849cc48eda23eaa7a53308cbe1df38579/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 211ms (ActiveRecord: 34.5ms)


[36m  Disk Storage (74.8ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcyWiIsInB1ciI6ImJsb2Jfa2V5In19--09b9759aad48898ecfc9a8cc5866c568c3ca3bd4/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcyWiIsInB1ciI6ImJsb2Jfa2V5In19--09b9759aad48898ecfc9a8cc5866c568c3ca3bd4/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 212ms (ActiveRecord: 45.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcxWiIsInB1ciI6ImJsb2Jfa2V5In19--28d175f849cc48eda23eaa7a53308cbe1df38579/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-15 07:00:12 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcyWiIsInB1ciI6ImJsb2Jfa2V5In19--09b9759aad48898ecfc9a8cc5866c568c3ca3bd4/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-15 07:00:12 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcxWiIsInB1ciI6ImJsb2Jfa2V5In19--28d175f849cc48eda23eaa7a53308cbe1df38579", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDU6MTIuNzcyWiIsInB1ciI6ImJsb2Jfa2V5In19--09b9759aad48898ecfc9a8cc5866c568c3ca3bd4", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (12.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 14ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (22.9ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 24ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-15 07:01:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 996ms (Views: 0.6ms | ActiveRecord: 1.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-15 07:01:39 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (1.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-15 07:01:39 -0500
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTU3WiIsInB1ciI6ImJsb2Jfa2V5In19--aba1f654df092c2691912c09f12239bff8cae522/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTU3WiIsInB1ciI6ImJsb2Jfa2V5In19--aba1f654df092c2691912c09f12239bff8cae522/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 4ms (ActiveRecord: 1.1ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTYyWiIsInB1ciI6ImJsb2Jfa2V5In19--acf8f5d045aeaf58fead1a31bf6f7dd1c180642f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTYyWiIsInB1ciI6ImJsb2Jfa2V5In19--acf8f5d045aeaf58fead1a31bf6f7dd1c180642f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 3ms (ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTU3WiIsInB1ciI6ImJsb2Jfa2V5In19--aba1f654df092c2691912c09f12239bff8cae522/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-15 07:01:39 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTU3WiIsInB1ciI6ImJsb2Jfa2V5In19--aba1f654df092c2691912c09f12239bff8cae522", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTYyWiIsInB1ciI6ImJsb2Jfa2V5In19--acf8f5d045aeaf58fead1a31bf6f7dd1c180642f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-15 07:01:39 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTYyWiIsInB1ciI6ImJsb2Jfa2V5In19--acf8f5d045aeaf58fead1a31bf6f7dd1c180642f", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-15 07:01:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 820ms (Views: 0.6ms | ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTU3WiIsInB1ciI6ImJsb2Jfa2V5In19--aba1f654df092c2691912c09f12239bff8cae522/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-15 07:01:43 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTYyWiIsInB1ciI6ImJsb2Jfa2V5In19--acf8f5d045aeaf58fead1a31bf6f7dd1c180642f/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-15 07:01:43 -0500
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTU3WiIsInB1ciI6ImJsb2Jfa2V5In19--aba1f654df092c2691912c09f12239bff8cae522", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMTVUMTI6MDY6MzkuMTYyWiIsInB1ciI6ImJsb2Jfa2V5In19--acf8f5d045aeaf58fead1a31bf6f7dd1c180642f", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (10.6ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 12ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-17 06:35:17 -0500
  
PG::ConnectionBad (could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/run/postgresql/.s.PGSQL.5432"?
):
  
pg (1.1.3) lib/pg.rb:56:in `initialize'
pg (1.1.3) lib/pg.rb:56:in `new'
pg (1.1.3) lib/pg.rb:56:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:684:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:215:in `initialize'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `new'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `postgresql_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:809:in `new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:853:in `checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:832:in `try_to_checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:793:in `acquire_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:521:in `checkout'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:380:in `connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:1008:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:118:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:90:in `connection'
activerecord (5.2.1) lib/active_record/migration.rb:554:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-11-18 06:24:29 -0500
  
PG::ConnectionBad (could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/run/postgresql/.s.PGSQL.5432"?
):
  
pg (1.1.3) lib/pg.rb:56:in `initialize'
pg (1.1.3) lib/pg.rb:56:in `new'
pg (1.1.3) lib/pg.rb:56:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:684:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:215:in `initialize'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `new'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `postgresql_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:809:in `new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:853:in `checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:832:in `try_to_checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:793:in `acquire_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:521:in `checkout'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:380:in `connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:1008:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:118:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:90:in `connection'
activerecord (5.2.1) lib/active_record/migration.rb:554:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-11-19 01:37:28 -0500
  
PG::ConnectionBad (could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/run/postgresql/.s.PGSQL.5432"?
):
  
pg (1.1.3) lib/pg.rb:56:in `initialize'
pg (1.1.3) lib/pg.rb:56:in `new'
pg (1.1.3) lib/pg.rb:56:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:684:in `connect'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:215:in `initialize'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `new'
activerecord (5.2.1) lib/active_record/connection_adapters/postgresql_adapter.rb:40:in `postgresql_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:809:in `new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:853:in `checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:832:in `try_to_checkout_new_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:793:in `acquire_connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:521:in `checkout'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:380:in `connection'
activerecord (5.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:1008:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:118:in `retrieve_connection'
activerecord (5.2.1) lib/active_record/connection_handling.rb:90:in `connection'
activerecord (5.2.1) lib/active_record/migration.rb:554:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
activesupport (5.2.1) lib/active_support/callbacks.rb:98:in `run_callbacks'
actionpack (5.2.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-11-19 06:11:14 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.5ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1542712277&t=d7bb21b7f965551c118b2a1fcc78801ce93d4fa0&token=1542712277_2e2959ac7b498416fdea611402dc1e33e3c05453"], ["updated_at", "2018-11-19 11:11:17.583537"], ["id", 3]]
  [1m[35m (24.8ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 3104ms (Views: 0.4ms | ActiveRecord: 32.3ms)


Started POST "/graphql" for ::1 at 2018-11-20 05:15:27 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1797ms (Views: 0.4ms | ActiveRecord: 3.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-20 05:15:29 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-20 05:15:30 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (150.2ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg5WiIsInB1ciI6ImJsb2Jfa2V5In19--8071030af58ed94953343a3d653643d94bfbfec9/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg5WiIsInB1ciI6ImJsb2Jfa2V5In19--8071030af58ed94953343a3d653643d94bfbfec9/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 249ms (ActiveRecord: 3.3ms)


[36m  Disk Storage (151.6ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--50ced60bfb41c489b083b5dcf21c827c26a3584b/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--50ced60bfb41c489b083b5dcf21c827c26a3584b/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 249ms (ActiveRecord: 2.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg5WiIsInB1ciI6ImJsb2Jfa2V5In19--8071030af58ed94953343a3d653643d94bfbfec9/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-20 05:15:30 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--50ced60bfb41c489b083b5dcf21c827c26a3584b/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-20 05:15:30 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg5WiIsInB1ciI6ImJsb2Jfa2V5In19--8071030af58ed94953343a3d653643d94bfbfec9", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTA6MjA6MzAuMTg4WiIsInB1ciI6ImJsb2Jfa2V5In19--50ced60bfb41c489b083b5dcf21c827c26a3584b", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (15.1ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 16ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (26.0ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 27ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-20 07:17:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1542802666&t=8c669aff6743930e530dacff235a8767691cd70a&token=1542802666_be5ece71a8454606f71af5dee2feff259ac49b7e"], ["updated_at", "2018-11-20 12:17:46.071418"], ["id", 3]]
  [1m[35m (50.8ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 2642ms (Views: 0.6ms | ActiveRecord: 56.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-20 07:17:46 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--78eb8bdb5cdccde708fc72963d22d36a08e06149/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--78eb8bdb5cdccde708fc72963d22d36a08e06149/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 3ms (ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-20 07:17:46 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTcyWiIsInB1ciI6ImJsb2Jfa2V5In19--2a91ddf15dc784bc9f8834c89760e5006fa278f2/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTcyWiIsInB1ciI6ImJsb2Jfa2V5In19--2a91ddf15dc784bc9f8834c89760e5006fa278f2/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 2ms (ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--78eb8bdb5cdccde708fc72963d22d36a08e06149/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-20 07:17:46 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTY3WiIsInB1ciI6ImJsb2Jfa2V5In19--78eb8bdb5cdccde708fc72963d22d36a08e06149", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTcyWiIsInB1ciI6ImJsb2Jfa2V5In19--2a91ddf15dc784bc9f8834c89760e5006fa278f2/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-20 07:17:46 -0500
[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjBUMTI6MjI6NDYuMTcyWiIsInB1ciI6ImJsb2Jfa2V5In19--2a91ddf15dc784bc9f8834c89760e5006fa278f2", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-21 09:25:53 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1542896758&t=9fa51810f2eb5f5f0c8b8ab73f6106a7c8699b10&token=1542896758_e5dfa22f1b211fb3b93e12ce43040692b3d787fa"], ["updated_at", "2018-11-21 14:25:57.010517"], ["id", 3]]
  [1m[35m (36.1ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 2805ms (Views: 0.3ms | ActiveRecord: 43.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-21 09:25:57 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-21 09:25:57 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::BlobsController#show as PNG
  [1m[36mActiveStorage::Blob Load (4.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (2.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (13.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUwWiIsInB1ciI6ImJsb2Jfa2V5In19--48019a1ad2c66ed108168d755f576847599e4c67/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
[36m  Disk Storage (10.5ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUzWiIsInB1ciI6ImJsb2Jfa2V5In19--93b80a045d2b8d027bbbaf67edb46b355c5153a6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUzWiIsInB1ciI6ImJsb2Jfa2V5In19--93b80a045d2b8d027bbbaf67edb46b355c5153a6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 17ms (ActiveRecord: 2.6ms)


Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUwWiIsInB1ciI6ImJsb2Jfa2V5In19--48019a1ad2c66ed108168d755f576847599e4c67/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 77ms (ActiveRecord: 7.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUzWiIsInB1ciI6ImJsb2Jfa2V5In19--93b80a045d2b8d027bbbaf67edb46b355c5153a6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-21 09:25:57 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUwWiIsInB1ciI6ImJsb2Jfa2V5In19--48019a1ad2c66ed108168d755f576847599e4c67/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-21 09:25:57 -0500
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUwWiIsInB1ciI6ImJsb2Jfa2V5In19--48019a1ad2c66ed108168d755f576847599e4c67", "filename"=>"3_Dysphoria_Blood Sister"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjFUMTQ6MzA6NTcuMTUzWiIsInB1ciI6ImJsb2Jfa2V5In19--93b80a045d2b8d027bbbaf67edb46b355c5153a6", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.0ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-21 22:04:21 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-21 22:04:21 -0500
Processing by ActiveStorage::BlobsController#show as PNG
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (1.0ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc3WiIsInB1ciI6ImJsb2Jfa2V5In19--cc7d324b871f4b0d15307b6d739025ba940db6cf/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc3WiIsInB1ciI6ImJsb2Jfa2V5In19--cc7d324b871f4b0d15307b6d739025ba940db6cf/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
  [1m[36mActiveStorage::Blob Load (2.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 302 Found in 4ms (ActiveRecord: 0.7ms)


[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc5WiIsInB1ciI6ImJsb2Jfa2V5In19--356012e630136dad2b2d8e6d455284f191b782af/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc5WiIsInB1ciI6ImJsb2Jfa2V5In19--356012e630136dad2b2d8e6d455284f191b782af/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 5ms (ActiveRecord: 2.2ms)


Started POST "/graphql" for ::1 at 2018-11-21 22:04:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 963ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc5WiIsInB1ciI6ImJsb2Jfa2V5In19--356012e630136dad2b2d8e6d455284f191b782af/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-21 22:04:23 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc5WiIsInB1ciI6ImJsb2Jfa2V5In19--356012e630136dad2b2d8e6d455284f191b782af", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc3WiIsInB1ciI6ImJsb2Jfa2V5In19--cc7d324b871f4b0d15307b6d739025ba940db6cf/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-21 22:04:23 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDM6MDk6MjEuNzc3WiIsInB1ciI6ImJsb2Jfa2V5In19--cc7d324b871f4b0d15307b6d739025ba940db6cf", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-22 01:09:08 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-22 01:09:08 -0500
  [1m[35m (90.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (90.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by ActiveStorage::BlobsController#show as PNG
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (123.2ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (123.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (207.5ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--3a90d8aaf1056bfddcfc9192aeb01e65dfd7615b/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
[36m  Disk Storage (207.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguODAwWiIsInB1ciI6ImJsb2Jfa2V5In19--8be4456f2dfb521173a883695e06810bc970aed6/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--3a90d8aaf1056bfddcfc9192aeb01e65dfd7615b/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 2576ms (ActiveRecord: 1628.9ms)


Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguODAwWiIsInB1ciI6ImJsb2Jfa2V5In19--8be4456f2dfb521173a883695e06810bc970aed6/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 2577ms (ActiveRecord: 990.0ms)


Started POST "/graphql" for ::1 at 2018-11-22 01:10:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (181.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1087ms (Views: 1.2ms | ActiveRecord: 185.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguODAwWiIsInB1ciI6ImJsb2Jfa2V5In19--8be4456f2dfb521173a883695e06810bc970aed6/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-22 01:10:01 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguODAwWiIsInB1ciI6ImJsb2Jfa2V5In19--8be4456f2dfb521173a883695e06810bc970aed6", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (23.9ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 25ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--3a90d8aaf1056bfddcfc9192aeb01e65dfd7615b/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-22 01:10:04 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MTQ6MTguNzk5WiIsInB1ciI6ImJsb2Jfa2V5In19--3a90d8aaf1056bfddcfc9192aeb01e65dfd7615b", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (23.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 24ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-22 01:17:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 754ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-22 01:17:47 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-22 01:17:47 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjc4WiIsInB1ciI6ImJsb2Jfa2V5In19--5eb6a7e76f1bcb896aa0f67df56d1cb8ae8ba67a/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjc4WiIsInB1ciI6ImJsb2Jfa2V5In19--5eb6a7e76f1bcb896aa0f67df56d1cb8ae8ba67a/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 4ms (ActiveRecord: 0.7ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjc4WiIsInB1ciI6ImJsb2Jfa2V5In19--5eb6a7e76f1bcb896aa0f67df56d1cb8ae8ba67a/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-22 01:17:47 -0500
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjg5WiIsInB1ciI6ImJsb2Jfa2V5In19--660604559ba4e66195a07bbd52d7ee9024d0add0/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjg5WiIsInB1ciI6ImJsb2Jfa2V5In19--660604559ba4e66195a07bbd52d7ee9024d0add0/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 4ms (ActiveRecord: 0.9ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjc4WiIsInB1ciI6ImJsb2Jfa2V5In19--5eb6a7e76f1bcb896aa0f67df56d1cb8ae8ba67a", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (12.8ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjg5WiIsInB1ciI6ImJsb2Jfa2V5In19--660604559ba4e66195a07bbd52d7ee9024d0add0/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-22 01:17:47 -0500
Completed 200 OK in 14ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDY6MjI6NDcuMjg5WiIsInB1ciI6ImJsb2Jfa2V5In19--660604559ba4e66195a07bbd52d7ee9024d0add0", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-22 03:14:00 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-22 03:14:00 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (7.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (10.2ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MTk6MDAuOTM2WiIsInB1ciI6ImJsb2Jfa2V5In19--1e7bb0ea24e4689eb16811eeddb51624b779872e/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MTk6MDAuOTM2WiIsInB1ciI6ImJsb2Jfa2V5In19--1e7bb0ea24e4689eb16811eeddb51624b779872e/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 46ms (ActiveRecord: 13.8ms)


[36m  Disk Storage (11.2ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MTk6MDAuOTM3WiIsInB1ciI6ImJsb2Jfa2V5In19--7d28ade88dcc3595e73831b118f7bb8c283a8f1a/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MTk6MDAuOTM3WiIsInB1ciI6ImJsb2Jfa2V5In19--7d28ade88dcc3595e73831b118f7bb8c283a8f1a/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 48ms (ActiveRecord: 4.3ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-22 03:25:47 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-22 03:25:47 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by ActiveStorage::BlobsController#show as PNG
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (11.6ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MzA6NDcuNDM0WiIsInB1ciI6ImJsb2Jfa2V5In19--110156a88ca64f1eb0279d214ed98555a66207f4/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
[36m  Disk Storage (11.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MzA6NDcuNDM1WiIsInB1ciI6ImJsb2Jfa2V5In19--44566ce94fe52879aa1f996a21658e28ca254fd6/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MzA6NDcuNDM0WiIsInB1ciI6ImJsb2Jfa2V5In19--110156a88ca64f1eb0279d214ed98555a66207f4/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 62ms (ActiveRecord: 4.8ms)


Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMDg6MzA6NDcuNDM1WiIsInB1ciI6ImJsb2Jfa2V5In19--44566ce94fe52879aa1f996a21658e28ca254fd6/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 63ms (ActiveRecord: 6.6ms)


  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started GET "/" for ::1 at 2018-11-22 03:53:14 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for ::1 at 2018-11-22 03:53:14 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (1438.4ms)
Completed 200 OK in 1523ms (Views: 1483.2ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-8c170720948bf97b769a858441a0c5ef334be2b5edbfd069f6f0ed4bbc2206cc.css" for ::1 at 2018-11-22 03:53:16 -0500
Started GET "/assets/graphiql/rails/application-c7de3d2d0736527ab590278d228312d772188099e9de6b6b6e736696a45d02d3.js" for ::1 at 2018-11-22 03:53:16 -0500
Started POST "/graphql" for ::1 at 2018-11-22 03:53:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 212ms (Views: 37.9ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-11-22 03:53:18 -0500
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-11-22 03:54:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 989ms (Views: 0.4ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for ::1 at 2018-11-22 05:15:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 847ms (Views: 0.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-11-22 05:16:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 867ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-22 05:16:20 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-22 05:16:20 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (8.2ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--bb24837e7d61af9b9e390f7fcb422bfac06afbb6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--bb24837e7d61af9b9e390f7fcb422bfac06afbb6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
[36m  Disk Storage (11.0ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--186eb9a337820b0b1cb28572f21b7bc25c34c1e9/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--186eb9a337820b0b1cb28572f21b7bc25c34c1e9/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 26ms (ActiveRecord: 1.1ms)


Completed 302 Found in 49ms (ActiveRecord: 9.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--bb24837e7d61af9b9e390f7fcb422bfac06afbb6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-22 05:16:20 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--186eb9a337820b0b1cb28572f21b7bc25c34c1e9/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-22 05:16:20 -0500
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--186eb9a337820b0b1cb28572f21b7bc25c34c1e9", "filename"=>"3_Dysphoria_Blood Sister"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6MjE6MjAuNzMwWiIsInB1ciI6ImJsb2Jfa2V5In19--bb24837e7d61af9b9e390f7fcb422bfac06afbb6", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (1.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
[36m  Disk Storage (1.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


Completed 200 OK in 4ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-22 05:35:15 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (1.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (1.5ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuODg5WiIsInB1ciI6ImJsb2Jfa2V5In19--c87d81804e3987392b28fcbcfb04ba4014969475/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-22 05:35:15 -0500
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuODg5WiIsInB1ciI6ImJsb2Jfa2V5In19--c87d81804e3987392b28fcbcfb04ba4014969475/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 6ms (ActiveRecord: 1.3ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.5ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuOTA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c2b326f7f4725447377b0d92768430095f1a8ec7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuOTA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c2b326f7f4725447377b0d92768430095f1a8ec7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 2ms (ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-11-22 05:35:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 730ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuODg5WiIsInB1ciI6ImJsb2Jfa2V5In19--c87d81804e3987392b28fcbcfb04ba4014969475/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-22 05:35:19 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuOTA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c2b326f7f4725447377b0d92768430095f1a8ec7/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-22 05:35:19 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuODg5WiIsInB1ciI6ImJsb2Jfa2V5In19--c87d81804e3987392b28fcbcfb04ba4014969475", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjJUMTA6NDA6MTUuOTA2WiIsInB1ciI6ImJsb2Jfa2V5In19--c2b326f7f4725447377b0d92768430095f1a8ec7", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 03:26:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (15.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (10.3ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1543048000&t=2dc0775426c83abf36abdd0614511b4c07fbb464&token=1543048000_b2271b0cbf906c000938be85c8413a49c66ed6e7"], ["updated_at", "2018-11-23 08:26:39.527153"], ["id", 3]]
  [1m[35m (15.8ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 3127ms (Views: 0.5ms | ActiveRecord: 47.0ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-23 03:26:39 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-23 03:26:39 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 4ms (ActiveRecord: 0.8ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (1.0ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.5ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 3ms (ActiveRecord: 1.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 03:26:39 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 03:26:39 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 03:28:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 654ms (Views: 0.6ms | ActiveRecord: 0.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 03:28:24 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 03:28:24 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 03:28:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 845ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 03:28:37 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 03:28:37 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 03:28:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 927ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 03:28:58 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNTk3WiIsInB1ciI6ImJsb2Jfa2V5In19--de3a57e40e5d0157282301f15c325fbaecc5b9cb", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 03:28:58 -0500
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDg6MzE6MzkuNjA3WiIsInB1ciI6ImJsb2Jfa2V5In19--7a009b98a7fcb2964101058ddeb14ce453a886cc", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 04:48:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 6305ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-23 04:48:56 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-23 04:48:56 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (1.1ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjMyWiIsInB1ciI6ImJsb2Jfa2V5In19--f92c24449999c85c8e16764abe35e359cb3fb2e3/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjMyWiIsInB1ciI6ImJsb2Jfa2V5In19--f92c24449999c85c8e16764abe35e359cb3fb2e3/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 5ms (ActiveRecord: 1.3ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjMyWiIsInB1ciI6ImJsb2Jfa2V5In19--f92c24449999c85c8e16764abe35e359cb3fb2e3/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 04:48:56 -0500
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.6ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjQ1WiIsInB1ciI6ImJsb2Jfa2V5In19--a2f6d5e24ef17d3d52350ee8ca31a7331a8430cd/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjQ1WiIsInB1ciI6ImJsb2Jfa2V5In19--a2f6d5e24ef17d3d52350ee8ca31a7331a8430cd/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 4ms (ActiveRecord: 0.9ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjMyWiIsInB1ciI6ImJsb2Jfa2V5In19--f92c24449999c85c8e16764abe35e359cb3fb2e3", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjQ1WiIsInB1ciI6ImJsb2Jfa2V5In19--a2f6d5e24ef17d3d52350ee8ca31a7331a8430cd/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 04:48:56 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMDk6NTM6NTYuNjQ1WiIsInB1ciI6ImJsb2Jfa2V5In19--a2f6d5e24ef17d3d52350ee8ca31a7331a8430cd", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 05:15:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1126ms (Views: 0.4ms | ActiveRecord: 1.2ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-23 05:15:28 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-23 05:15:28 -0500
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDQwWiIsInB1ciI6ImJsb2Jfa2V5In19--1d937928574913a6d566b35b80cc1263fd05484b/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDQwWiIsInB1ciI6ImJsb2Jfa2V5In19--1d937928574913a6d566b35b80cc1263fd05484b/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 5ms (ActiveRecord: 1.5ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDU2WiIsInB1ciI6ImJsb2Jfa2V5In19--05d0668af38c78b94bd1c3cb8d3c5432baf3def2/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDU2WiIsInB1ciI6ImJsb2Jfa2V5In19--05d0668af38c78b94bd1c3cb8d3c5432baf3def2/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 4ms (ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDQwWiIsInB1ciI6ImJsb2Jfa2V5In19--1d937928574913a6d566b35b80cc1263fd05484b/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 05:15:28 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDQwWiIsInB1ciI6ImJsb2Jfa2V5In19--1d937928574913a6d566b35b80cc1263fd05484b", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDU2WiIsInB1ciI6ImJsb2Jfa2V5In19--05d0668af38c78b94bd1c3cb8d3c5432baf3def2/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 05:15:28 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTA6MjA6MjguMDU2WiIsInB1ciI6ImJsb2Jfa2V5In19--05d0668af38c78b94bd1c3cb8d3c5432baf3def2", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 06:12:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1137ms (Views: 0.5ms | ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-23 06:12:05 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-23 06:12:05 -0500
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.7ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTgwWiIsInB1ciI6ImJsb2Jfa2V5In19--157a6105ab3aa84c21f2480049e84d6ff2e4e84b/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTgwWiIsInB1ciI6ImJsb2Jfa2V5In19--157a6105ab3aa84c21f2480049e84d6ff2e4e84b/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 6ms (ActiveRecord: 0.7ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.9ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.9ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTk2WiIsInB1ciI6ImJsb2Jfa2V5In19--8352afb932f7087d6d11e859e88ce5ca7d055066/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTk2WiIsInB1ciI6ImJsb2Jfa2V5In19--8352afb932f7087d6d11e859e88ce5ca7d055066/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 4ms (ActiveRecord: 0.9ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTgwWiIsInB1ciI6ImJsb2Jfa2V5In19--157a6105ab3aa84c21f2480049e84d6ff2e4e84b/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 06:12:05 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTgwWiIsInB1ciI6ImJsb2Jfa2V5In19--157a6105ab3aa84c21f2480049e84d6ff2e4e84b", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTk2WiIsInB1ciI6ImJsb2Jfa2V5In19--8352afb932f7087d6d11e859e88ce5ca7d055066/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 06:12:05 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTE6MTc6MDUuMTk2WiIsInB1ciI6ImJsb2Jfa2V5In19--8352afb932f7087d6d11e859e88ce5ca7d055066", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" ORDER BY "tracks"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2018-11-23 06:50:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 893ms (ActiveRecord: 9.0ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f658801d0c0>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-11-23 06:50:15 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (4.9ms)
Completed 200 OK in 8ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-c7de3d2d0736527ab590278d228312d772188099e9de6b6b6e736696a45d02d3.js" for ::1 at 2018-11-23 06:50:15 -0500
Started POST "/graphql" for ::1 at 2018-11-23 06:50:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 77ms (Views: 10.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 06:50:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 782ms (ActiveRecord: 0.4ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f65a430d4f8>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:52:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: \"3\") {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: \"3\") {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 787ms (ActiveRecord: 0.3ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f65ade8b218>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:52:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 798ms (ActiveRecord: 0.4ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f65880379c0>):
  
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Started GET "/graphiql" for ::1 at 2018-11-23 06:54:12 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (193.8ms)
Completed 200 OK in 198ms (Views: 197.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 06:54:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 100ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 06:54:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 800ms (ActiveRecord: 5.9ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f70c81ffcf8>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:55:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 710ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-11-23 06:55:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: \"3\") {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: \"3\") {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 862ms (ActiveRecord: 0.5ms)


  
NoMethodError (undefined method `each' for #<Track:0x00005619f56bcb68>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:56:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: \"3\") {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: \"3\") {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 742ms (ActiveRecord: 0.3ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f70c81bb1e8>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:56:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 40) {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 40) {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 40], ["LIMIT", 1]]
Completed 404 Not Found in 7ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordNotFound (Couldn't find Track with 'id'=40):
  
app/graphql/types/query_type.rb:15:in `block (3 levels) in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:56:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 15) {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 15) {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 15], ["LIMIT", 1]]
Completed 404 Not Found in 3ms (ActiveRecord: 0.6ms)


  
ActiveRecord::RecordNotFound (Couldn't find Track with 'id'=15):
  
app/graphql/types/query_type.rb:15:in `block (3 levels) in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:57:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 8) {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 8) {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
Completed 404 Not Found in 3ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordNotFound (Couldn't find Track with 'id'=8):
  
app/graphql/types/query_type.rb:15:in `block (3 levels) in <top (required)>'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 06:57:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.2ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 836ms (ActiveRecord: 0.2ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f70c9f27290>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-11-23 07:00:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    \n  }\n}", "variables"=>nil}}
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:00:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 4261ms (ActiveRecord: 0.3ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f70d4295030>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for ::1 at 2018-11-23 07:03:43 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (6.6ms)
Completed 200 OK in 16ms (Views: 15.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:03:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 104ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:03:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `each' for "tele":String):
  
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Started GET "/graphiql" for ::1 at 2018-11-23 07:05:04 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (7.9ms)
Completed 200 OK in 12ms (Views: 10.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:05:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 129ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:05:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 1023ms (ActiveRecord: 4.0ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f70c8169bb8>):
  
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Started GET "/graphiql" for ::1 at 2018-11-23 07:08:27 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (3.9ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:08:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 136ms (Views: 9.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:08:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT  "tracks".* FROM "tracks" WHERE "tracks"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 500 Internal Server Error in 1062ms (ActiveRecord: 7.8ms)


  
NoMethodError (undefined method `each' for #<Track:0x00007f70c9a7f1c0>):
  
app/controllers/graphql_controller.rb:11:in `execute'
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 3]]
Started GET "/graphiql" for ::1 at 2018-11-23 07:09:37 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (5.2ms)
Completed 200 OK in 9ms (Views: 7.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:09:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 138ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:09:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 3]]
Completed 200 OK in 5941ms (Views: 0.2ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for ::1 at 2018-11-23 07:10:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  track(id: 3) {\n    id\n    title\n    artist\n    album\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  track(id: 3) {\n    id\n    title\n    artist\n    album\n  }\n}", "variables"=>nil}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks" WHERE "tracks"."id" = $1[0m  [["id", 3]]
Completed 200 OK in 7713ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for ::1 at 2018-11-23 08:22:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (1.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1237ms (Views: 2.0ms | ActiveRecord: 1.1ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-23 08:22:53 -0500
Processing by ActiveStorage::BlobsController#show as PNG
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-23 08:22:53 -0500
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.8ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (8.6ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDcyWiIsInB1ciI6ImJsb2Jfa2V5In19--a4035e92da57fe51a2ce9b5ecf0a7197c71c1639/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDcyWiIsInB1ciI6ImJsb2Jfa2V5In19--a4035e92da57fe51a2ce9b5ecf0a7197c71c1639/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 22ms (ActiveRecord: 1.3ms)


[36m  Disk Storage (9.9ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDczWiIsInB1ciI6ImJsb2Jfa2V5In19--29a7018892c365c4f9fabe9dfd729b3c7a49be10/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDczWiIsInB1ciI6ImJsb2Jfa2V5In19--29a7018892c365c4f9fabe9dfd729b3c7a49be10/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 55ms (ActiveRecord: 11.8ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDcyWiIsInB1ciI6ImJsb2Jfa2V5In19--a4035e92da57fe51a2ce9b5ecf0a7197c71c1639/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 08:22:53 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDczWiIsInB1ciI6ImJsb2Jfa2V5In19--29a7018892c365c4f9fabe9dfd729b3c7a49be10/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 08:22:53 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDcyWiIsInB1ciI6ImJsb2Jfa2V5In19--a4035e92da57fe51a2ce9b5ecf0a7197c71c1639", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDczWiIsInB1ciI6ImJsb2Jfa2V5In19--29a7018892c365c4f9fabe9dfd729b3c7a49be10", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.1ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDcyWiIsInB1ciI6ImJsb2Jfa2V5In19--a4035e92da57fe51a2ce9b5ecf0a7197c71c1639/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-23 08:22:53 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDcyWiIsInB1ciI6ImJsb2Jfa2V5In19--a4035e92da57fe51a2ce9b5ecf0a7197c71c1639", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDczWiIsInB1ciI6ImJsb2Jfa2V5In19--29a7018892c365c4f9fabe9dfd729b3c7a49be10/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-23 08:22:53 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjNUMTM6Mjc6NTMuNDczWiIsInB1ciI6ImJsb2Jfa2V5In19--29a7018892c365c4f9fabe9dfd729b3c7a49be10", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-24 06:53:42 -0500
  [1m[35m (13.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (44.1ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (24.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (3.2ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1543146839&t=ea6da636fee108222d0331234303f9715f745df6&token=1543146839_1abbd8fc4fccb06655eee0cc5ed55a9e0f299d2f"], ["updated_at", "2018-11-24 11:53:59.486675"], ["id", 3]]
  [1m[35m (19.4ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 14612ms (Views: 0.4ms | ActiveRecord: 130.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-11-24 06:53:59 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-11-24 06:53:59 -0500
Processing by ActiveStorage::BlobsController#show as PNG
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (33.7ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (33.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (71.6ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODcwWiIsInB1ciI6ImJsb2Jfa2V5In19--72ee6bf0b6d642159d0f410d0c3078756317eb8d/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
[36m  Disk Storage (72.8ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODY5WiIsInB1ciI6ImJsb2Jfa2V5In19--33b53259ab1317024a7c4e197bf11b16667d9369/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODcwWiIsInB1ciI6ImJsb2Jfa2V5In19--72ee6bf0b6d642159d0f410d0c3078756317eb8d/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODY5WiIsInB1ciI6ImJsb2Jfa2V5In19--33b53259ab1317024a7c4e197bf11b16667d9369/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 223ms (ActiveRecord: 37.7ms)


Completed 302 Found in 224ms (ActiveRecord: 39.9ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODcwWiIsInB1ciI6ImJsb2Jfa2V5In19--72ee6bf0b6d642159d0f410d0c3078756317eb8d/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-11-24 06:53:59 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODY5WiIsInB1ciI6ImJsb2Jfa2V5In19--33b53259ab1317024a7c4e197bf11b16667d9369/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-11-24 06:53:59 -0500
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODY5WiIsInB1ciI6ImJsb2Jfa2V5In19--33b53259ab1317024a7c4e197bf11b16667d9369", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTEtMjRUMTE6NTg6NTkuODcwWiIsInB1ciI6ImJsb2Jfa2V5In19--72ee6bf0b6d642159d0f410d0c3078756317eb8d", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (13.7ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 15ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (24.5ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 25ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-11-25 04:58:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 727ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for ::1 at 2018-11-25 05:10:39 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/gigi/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (233.5ms)
Completed 200 OK in 254ms (Views: 251.9ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-c7de3d2d0736527ab590278d228312d772188099e9de6b6b6e736696a45d02d3.js" for ::1 at 2018-11-25 05:10:39 -0500
Started POST "/graphql" for ::1 at 2018-11-25 05:10:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 106ms (Views: 12.9ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2018-11-25 05:10:43 -0500
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.1) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.1) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.1) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.1) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.2.1) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2018-12-02 20:27:42 -0500
Started POST "/graphql" for ::1 at 2018-12-02 20:27:42 -0500
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (2.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[36mTrack Load (6.2ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTrack Update (0.4ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1543886881&t=09107978e14dfe87b529ff80d85a3ecdfe788a11&token=1543886881_c5e8fee18eb7272098ea13900ca76ca11a1db166"], ["updated_at", "2018-12-03 01:27:53.631024"], ["id", 3]]
  [1m[35m (35.3ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 10752ms (Views: 0.3ms | ActiveRecord: 42.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-12-02 20:27:53 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-12-02 20:27:53 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (25.4ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuNzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--865865b6fbb6955f04628d79cd9633758e8bb526/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuNzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--865865b6fbb6955f04628d79cd9633758e8bb526/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 55ms (ActiveRecord: 0.3ms)


  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuNzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--865865b6fbb6955f04628d79cd9633758e8bb526/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:27:53 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuNzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--865865b6fbb6955f04628d79cd9633758e8bb526", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mUser Load (2.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuODIyWiIsInB1ciI6ImJsb2Jfa2V5In19--ebc35b11854cc9e4b4865cf04bea70a6a2b422e6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuODIyWiIsInB1ciI6ImJsb2Jfa2V5In19--ebc35b11854cc9e4b4865cf04bea70a6a2b422e6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 3ms (ActiveRecord: 0.6ms)


  [1m[36mTrack Update (0.8ms)[0m  [1m[33mUPDATE "tracks" SET "media_url" = $1, "updated_at" = $2 WHERE "tracks"."id" = $3[0m  [["media_url", "https://t4.bcbits.com/stream/122aa87c1a46b2334a16c5d9303dbfca/mp3-128/1079575302?p=0&ts=1543886881&t=09107978e14dfe87b529ff80d85a3ecdfe788a11&token=1543886881_c5e8fee18eb7272098ea13900ca76ca11a1db166"], ["updated_at", "2018-12-03 01:27:53.823626"], ["id", 3]]
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuODIyWiIsInB1ciI6ImJsb2Jfa2V5In19--ebc35b11854cc9e4b4865cf04bea70a6a2b422e6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:27:53 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuODIyWiIsInB1ciI6ImJsb2Jfa2V5In19--ebc35b11854cc9e4b4865cf04bea70a6a2b422e6", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[35m (38.1ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 10932ms (Views: 0.3ms | ActiveRecord: 44.0ms)


[36m  Disk Storage (84.8ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 86ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuODIyWiIsInB1ciI6ImJsb2Jfa2V5In19--ebc35b11854cc9e4b4865cf04bea70a6a2b422e6/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:27:53 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuODIyWiIsInB1ciI6ImJsb2Jfa2V5In19--ebc35b11854cc9e4b4865cf04bea70a6a2b422e6", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (115.8ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 117ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuNzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--865865b6fbb6955f04628d79cd9633758e8bb526/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:27:53 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDE6MzI6NTMuNzk0WiIsInB1ciI6ImJsb2Jfa2V5In19--865865b6fbb6955f04628d79cd9633758e8bb526", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 20:56:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started POST "/graphql" for ::1 at 2018-12-02 20:56:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 2806ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-12-02 20:57:02 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-12-02 20:57:02 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 3ms (ActiveRecord: 0.5ms)


Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 3ms (ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:57:02 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:57:02 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (22.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 23ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Completed 200 OK in 3568ms (Views: 0.5ms | ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:57:03 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:57:03 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 20:57:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for ::1 at 2018-12-02 20:57:47 -0500
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1848ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:57:49 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:57:49 -0500
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (0.6ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Completed 200 OK in 2054ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:57:50 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:57:50 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 20:59:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started POST "/graphql" for ::1 at 2018-12-02 20:59:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 2789ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:59:18 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:59:18 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (58.9ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 61ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Completed 200 OK in 3066ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:59:18 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:59:18 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Processing by ActiveStorage::DiskController#show as PNG
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 20:59:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started POST "/graphql" for ::1 at 2018-12-02 20:59:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 983ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:59:24 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:59:24 -0500
[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Completed 200 OK in 2095ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:59:25 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:59:25 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.2ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 20:59:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started POST "/graphql" for ::1 at 2018-12-02 20:59:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 2420ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:59:39 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:59:39 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (2.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
[36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Completed 200 OK in 4ms (ActiveRecord: 0.0ms)


Completed 200 OK in 4535ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 20:59:41 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 20:59:41 -0500
Processing by ActiveStorage::DiskController#show as PNG
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (1.1ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (55.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 56ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 21:00:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.4ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Started POST "/graphql" for ::1 at 2018-12-02 21:00:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 3447ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 21:00:46 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 21:00:46 -0500
[36m  Disk Storage (1.0ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Completed 200 OK in 4351ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 21:00:47 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 21:00:47 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzc4WiIsInB1ciI6ImJsb2Jfa2V5In19--ffa8e8698462a90b26a6f61fbac97856f2262b81", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDI6MDI6MDIuMzcwWiIsInB1ciI6ImJsb2Jfa2V5In19--4ac96de8966d1191fbbd675e7c2d3ec9ecd4a89c", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 23:25:15 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1473ms (Views: 0.4ms | ActiveRecord: 3.8ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-12-02 23:25:17 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-12-02 23:25:17 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (60.3ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc3WiIsInB1ciI6ImJsb2Jfa2V5In19--bcdeb3af5df9ce1128653cd6273b77da0aeedd98/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc3WiIsInB1ciI6ImJsb2Jfa2V5In19--bcdeb3af5df9ce1128653cd6273b77da0aeedd98/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 168ms (ActiveRecord: 4.1ms)


[36m  Disk Storage (61.5ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc2WiIsInB1ciI6ImJsb2Jfa2V5In19--e2ef9afc14b567d9c57460676593e2be56c23338/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc2WiIsInB1ciI6ImJsb2Jfa2V5In19--e2ef9afc14b567d9c57460676593e2be56c23338/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 169ms (ActiveRecord: 5.9ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc3WiIsInB1ciI6ImJsb2Jfa2V5In19--bcdeb3af5df9ce1128653cd6273b77da0aeedd98/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 23:25:17 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc2WiIsInB1ciI6ImJsb2Jfa2V5In19--e2ef9afc14b567d9c57460676593e2be56c23338/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 23:25:17 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc3WiIsInB1ciI6ImJsb2Jfa2V5In19--bcdeb3af5df9ce1128653cd6273b77da0aeedd98", "filename"=>"3_Dysphoria_Blood Sister"}
Processing by ActiveStorage::DiskController#show as PNG
[36m  Disk Storage (0.4ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc2WiIsInB1ciI6ImJsb2Jfa2V5In19--e2ef9afc14b567d9c57460676593e2be56c23338", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-02 23:25:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 500 Internal Server Error in 20028ms (ActiveRecord: 0.6ms)


  
SocketError (Failed to open TCP connection to t4.bcbits.com:443 (getaddrinfo: Temporary failure in name resolution)):
  
app/models/track.rb:26:in `check_bandcamp'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for ::1 at 2018-12-02 23:29:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1428ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc2WiIsInB1ciI6ImJsb2Jfa2V5In19--e2ef9afc14b567d9c57460676593e2be56c23338/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-02 23:29:12 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc3WiIsInB1ciI6ImJsb2Jfa2V5In19--bcdeb3af5df9ce1128653cd6273b77da0aeedd98/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-02 23:29:12 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc2WiIsInB1ciI6ImJsb2Jfa2V5In19--e2ef9afc14b567d9c57460676593e2be56c23338", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDQ6MzA6MTcuNTc3WiIsInB1ciI6ImJsb2Jfa2V5In19--bcdeb3af5df9ce1128653cd6273b77da0aeedd98", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (1.1ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
[36m  Disk Storage (0.7ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-03 00:28:50 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.6ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 703ms (Views: 0.4ms | ActiveRecord: 5.6ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-12-03 00:28:51 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-12-03 00:28:51 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mActiveStorage::Blob Load (0.4ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (7.2ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUyWiIsInB1ciI6ImJsb2Jfa2V5In19--5f2b3c0300edf28c372720efa602909404aa5825/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
[36m  Disk Storage (7.3ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUzWiIsInB1ciI6ImJsb2Jfa2V5In19--c755eed81b52b6627bb59dbfed519541ee91b030/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUyWiIsInB1ciI6ImJsb2Jfa2V5In19--5f2b3c0300edf28c372720efa602909404aa5825/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUzWiIsInB1ciI6ImJsb2Jfa2V5In19--c755eed81b52b6627bb59dbfed519541ee91b030/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 36ms (ActiveRecord: 4.0ms)


Completed 302 Found in 37ms (ActiveRecord: 4.9ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUyWiIsInB1ciI6ImJsb2Jfa2V5In19--5f2b3c0300edf28c372720efa602909404aa5825/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-03 00:28:51 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUzWiIsInB1ciI6ImJsb2Jfa2V5In19--c755eed81b52b6627bb59dbfed519541ee91b030/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-03 00:28:51 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUzWiIsInB1ciI6ImJsb2Jfa2V5In19--c755eed81b52b6627bb59dbfed519541ee91b030", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUyWiIsInB1ciI6ImJsb2Jfa2V5In19--5f2b3c0300edf28c372720efa602909404aa5825", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 3ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.6ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-03 00:33:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.7ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 620ms (Views: 0.6ms | ActiveRecord: 0.7ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUzWiIsInB1ciI6ImJsb2Jfa2V5In19--c755eed81b52b6627bb59dbfed519541ee91b030/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-03 00:33:11 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUzWiIsInB1ciI6ImJsb2Jfa2V5In19--c755eed81b52b6627bb59dbfed519541ee91b030", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (10.9ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 12ms (ActiveRecord: 0.0ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUyWiIsInB1ciI6ImJsb2Jfa2V5In19--5f2b3c0300edf28c372720efa602909404aa5825/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-03 00:33:11 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDU6MzM6NTEuNzUyWiIsInB1ciI6ImJsb2Jfa2V5In19--5f2b3c0300edf28c372720efa602909404aa5825", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (0.5ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-03 01:00:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.8ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1385ms (Views: 0.4ms | ActiveRecord: 0.8ms)


Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png" for ::1 at 2018-12-03 01:00:40 -0500
Started GET "/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686/3_Dysphoria_Blood%20Sister.png" for ::1 at 2018-12-03 01:00:40 -0500
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b450bb95c144b314d04db661188c5ffec10cc311", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::BlobsController#show as PNG
  Parameters: {"signed_id"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b6b2ac0ff067b7d005a4bc773fb42c3b0d067686", "filename"=>"3_Dysphoria_Blood Sister"}
  [1m[36mActiveStorage::Blob Load (0.3ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[36m  Disk Storage (0.4ms) [0m[34mGenerated URL for file at key: 8mznPCpmjkSkhzrfu3k36rqx (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODExWiIsInB1ciI6ImJsb2Jfa2V5In19--bd5edc4edca82d148d7cd98dbc169618ddfce2bb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODExWiIsInB1ciI6ImJsb2Jfa2V5In19--bd5edc4edca82d148d7cd98dbc169618ddfce2bb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png
Completed 302 Found in 2ms (ActiveRecord: 0.5ms)


  [1m[36mActiveStorage::Blob Load (1.6ms)[0m  [1m[34mSELECT  "active_storage_blobs".* FROM "active_storage_blobs" WHERE "active_storage_blobs"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[36m  Disk Storage (1.5ms) [0m[34mGenerated URL for file at key: ka4N9u32X5ETshYhWhr7Dhnp (http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODEyWiIsInB1ciI6ImJsb2Jfa2V5In19--558e028ecaf3ea5d80486ee89f2523fd26adf9c3/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png)[0m
Redirected to http://localhost:5100/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODEyWiIsInB1ciI6ImJsb2Jfa2V5In19--558e028ecaf3ea5d80486ee89f2523fd26adf9c3/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png
Completed 302 Found in 7ms (ActiveRecord: 2.9ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODExWiIsInB1ciI6ImJsb2Jfa2V5In19--bd5edc4edca82d148d7cd98dbc169618ddfce2bb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-03 01:00:40 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODExWiIsInB1ciI6ImJsb2Jfa2V5In19--bd5edc4edca82d148d7cd98dbc169618ddfce2bb", "filename"=>"3_Dysphoria_Blood Sister"}
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODEyWiIsInB1ciI6ImJsb2Jfa2V5In19--558e028ecaf3ea5d80486ee89f2523fd26adf9c3/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-03 01:00:40 -0500
[36m  Disk Storage (0.3ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODEyWiIsInB1ciI6ImJsb2Jfa2V5In19--558e028ecaf3ea5d80486ee89f2523fd26adf9c3", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
[36m  Disk Storage (0.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 1ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-03 01:02:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.3ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1398ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODExWiIsInB1ciI6ImJsb2Jfa2V5In19--bd5edc4edca82d148d7cd98dbc169618ddfce2bb/3_Dysphoria_Blood%20Sister.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%223_Dysphoria_Blood+Sister.png%22%3B+filename%2A%3DUTF-8%27%273_Dysphoria_Blood%2520Sister.png" for ::1 at 2018-12-03 01:02:23 -0500
Started GET "/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODEyWiIsInB1ciI6ImJsb2Jfa2V5In19--558e028ecaf3ea5d80486ee89f2523fd26adf9c3/4_Terrible%20Thing_AG%20&%20Brad%20Gordon.png?content_type=image%2Fjpeg&disposition=inline%3B+filename%3D%224_Terrible+Thing_AG+%2526+Brad+Gordon.png%22%3B+filename%2A%3DUTF-8%27%274_Terrible%2520Thing_AG%2520%2526%2520Brad%2520Gordon.png" for ::1 at 2018-12-03 01:02:23 -0500
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"4_Terrible Thing_AG %26 Brad Gordon.png\"; filename*=UTF-8''4_Terrible%20Thing_AG%20%26%20Brad%20Gordon.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDFyWVRST09YVXpNbGcxUlZSemFGbG9WMmh5TjBSb2JuQUdPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODEyWiIsInB1ciI6ImJsb2Jfa2V5In19--558e028ecaf3ea5d80486ee89f2523fd26adf9c3", "filename"=>"4_Terrible Thing_AG & Brad Gordon"}
Processing by ActiveStorage::DiskController#show as PNG
  Parameters: {"content_type"=>"image/jpeg", "disposition"=>"inline; filename=\"3_Dysphoria_Blood Sister.png\"; filename*=UTF-8''3_Dysphoria_Blood%20Sister.png", "encoded_key"=>"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaDA0YlhwdVVFTndiV3ByVTJ0b2VuSm1kVE5yTXpaeWNYZ0dPZ1pGVkE9PSIsImV4cCI6IjIwMTgtMTItMDNUMDY6MDU6NDAuODExWiIsInB1ciI6ImJsb2Jfa2V5In19--bd5edc4edca82d148d7cd98dbc169618ddfce2bb", "filename"=>"3_Dysphoria_Blood Sister"}
[36m  Disk Storage (1.2ms) [0m[34mDownloaded file from key: ka4N9u32X5ETshYhWhr7Dhnp[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


[36m  Disk Storage (1.0ms) [0m[34mDownloaded file from key: 8mznPCpmjkSkhzrfu3k36rqx[0m
Completed 200 OK in 2ms (ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-03 01:14:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>nil, "variables"=>{}, "query"=>"{\n  tracks {\n    id\n    service\n    media_url\n    media_query_url\n    title\n    artist\n    album\n    year\n    album_art_url\n    __typename\n  }\n}\n"}}
  [1m[36mTrack Load (0.5ms)[0m  [1m[34mSELECT "tracks".* FROM "tracks"[0m
Completed 200 OK in 1338ms (Views: 0.3ms | ActiveRecord: 0.5ms)


